{
  "hash": "f172f21a231c5290fc2cddf6eab80a5c",
  "result": {
    "markdown": "---\ntitle: \"Data retrieval with R using API calls\"\nsubtitle: \"The Swedish National Agency for Education database API\"\nauthor:\n  - name: 'Magnus Johansson'\n    affiliation: 'RISE Research Institutes of Sweden'\n    affiliation-url: 'https://ri.se/shic'\n    orcid: '0000-0003-1669-592X'\n  - name: 'Jens Mattsson'\n    affiliation: 'RISE Research Institutes of Sweden'\n    affiliation-url: 'https://ri.se/shic'\ndate: last-modified\ndate-format: iso\ngoogle-scholar: true\ncitation:\n  type: 'webpage'\nformat:\n  html:\n    css: api-styles.css\nexecute: \n  cache: true\n  warning: false\n  message: false\neditor_options: \n  chunk_output_type: console\n---\n\n\n## Background\n\nThis is a post documenting explorative work to retrieve data using the [database API](https://www.skolverket.se/om-oss/oppna-data/api-for-skolenhetsregistret) maintained Swedish National Agency for Education. The conditions for using the API and database are described in the [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/deed.en). The API is documented here: <https://api.skolverket.se/skolenhetsregistret/swagger-ui/index.html>.\n\n::: {.callout-note}\n### Note\nPlease note that this is just documentation of our work, not a guide. There will be mistakes and suboptimal routes taken. But in the end I hope we will produce something that may be useful to others. Not everyone will be interested in using the API for the same purpose as we had, so hopefully our troubleshooting will make the potential use wider.\n:::\n\nA lot of the output will be in Swedish, but you will probably be able to follow along even if your Swedish knowledge is limited. Basic word list:\n\n- school = skola\n- school unit code = Skolenhetskod\n\nThe purpose of this is two-fold. First, various kinds of data on school and municipality levels are of interest in the project [\"Data in dialogue\"](https://www.ri.se/en/what-we-do/projects/data-in-dialogue-risk-and-protective-factors-for-children-and-youth). Second, in order to conduct analysis of missing data and selection bias we need demographic data about students at the schools participating in school surveys that are used to assess risk and protective factors.\n\n::: {.callout-note}\n### Note\nWhile this blog post is written by me (Magnus), a lot of the initial trial and error work was done by my colleague Jens Mattsson.\n:::\n\n## Setting up\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-1_64e245bbb881ab00e3d307964281b0f7'}\n\n```{.r .cell-code}\nlibrary(httr)\nlibrary(arrow)\nlibrary(tidyverse)\nlibrary(rjson)\nlibrary(jsonlite)\nlibrary(readxl)\n```\n:::\n\n\nFirst, let's get a list of municipalities and their codes. The first two numbers in the four number code denotes the region. Sweden has 290 municipalities and 21 regions. For this project, we are interested in the regions of Stockholm and Uppsala, which have codes 01 and 03.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-2_4b666ae02053d40813d5692dbc745eb9'}\n\n```{.r .cell-code}\nmunicipalities <- read_parquet(\"2023-03-28_KOLADA_Municipality_list.parquet\") %>% \n  filter(str_detect(id, \"^01|^03\")) %>% \n  select(!type)\n\nglimpse(municipalities)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 34\nColumns: 2\n$ id    <chr> \"0127\", \"0162\", \"0125\", \"0381\", \"0136\", \"0331\", \"0126\", \"0305\", …\n$ title <chr> \"Botkyrka\", \"Danderyd\", \"Ekerö\", \"Enköping\", \"Haninge\", \"Heby\", …\n```\n:::\n:::\n\n\n## Getting data for one municipality\n\nLooking at the specifications of the API, we should be able to get all schools in a municipality by doing a call according to `/v1/kommun/{municipalityCode}`. Unfortunately, the API does not seem to allow making one call for multiple municipalities. The base URL is `https://api.skolverket.se/skolenhetsregistret`.\n\nWe'll start by getting data from one municipality.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-3_59e1f53f111d26ffd8467dfa7f27c785'}\n\n```{.r .cell-code}\ndata <- GET(\"https://api.skolverket.se/skolenhetsregistret/v1/kommun/0127\") %>% \n  content(\"text\") %>% \n  fromJSON()\n\nglimpse(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 3\n $ Uttagsdatum: chr \"2023-07-17T10:06:08.3666049+02:00\"\n $ Fotnot     : NULL\n $ Skolenheter:'data.frame':\t66 obs. of  5 variables:\n  ..$ Skolenhetskod : chr [1:66] \"98152284\" \"84411355\" \"82464552\" \"16762245\" ...\n  ..$ Kommunkod     : chr [1:66] \"0127\" \"0127\" \"0127\" \"0127\" ...\n  ..$ PeOrgNr       : chr [1:66] \"2120002882\" \"5565661815\" \"5562575786\" \"8024242391\" ...\n  ..$ Skolenhetsnamn: chr [1:66] \"Blåklintskolan särskola\" \"Kunskapsskolan Tumba\" \"Praktiska Tumba\" \"Edessaskolan\" ...\n  ..$ Status        : chr [1:66] \"Vilande\" \"Aktiv\" \"Vilande\" \"Aktiv\" ...\n```\n:::\n:::\n\n\nWe get a list of 3, where the data of interest seems to be within the nested dataframe `$Skolenheter`. Let's subset that into its own dataframe object.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-4_33509ac586e473a78b2e52b4381dee69'}\n\n```{.r .cell-code}\nschools <- data$Skolenheter\nglimpse(schools)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 66\nColumns: 5\n$ Skolenhetskod  <chr> \"98152284\", \"84411355\", \"82464552\", \"16762245\", \"751689…\n$ Kommunkod      <chr> \"0127\", \"0127\", \"0127\", \"0127\", \"0127\", \"0127\", \"0127\",…\n$ PeOrgNr        <chr> \"2120002882\", \"5565661815\", \"5562575786\", \"8024242391\",…\n$ Skolenhetsnamn <chr> \"Blåklintskolan särskola\", \"Kunskapsskolan Tumba\", \"Pra…\n$ Status         <chr> \"Vilande\", \"Aktiv\", \"Vilande\", \"Aktiv\", \"Vilande\", \"Akt…\n```\n:::\n:::\n\n\nNow, this is just a list of schools and their unit codes (`schools$Skolenhetskod`), it contains no data. But we need this list to know which school unit codes to retrieve data for. There is also a `Status` variable which seems to have the options of active or not.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-5_0c37d8bc1f6c32e0bb432fc2124c110b'}\n\n```{.r .cell-code}\nschools %>% \n  count(Status)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Status  n\n1    Aktiv 47\n2 Planerad  2\n3  Vilande 17\n```\n:::\n:::\n\n\nThere was also a third option for \"planned\". Not sure how to use this information at this point.\n\n### Data from one school\n\nWe'll retrieve data for one school first.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-6_d981d7a8a8d9529b8b2eeac8fdd223b1'}\n\n```{.r .cell-code}\nsdata <- GET(\"https://api.skolverket.se/skolenhetsregistret/v1/skolenhet/84411355\") %>% \n  content(\"text\") %>% \n  fromJSON()\n\nglimpse(sdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 3\n $ Uttagsdatum  : chr \"2023-07-17T02:15:09.2287954+02:00\"\n $ Fotnot       : NULL\n $ SkolenhetInfo:List of 19\n  ..$ Namn               : chr \"Kunskapsskolan Tumba\"\n  ..$ Rektorsnamn        : chr \"Henrik von Knorring\"\n  ..$ Skolenhetskod      : chr \"84411355\"\n  ..$ Epost              : chr \"info.tumba@kunskapsskolan.se\"\n  ..$ Telefon            : chr \"0733-173445\"\n  ..$ Webbadress         : chr \"https://www.kunskapsskolan.se\"\n  ..$ Besoksadress       :List of 4\n  .. ..$ Adress : chr \"Hans Stahles väg 17\"\n  .. ..$ Postnr : chr \"14741\"\n  .. ..$ Ort    : chr \"Tumba\"\n  .. ..$ GeoData:List of 5\n  ..$ Leveransadress     :List of 3\n  .. ..$ Adress: chr \"Hans Stahles väg 17\"\n  .. ..$ Postnr: chr \"14741\"\n  .. ..$ Ort   : chr \"Tumba\"\n  ..$ Utdelningsadress   :List of 3\n  .. ..$ Adress: chr \"Hans Stahles väg 17\"\n  .. ..$ Postnr: chr \"14741\"\n  .. ..$ Ort   : chr \"Tumba\"\n  ..$ Inriktningstyp     : chr \"Allmän\"\n  ..$ Skolenhetstyp      : chr \"Skolenhet\"\n  ..$ SkolaNamn          : chr \"Kunskapsskolan Tumba\"\n  ..$ Skolformer         :'data.frame':\t1 obs. of  15 variables:\n  .. ..$ type        : chr \"Grundskola\"\n  .. ..$ Benamning   : chr \"Grundskola\"\n  .. ..$ SkolformID  : int 5\n  .. ..$ SkolformKod : chr \"11\"\n  .. ..$ Ak1         : logi FALSE\n  .. ..$ Ak2         : logi FALSE\n  .. ..$ Ak3         : logi FALSE\n  .. ..$ Ak4         : logi TRUE\n  .. ..$ Ak5         : logi TRUE\n  .. ..$ Ak6         : logi TRUE\n  .. ..$ Ak7         : logi TRUE\n  .. ..$ Ak8         : logi TRUE\n  .. ..$ Ak9         : logi TRUE\n  .. ..$ Resursskola : logi FALSE\n  .. ..$ Sjukhusskola: logi FALSE\n  ..$ Kommun             :List of 2\n  .. ..$ Kommunkod: chr \"0127\"\n  .. ..$ Namn     : chr \"Botkyrka\"\n  ..$ Huvudman           :List of 3\n  .. ..$ PeOrgNr: chr \"5565661815\"\n  .. ..$ Namn   : chr \"Kunskapsskolan i Sverige Aktiebolag\"\n  .. ..$ Typ    : chr \"Enskild\"\n  ..$ Skolenhet_ValidFrom: chr \"2022-09-07T00:00:00\"\n  ..$ Status             : chr \"Aktiv\"\n  ..$ Startdatum         : chr \"2013-10-01\"\n  ..$ Nedlaggningsdatum  : NULL\n```\n:::\n:::\n\n\nThis provides a lot of information about the school itself, which can be useful. There is also a version 3 of the API, which contains more information:\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-7_5b925195ea9089d79649ec60256696b1'}\n\n```{.r .cell-code}\nsdataV3 <- GET(\"https://api.skolverket.se/planned-educations/v3/school-units/84411355\") %>% \n  content(\"text\") %>% \n  fromJSON()\n\nglimpse(sdataV3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 3\n $ status : chr \"OK\"\n $ message: chr \"\"\n $ body   :List of 16\n  ..$ code                      : chr \"84411355\"\n  ..$ name                      : chr \"Kunskapsskolan Tumba\"\n  ..$ contactInfo               :List of 4\n  .. ..$ email    : NULL\n  .. ..$ web      : chr \"https://www.kunskapsskolan.se\"\n  .. ..$ telephone: chr \"0733-173445\"\n  .. ..$ addresses:'data.frame':\t2 obs. of  4 variables:\n  ..$ geographicalAreaCode      : chr \"0127\"\n  ..$ wgs84_Lat                 : chr \"59.20011169538554\"\n  ..$ wgs84_Long                : chr \"17.846722627859616\"\n  ..$ sweRef_N                  : chr \"6565805\"\n  ..$ sweRef_E                  : chr \"662569\"\n  ..$ organisationRegistryNumber: chr \"5565661815\"\n  ..$ principalOrganizerType    : chr \"Fristående\"\n  ..$ corporationName           : chr \"Kunskapsskolan i Sverige Aktiebolag\"\n  ..$ companyForm               : chr \"Övriga aktiebolag\"\n  ..$ schoolOrientation         : chr \"Allmän\"\n  ..$ typeOfSchooling           :'data.frame':\t1 obs. of  3 variables:\n  .. ..$ code       : chr \"gr\"\n  .. ..$ displayName: chr \"Grundskolan\"\n  .. ..$ schoolYears:List of 1\n  ..$ abroadSchool              : logi FALSE\n  ..$ _links                    :List of 2\n  .. ..$ self      :List of 1\n  .. ..$ statistics:List of 1\n```\n:::\n:::\n\n\nCan we find statistics for the school?\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-8_ee58ccae2a67c9b13c72f068cf2b4b31'}\n\n```{.r .cell-code}\ntest <- GET(\"https://api.skolverket.se/planned-educations/v3/school-units/84411355/statistics\") %>% \n  content(\"text\") %>% \n  fromJSON()\n\nglimpse(test)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 3\n $ status : chr \"OK\"\n $ message: chr \"\"\n $ body   :List of 1\n  ..$ _links:List of 2\n  .. ..$ gr-statistics:List of 1\n  .. ..$ self         :List of 1\n```\n:::\n:::\n\n\nNo data, but some clues:\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-9_4f607329a88a59ba6b5259e291eab011'}\n\n```{.r .cell-code}\ntest$body$`_links`$`gr-statistics`\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$href\n[1] \"https://api.skolverket.se/planned-educations/v3/school-units/84411355/statistics/gr\"\n```\n:::\n:::\n\n\nWe'll try that URL.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-10_7baa731d601b73ee035c4453e82e5c4f'}\n\n```{.r .cell-code}\ntest <- GET(\"https://api.skolverket.se/planned-educations/v3/school-units/84411355/statistics/gr\") %>% \n  content(\"text\") %>% \n  fromJSON()\n\nglimpse(test)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 3\n $ status : chr \"OK\"\n $ message: chr \"\"\n $ body   :List of 24\n  ..$ schoolUnit                                           : chr \"84411355\"\n  ..$ specialTeacherPositions                              :'data.frame':\t5 obs. of  3 variables:\n  .. ..$ value     : chr [1:5] \".\" \".\" \".\" \".\" ...\n  .. ..$ valueType : chr [1:5] \"MISSING\" \"MISSING\" \"MISSING\" \"MISSING\" ...\n  .. ..$ timePeriod: chr [1:5] \"2022/23\" \"2021/22\" \"2020/21\" \"2019/20\" ...\n  ..$ studentsPerTeacherQuota                              :'data.frame':\t5 obs. of  3 variables:\n  .. ..$ value     : chr [1:5] \"15,5\" \"14,8\" \"16,6\" \"16,3\" ...\n  .. ..$ valueType : chr [1:5] \"EXISTS\" \"EXISTS\" \"EXISTS\" \"EXISTS\" ...\n  .. ..$ timePeriod: chr [1:5] \"2022/23\" \"2021/22\" \"2020/21\" \"2019/20\" ...\n  ..$ certifiedTeachersQuota                               :'data.frame':\t5 obs. of  3 variables:\n  .. ..$ value     : chr [1:5] \"67,4\" \"60,9\" \"56,2\" \"47,0\" ...\n  .. ..$ valueType : chr [1:5] \"EXISTS\" \"EXISTS\" \"EXISTS\" \"EXISTS\" ...\n  .. ..$ timePeriod: chr [1:5] \"2022/23\" \"2021/22\" \"2020/21\" \"2019/20\" ...\n  ..$ docLinks                                             : NULL\n  ..$ hasLibrary                                           : logi FALSE\n  ..$ specialEducatorsQuota                                :'data.frame':\t5 obs. of  3 variables:\n  .. ..$ value     : chr [1:5] \".\" \".\" \".\" \".\" ...\n  .. ..$ valueType : chr [1:5] \"MISSING\" \"MISSING\" \"MISSING\" \"MISSING\" ...\n  .. ..$ timePeriod: chr [1:5] \"2022/23\" \"2021/22\" \"2020/21\" \"2019/20\" ...\n  ..$ totalNumberOfPupils                                  :'data.frame':\t1 obs. of  3 variables:\n  .. ..$ value     : chr \"cirka 370\"\n  .. ..$ valueType : chr \"EXISTS\"\n  .. ..$ timePeriod: chr \"2022/23\"\n  ..$ ratioOfPupilsIn6thGradeWithAllSubjectsPassed         :'data.frame':\t1 obs. of  3 variables:\n  .. ..$ value     : chr \"61,0\"\n  .. ..$ valueType : chr \"EXISTS\"\n  .. ..$ timePeriod: chr \"2021/22\"\n  ..$ averageResultNationalTestsSubjectSVE6thGrade         :'data.frame':\t3 obs. of  3 variables:\n  .. ..$ value     : chr [1:3] \"13,4\" \"14,4\" \"13,6\"\n  .. ..$ valueType : chr [1:3] \"EXISTS\" \"EXISTS\" \"EXISTS\"\n  .. ..$ timePeriod: chr [1:3] \"2021/22\" \"2018/19\" \"2017/18\"\n  ..$ averageResultNationalTestsSubjectENG6thGrade         :'data.frame':\t3 obs. of  3 variables:\n  .. ..$ value     : chr [1:3] \"16,0\" \"15,8\" \"15,4\"\n  .. ..$ valueType : chr [1:3] \"EXISTS\" \"EXISTS\" \"EXISTS\"\n  .. ..$ timePeriod: chr [1:3] \"2021/22\" \"2018/19\" \"2017/18\"\n  ..$ averageResultNationalTestsSubjectMA6thGrade          :'data.frame':\t3 obs. of  3 variables:\n  .. ..$ value     : chr [1:3] \"9,5\" \"10,9\" \"12,4\"\n  .. ..$ valueType : chr [1:3] \"EXISTS\" \"EXISTS\" \"EXISTS\"\n  .. ..$ timePeriod: chr [1:3] \"2021/22\" \"2018/19\" \"2017/18\"\n  ..$ averageResultNationalTestsSubjectSVA6thGrade         :'data.frame':\t3 obs. of  3 variables:\n  .. ..$ value     : chr [1:3] \"10,2\" \"..\" \"..\"\n  .. ..$ valueType : chr [1:3] \"EXISTS\" \"OMITTED_DUE_TO_BASED_ON_FEW_PUPILS\" \"OMITTED_DUE_TO_BASED_ON_FEW_PUPILS\"\n  .. ..$ timePeriod: chr [1:3] \"2021/22\" \"2018/19\" \"2017/18\"\n  ..$ averageResultNationalTestsSubjectSVE9thGrade         :'data.frame':\t3 obs. of  3 variables:\n  .. ..$ value     : chr [1:3] \"14,4\" \"15,4\" \"14,5\"\n  .. ..$ valueType : chr [1:3] \"EXISTS\" \"EXISTS\" \"EXISTS\"\n  .. ..$ timePeriod: chr [1:3] \"2021/22\" \"2018/19\" \"2017/18\"\n  ..$ averageResultNationalTestsSubjectENG9thGrade         :'data.frame':\t3 obs. of  3 variables:\n  .. ..$ value     : chr [1:3] \"17,1\" \"16,1\" \"15,1\"\n  .. ..$ valueType : chr [1:3] \"EXISTS\" \"EXISTS\" \"EXISTS\"\n  .. ..$ timePeriod: chr [1:3] \"2021/22\" \"2018/19\" \"2017/18\"\n  ..$ averageResultNationalTestsSubjectMA9thGrade          :'data.frame':\t3 obs. of  3 variables:\n  .. ..$ value     : chr [1:3] \"12,1\" \"11,9\" \".\"\n  .. ..$ valueType : chr [1:3] \"EXISTS\" \"EXISTS\" \"MISSING\"\n  .. ..$ timePeriod: chr [1:3] \"2021/22\" \"2018/19\" \"2017/18\"\n  ..$ averageResultNationalTestsSubjectSVA9thGrade         :'data.frame':\t3 obs. of  3 variables:\n  .. ..$ value     : chr [1:3] \"14,6\" \"15,3\" \"13,6\"\n  .. ..$ valueType : chr [1:3] \"EXISTS\" \"EXISTS\" \"EXISTS\"\n  .. ..$ timePeriod: chr [1:3] \"2021/22\" \"2018/19\" \"2017/18\"\n  ..$ ratioOfPupilsIn9thGradeWithAllSubjectsPassed         :'data.frame':\t5 obs. of  3 variables:\n  .. ..$ value     : chr [1:5] \"85,2\" \"89,5\" \"90,2\" \"75,0\" ...\n  .. ..$ valueType : chr [1:5] \"EXISTS\" \"EXISTS\" \"EXISTS\" \"EXISTS\" ...\n  .. ..$ timePeriod: chr [1:5] \"2021/22\" \"2020/21\" \"2019/20\" \"2018/19\" ...\n  ..$ averageGradesMeritRating9thGrade                     :'data.frame':\t5 obs. of  3 variables:\n  .. ..$ value     : chr [1:5] \"254,8\" \"261,5\" \"272,3\" \"249,0\" ...\n  .. ..$ valueType : chr [1:5] \"EXISTS\" \"EXISTS\" \"EXISTS\" \"EXISTS\" ...\n  .. ..$ timePeriod: chr [1:5] \"2021/22\" \"2020/21\" \"2019/20\" \"2018/19\" ...\n  ..$ ratioOfPupils9thGradeEligibleForNationalProgramYR    :'data.frame':\t5 obs. of  3 variables:\n  .. ..$ value     : chr [1:5] \"93,8\" \"~100\" \"~100\" \"91,7\" ...\n  .. ..$ valueType : chr [1:5] \"EXISTS\" \"ROUNDED_OFF_DUE_TO_FEW_PUPILS_NOT_ELIGIBLE\" \"ROUNDED_OFF_DUE_TO_FEW_PUPILS_NOT_ELIGIBLE\" \"EXISTS\" ...\n  .. ..$ timePeriod: chr [1:5] \"2021/22\" \"2020/21\" \"2019/20\" \"2018/19\" ...\n  ..$ ratioOfPupils9thGradeEligibleForNationalProgramES    :'data.frame':\t5 obs. of  3 variables:\n  .. ..$ value     : chr [1:5] \"92,6\" \"94,7\" \"~100\" \"90,5\" ...\n  .. ..$ valueType : chr [1:5] \"EXISTS\" \"EXISTS\" \"ROUNDED_OFF_DUE_TO_FEW_PUPILS_NOT_ELIGIBLE\" \"EXISTS\" ...\n  .. ..$ timePeriod: chr [1:5] \"2021/22\" \"2020/21\" \"2019/20\" \"2018/19\" ...\n  ..$ ratioOfPupils9thGradeEligibleForNationalProgramSAEKHU:'data.frame':\t5 obs. of  3 variables:\n  .. ..$ value     : chr [1:5] \"91,4\" \"93,7\" \"~100\" \"82,1\" ...\n  .. ..$ valueType : chr [1:5] \"EXISTS\" \"EXISTS\" \"ROUNDED_OFF_DUE_TO_FEW_PUPILS_NOT_ELIGIBLE\" \"EXISTS\" ...\n  .. ..$ timePeriod: chr [1:5] \"2021/22\" \"2020/21\" \"2019/20\" \"2018/19\" ...\n  ..$ ratioOfPupils9thGradeEligibleForNationalProgramNATE  :'data.frame':\t5 obs. of  3 variables:\n  .. ..$ value     : chr [1:5] \"88,9\" \"94,7\" \"91,8\" \"86,9\" ...\n  .. ..$ valueType : chr [1:5] \"EXISTS\" \"EXISTS\" \"EXISTS\" \"EXISTS\" ...\n  .. ..$ timePeriod: chr [1:5] \"2021/22\" \"2020/21\" \"2019/20\" \"2018/19\" ...\n  ..$ _links                                               :List of 1\n  .. ..$ self:List of 1\n```\n:::\n:::\n\n\nIt seems like we need to specify the type of school to retrieve the stats. In this case, \"gr\" for \"grundskola\", which corresponds to classes 1-9 in Sweden (ages ~ 7-15).\n\n### Data wrangling\n\nSome data wrangling will be needed to get the list() format data into a dataframe that can be used as a template for downloading and merging data for all schools we are interested in.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-11_2dbf5dee276ccb21dac75f2778d6e376'}\n\n```{.r .cell-code}\nstats <- test$body %>% \n  pluck(\"ratioOfPupils9thGradeEligibleForNationalProgramNATE\")\n```\n:::\n\n\nSo that works to get one list out. Now let's do all that contain a variable named `value` and get them in a single dataframe. A relatively simple way to do this (in the current data) is to filter the list elements that contain more than one value.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-12_61ed07abf6728a881f8a8fe902986338'}\n\n```{.r .cell-code}\nvars <- which(sapply(test$body, function(x) length(x) > 1))\nnames(vars)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"specialTeacherPositions\"                              \n [2] \"studentsPerTeacherQuota\"                              \n [3] \"certifiedTeachersQuota\"                               \n [4] \"specialEducatorsQuota\"                                \n [5] \"totalNumberOfPupils\"                                  \n [6] \"ratioOfPupilsIn6thGradeWithAllSubjectsPassed\"         \n [7] \"averageResultNationalTestsSubjectSVE6thGrade\"         \n [8] \"averageResultNationalTestsSubjectENG6thGrade\"         \n [9] \"averageResultNationalTestsSubjectMA6thGrade\"          \n[10] \"averageResultNationalTestsSubjectSVA6thGrade\"         \n[11] \"averageResultNationalTestsSubjectSVE9thGrade\"         \n[12] \"averageResultNationalTestsSubjectENG9thGrade\"         \n[13] \"averageResultNationalTestsSubjectMA9thGrade\"          \n[14] \"averageResultNationalTestsSubjectSVA9thGrade\"         \n[15] \"ratioOfPupilsIn9thGradeWithAllSubjectsPassed\"         \n[16] \"averageGradesMeritRating9thGrade\"                     \n[17] \"ratioOfPupils9thGradeEligibleForNationalProgramYR\"    \n[18] \"ratioOfPupils9thGradeEligibleForNationalProgramES\"    \n[19] \"ratioOfPupils9thGradeEligibleForNationalProgramSAEKHU\"\n[20] \"ratioOfPupils9thGradeEligibleForNationalProgramNATE\"  \n```\n:::\n:::\n\n\nThen we can bind them together.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-13_6905eb1f1c26497362cd1c2acef8a635'}\n\n```{.r .cell-code}\n# create empty dataframe to store output of loop in\ndf_total <- data.frame()\n\nfor (i in names(vars)){\n  tmp <- test$body %>% \n    pluck(i) %>% \n    add_column(variable = i)\n  df_total <- rbind(df_total,tmp)\n}\n\nglimpse(df_total)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 76\nColumns: 4\n$ value      <chr> \".\", \".\", \".\", \".\", \".\", \"15,5\", \"14,8\", \"16,6\", \"16,3\", \"1…\n$ valueType  <chr> \"MISSING\", \"MISSING\", \"MISSING\", \"MISSING\", \"MISSING\", \"EXI…\n$ timePeriod <chr> \"2022/23\", \"2021/22\", \"2020/21\", \"2019/20\", \"2018/19\", \"202…\n$ variable   <chr> \"specialTeacherPositions\", \"specialTeacherPositions\", \"spec…\n```\n:::\n:::\n\n\nLooks good, although there will probably be a lot of recoding needed later.\n\n### Getting data from multiple schools\n\nSince the API demands that we specify the type of school in the API call, we need to add this information to the list of schools. This means that we first need to retrieve the basic information for each school.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-14_c5de67b4d8ed2b4a1bd34e8c7e7fc62a'}\n\n```{.r .cell-code}\nsdataV3 <- GET(\"https://api.skolverket.se/planned-educations/v3/school-units/84411355\") %>% \n  content(\"text\") %>% \n  fromJSON()\n\nsdataV3$body$typeOfSchooling$code\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"gr\"\n```\n:::\n:::\n\n\nSo that is where we find the type code for each school.\n\n#### Check if all schools have data in the database.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-15_62d5cbf88d9785a3dd771e79e193bc88'}\n\n```{.r .cell-code}\nschoolsAvailable <- data.frame()\nfor (i in schools$Skolenhetskod) {\n  tmp <- http_status(GET(paste0(\"https://api.skolverket.se/planned-educations/v3/school-units/\", i))) %>%\n    pluck(\"reason\") %>%\n    as.data.frame(nm = \"status\") %>%\n    add_column(Skolenhetskod = i)\n  schoolsAvailable <- rbind(schoolsAvailable, tmp)\n}\n\nschoolsAvailable %>% \n  count(status)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     status  n\n1 Not Found 14\n2        OK 52\n```\n:::\n:::\n\n\n14 schools are not in the database and need to be removed from the list of schools before we retrieve data. Maybe they match up with the `Status` variable?\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-16_4a4ba923f93b5d37ab5d5a429b42d16a'}\n\n```{.r .cell-code}\nschools %>% \n  left_join(.,schoolsAvailable, by = \"Skolenhetskod\") %>% \n  filter(!status == \"OK\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Skolenhetskod Kommunkod    PeOrgNr                       Skolenhetsnamn\n1       98152284      0127 2120002882              Blåklintskolan särskola\n2       82464552      0127 5562575786                      Praktiska Tumba\n3       75168956      0127 2120002882                      Borggruppen 1GR\n4       34165541      0127 8020170026              Stockholms Folkhögskola\n5       30755074      0127 2120002882                  Björkhaga Skola 1GR\n6       66301878      0127 2120002882         Enheten för språk och kultur\n7       96827136      0127 5566446224                       Gryningeskolan\n8       58395177      0127 2120002882 S:t Botvids gymnasiums mottagarenhet\n9       60492213      0127 2120002882                         Språkcentrum\n10      43096141      0127 8024030119            Botkyrka Folkhögskola SFI\n11      20171551      0127 2120002882          Tallidsskolan träningsskola\n12      75727919      0127 5590247374                 Lumiaskolan Botkyrka\n13      26480061      0127 5566139290              Thoren Framtid Botkyrka\n14      81020581      0127 2120002882           Borgskolan F-klass Gul 1GR\n     Status    status\n1   Vilande Not Found\n2   Vilande Not Found\n3   Vilande Not Found\n4   Vilande Not Found\n5   Vilande Not Found\n6   Vilande Not Found\n7   Vilande Not Found\n8   Vilande Not Found\n9   Vilande Not Found\n10  Vilande Not Found\n11  Vilande Not Found\n12 Planerad Not Found\n13 Planerad Not Found\n14  Vilande Not Found\n```\n:::\n:::\n\nIndeed, but not a perfect match, since the numbers don't add up when compared to this:\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-17_085244a954f2e627c86466e86dc54760'}\n\n```{.r .cell-code}\nschools %>% \n  count(Status)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Status  n\n1    Aktiv 47\n2 Planerad  2\n3  Vilande 17\n```\n:::\n:::\n\n\nProceeding to remove schools unavailable in database.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-18_ba11b6ee6bef096fe5345b09ee6095b9'}\n\n```{.r .cell-code}\nschoolsFiltered <- schools %>% \n  left_join(.,schoolsAvailable, by = \"Skolenhetskod\") %>% \n  filter(status == \"OK\") %>% \n  select(!status)\n\nschoolTypes <- data.frame()\n\nfor (i in schoolsFiltered$Skolenhetskod) {\n  \n  tmp <- GET(paste0(\"https://api.skolverket.se/planned-educations/v3/school-units/\", i)) %>% \n    content(\"text\") %>% \n    fromJSON()\n  tmp2 <- data.frame(\n    type = tmp$body$typeOfSchooling$code,\n    Skolenhetskod = i)\n                     \n  schoolTypes <- rbind(schoolTypes,tmp2)\n}\n  \nglimpse(schoolTypes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 82\nColumns: 2\n$ type          <chr> \"gr\", \"fsk\", \"gr\", \"fsk\", \"gr\", \"gy\", \"gy\", \"gy\", \"fsk\",…\n$ Skolenhetskod <chr> \"84411355\", \"16762245\", \"16762245\", \"29524966\", \"2952496…\n```\n:::\n:::\n\n\nHmm. We have 82 schools in this set, rather than 52. Maybe some schools have multiple types?\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-19_e7f7badf92676d66353a135550de0923'}\n\n```{.r .cell-code}\nschoolTypes %>% \n  count(Skolenhetskod) %>% \n  filter(n > 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Skolenhetskod n\n1       10495223 2\n2       10657244 2\n3       15620768 2\n4       16762245 2\n5       18534178 2\n6       25506439 2\n7       25918983 2\n8       29524966 2\n9       36350546 2\n10      38661388 2\n11      40631085 2\n12      43238662 2\n13      45757947 2\n14      51863294 2\n15      53426548 2\n16      56417100 2\n17      57228484 2\n18      57850353 2\n19      58310322 2\n20      67742754 2\n21      71048800 2\n22      75580959 2\n23      80378022 3\n24      80731562 2\n25      84891659 2\n26      86192571 2\n27      86985859 2\n28      96113241 3\n```\n:::\n:::\n\n\nYes, most of them do.\n\n#### Data retrieval\n\nSince we have two variables to loop over, we could use a nested `for()` loop, but we could also use `map2()` to retrieve data for all schools.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-20_183ad60cce35257338155ba19c6e0e21'}\n\n```{.r .cell-code}\nschoolData <- map2(\n  .x = schoolTypes$Skolenhetskod,\n  .y = schoolTypes$type,\n  ~ GET(paste0(\"https://api.skolverket.se/planned-educations/v3/school-units/\", .x,\"/statistics/\", .y)) %>%\n    content(\"text\") %>%\n    fromJSON()\n)\n```\n:::\n\n\n### Unnesting multiple lists\n\nNext step is to get each schools data from a list element to a dataframe, and then combine all of them. We already did the first part for one school, so let's expand on that.\n\nWe'll define a function to get the data from one school.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-21_0c509b0e3f5bda0de7df76a07d172dec'}\n\n```{.r .cell-code}\noneSchool <- function(listN) {\n  schoolUnit <- schoolData[[listN]]$body$schoolUnit\n  df_total <- data.frame()\n\n  for (i in names(vars)) {\n    tmp <- schoolData[[listN]]$body %>%\n      pluck(i) %>%\n      add_column(variable = i,\n                 Skolenhetskod = schoolUnit)\n    df_total <- rbind(df_total, tmp)\n  }\n  return(df_total)\n}\n```\n:::\n\n\nTest the function.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-22_abe979285e6f5c8470b0c418b2f49d97'}\n\n```{.r .cell-code}\noneSchool(1) %>% \n  head(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   value valueType timePeriod                variable Skolenhetskod\n1      .   MISSING    2022/23 specialTeacherPositions      84411355\n2      .   MISSING    2021/22 specialTeacherPositions      84411355\n3      .   MISSING    2020/21 specialTeacherPositions      84411355\n4      .   MISSING    2019/20 specialTeacherPositions      84411355\n5      .   MISSING    2018/19 specialTeacherPositions      84411355\n6   15,5    EXISTS    2022/23 studentsPerTeacherQuota      84411355\n7   14,8    EXISTS    2021/22 studentsPerTeacherQuota      84411355\n8   16,6    EXISTS    2020/21 studentsPerTeacherQuota      84411355\n9   16,3    EXISTS    2019/20 studentsPerTeacherQuota      84411355\n10  15,3    EXISTS    2018/19 studentsPerTeacherQuota      84411355\n```\n:::\n:::\n\n\nLooks good.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-23_e982483805dc45aa2b485c54bfaf6077'}\n\n```{.r .cell-code}\nnestedOutput <- map(c(1:length(schoolData)), ~ oneSchool(.x))\n```\n:::\n\n\nThis fails at index 2. **(Code is not run since it won't allow the output to be rendered)**\n\n### Troubleshooting\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-24_e0868e90b780a86b4c49f0f5a1ad2363'}\n\n```{.r .cell-code}\nschoolData[[2]]$body\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$schoolUnit\n[1] \"16762245\"\n\n$specialTeacherPositions\n  value valueType timePeriod\n1     .   MISSING    2022/23\n2     .   MISSING    2021/22\n3     .   MISSING    2020/21\n4     .   MISSING    2019/20\n5     .   MISSING    2018/19\n\n$studentsPerTeacherQuota\n  value valueType timePeriod\n1  13,0    EXISTS    2022/23\n2  11,0    EXISTS    2021/22\n3  12,0    EXISTS    2020/21\n4  12,0    EXISTS    2019/20\n5  13,7    EXISTS    2018/19\n\n$certifiedTeachersQuota\n  value valueType timePeriod\n1   0,0    EXISTS    2022/23\n2   0,0    EXISTS    2021/22\n3  50,0    EXISTS    2020/21\n4  50,0    EXISTS    2019/20\n5  57,1    EXISTS    2018/19\n\n$docLinks\nNULL\n\n$hasLibrary\n[1] FALSE\n\n$totalNumberOfPupils\n     value valueType timePeriod\n1 cirka 30    EXISTS    2022/23\n\n$`_links`\n$`_links`$self\n$`_links`$self$href\n[1] \"https://api.skolverket.se/planned-educations/v3/school-units/16762245/statistics/fsk\"\n```\n:::\n:::\n\n\nLooks like not all schools have the same data variables. We'll have to work that into the function\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-25_c862bd048e54432c1a9fef25532d9cf9'}\n\n```{.r .cell-code}\noneSchool <- function(listN) {\n  schoolUnit <- schoolData[[listN]]$body$schoolUnit\n  vars <- which(sapply(schoolData[[listN]]$body, function(x) length(x) > 1)) # added line of code\n  df_total <- data.frame()\n\n  for (i in names(vars)) {\n    tmp <- schoolData[[listN]]$body %>%\n      pluck(i) %>%\n      add_column(variable = i,\n                 Skolenhetskod = schoolUnit)\n    df_total <- rbind(df_total, tmp)\n  }\n  return(df_total)\n}\n```\n:::\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-26_851e6d3437e4950bd79a3f4ba33f09ab'}\n\n```{.r .cell-code}\nnestedOutput <- map(c(1:length(schoolData)), ~ oneSchool(.x))\n```\n:::\n\n\nFailing at index 6... **(Code is not run since it won't allow the output to be rendered)**\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-27_b21c985f1639715a3073175856f5f81b'}\n\n```{.r .cell-code}\nschoolData[[6]]$body$programMetrics %>% \n  head(5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  programCode averageResultNationalTestsSubjectSVE sveSubjectTest\n1          EK                   13,1, EXISTS, VT22      Svenska 3\n2         IMV                      NA, MISSING, NA           <NA>\n3          NA                   15,5, EXISTS, VT22      Svenska 3\n4          SA                   12,7, EXISTS, VT22      Svenska 3\n5          TE                   15,7, EXISTS, VT22      Svenska 3\n          averageResultNationalTestsSubjectSVA           svaSubjectTest\n1 .., OMITTED_DUE_TO_BASED_ON_FEW_PUPILS, VT22 Svenska som andraspråk 3\n2                              NA, MISSING, NA                     <NA>\n3                           15,9, EXISTS, VT22 Svenska som andraspråk 3\n4                           14,0, EXISTS, VT22 Svenska som andraspråk 3\n5 .., OMITTED_DUE_TO_BASED_ON_FEW_PUPILS, VT22 Svenska som andraspråk 3\n  averageResultNationalTestsSubjectMA1 ma1SubjectTest\n1                   11,8, EXISTS, VT22   Matematik 2B\n2                      NA, MISSING, NA           <NA>\n3                      NA, MISSING, NA           <NA>\n4                   10,4, EXISTS, VT22   Matematik 2B\n5                      NA, MISSING, NA           <NA>\n  averageResultNationalTestsSubjectMA2 ma2SubjectTest\n1                   10,3, EXISTS, VT22   Matematik 3B\n2                      NA, MISSING, NA           <NA>\n3                   13,5, EXISTS, VT22    Matematik 4\n4                      NA, MISSING, NA           <NA>\n5                   11,3, EXISTS, VT22    Matematik 4\n  averageResultNationalTestsSubjectENG engSubjectTest schoolUnit\n1                   15,8, EXISTS, VT22     Engelska 6   26334561\n2                      NA, MISSING, NA           <NA>   26334561\n3                   16,4, EXISTS, VT22     Engelska 6   26334561\n4                   14,9, EXISTS, VT22     Engelska 6   26334561\n5                   16,6, EXISTS, VT22     Engelska 6   26334561\n  specialTeacherPositions studentsPerTeacherQuota certifiedTeachersQuota\n1    NA, MISSING, 2022/23   16,5, EXISTS, 2022/23  88,7, EXISTS, 2022/23\n2    NA, MISSING, 2022/23   16,5, EXISTS, 2022/23  88,7, EXISTS, 2022/23\n3    NA, MISSING, 2022/23   16,5, EXISTS, 2022/23  88,7, EXISTS, 2022/23\n4    NA, MISSING, 2022/23   16,5, EXISTS, 2022/23  88,7, EXISTS, 2022/23\n5    NA, MISSING, 2022/23   16,5, EXISTS, 2022/23  88,7, EXISTS, 2022/23\n  docLinks hasLibrary        totalNumberOfPupils\n1       NA       TRUE cirka 180, EXISTS, 2022/23\n2       NA       TRUE  cirka 10, EXISTS, 2022/23\n3       NA       TRUE cirka 210, EXISTS, 2022/23\n4       NA       TRUE cirka 180, EXISTS, 2022/23\n5       NA       TRUE  cirka 90, EXISTS, 2022/23\n                                                                     ratioOfStudentsEligibleForUndergraduateEducation\n1 98,4, 100,0, 90,7, 94,7, 100,0, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19, 2017/18\n2                                                                                                                NULL\n3   96,7, 94,4, 94,4, 94,3, 86,6, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19, 2017/18\n4   93,1, 92,7, 87,3, 96,4, 89,4, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19, 2017/18\n5                         96,7, 88,9, 100,0, 87,5, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19\n                                                                                            gradesPointsForStudents\n1 14,2, 14,7, 14,1, 15,0, 14,2, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19, 2017/18\n2                                                                                                              NULL\n3 15,6, 15,0, 16,5, 15,4, 14,3, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19, 2017/18\n4 14,2, 14,6, 14,2, 13,5, 13,6, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19, 2017/18\n5                        15,6, 14,9, 15,4, 14,0, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19\n                                                                                    gradesPointsForStudentsWithExam\n1 14,3, 14,7, 14,4, 15,2, 14,2, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19, 2017/18\n2                                                                                                              NULL\n3 15,8, 15,3, 16,9, 15,6, 15,1, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19, 2017/18\n4 14,6, 15,0, 15,0, 13,8, 14,1, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19, 2017/18\n5                        15,7, 15,7, 15,4, 14,9, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19\n                                                                                   ratioOfPupilsWithExamWithin3Years\n1 96,8, 100,0, 86,0, 91,2, 89,7, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2019/20, 2018/19, 2017/18, 2016/17, 2015/16\n2                                                                                                               NULL\n3  93,4, 86,9, 86,7, 90,1, 77,8, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2019/20, 2018/19, 2017/18, 2016/17, 2015/16\n4  86,4, 83,6, 78,6, 85,7, 74,3, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2019/20, 2018/19, 2017/18, 2016/17, 2015/16\n5                        93,8, 83,3, 100,0, 82,4, EXISTS, EXISTS, EXISTS, EXISTS, 2019/20, 2018/19, 2017/18, 2016/17\n   admissionPointsMin admissionPointsAverage admissionPointsSemester\n1 260,0, EXISTS, 2022    280,0, EXISTS, 2022                      NA\n2     NA, MISSING, NA        NA, MISSING, NA                      NA\n3 267,5, EXISTS, 2022    305,9, EXISTS, 2022                      NA\n4 247,5, EXISTS, 2022    278,8, EXISTS, 2022                      NA\n5 270,0, EXISTS, 2022    290,2, EXISTS, 2022                      NA\n  specialEducatorsQuota\n1   ., MISSING, 2022/23\n2   ., MISSING, 2022/23\n3   ., MISSING, 2022/23\n4   ., MISSING, 2022/23\n5   ., MISSING, 2022/23\n                                                                                 href\n1 https://api.skolverket.se/planned-educations/v3/school-units/26334561/statistics/gy\n2 https://api.skolverket.se/planned-educations/v3/school-units/26334561/statistics/gy\n3 https://api.skolverket.se/planned-educations/v3/school-units/26334561/statistics/gy\n4 https://api.skolverket.se/planned-educations/v3/school-units/26334561/statistics/gy\n5 https://api.skolverket.se/planned-educations/v3/school-units/26334561/statistics/gy\n```\n:::\n:::\n\n\nThere is a variable that has more than 3 columns, which doesn't fit into our data structure.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-28_c7e8486ee415980e343f91f224fb07a0'}\n\n```{.r .cell-code}\nschoolData[[6]]$body$schoolUnit\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNULL\n```\n:::\n:::\n\n\nNo unit code in the data, at least not at the position we expected it to be stored at. We can see the school unit code in the previous code chunk.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-29_708ff454d2ae4e3b410855bdb29cef1a'}\n\n```{.r .cell-code}\nschoolTypes %>% \n  slice(6)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  type Skolenhetskod\n1   gy      26334561\n```\n:::\n:::\n\n\nThis is \"gy\", a Gymnasieskola.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-30_3b1a764117bf3dccf4f31982c0b196fe'}\n\n```{.r .cell-code}\nschoolTypes %>% \n  rownames_to_column() %>% \n  filter(type == \"gy\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  rowname type Skolenhetskod\n1       6   gy      26334561\n2       7   gy      40386043\n3       8   gy      97758137\n4      18   gy      53400472\n5      74   gy      60096875\n```\n:::\n:::\n\n\nLooks like we have 5 of those. Maybe they all share the same structure?\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-31_a001f2de2925cbfc74301345acf7e647'}\n\n```{.r .cell-code}\ngySchools <- schoolTypes %>% \n  rownames_to_column() %>% \n  filter(type == \"gy\") %>% \n  pull(rowname) %>% \n  as.numeric()\n\nmap(gySchools, ~ names(schoolData[[.x]]$body))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n[1] \"programMetrics\"          \"specialTeacherPositions\"\n[3] \"studentsPerTeacherQuota\" \"certifiedTeachersQuota\" \n[5] \"specialEducatorsQuota\"   \"totalNumberOfPupils\"    \n\n[[2]]\n[1] \"programMetrics\"          \"specialTeacherPositions\"\n[3] \"studentsPerTeacherQuota\" \"certifiedTeachersQuota\" \n[5] \"specialEducatorsQuota\"   \"totalNumberOfPupils\"    \n\n[[3]]\n[1] \"programMetrics\"          \"specialTeacherPositions\"\n[3] \"studentsPerTeacherQuota\" \"certifiedTeachersQuota\" \n[5] \"specialEducatorsQuota\"   \"totalNumberOfPupils\"    \n\n[[4]]\n[1] \"programMetrics\"          \"specialTeacherPositions\"\n[3] \"studentsPerTeacherQuota\" \"certifiedTeachersQuota\" \n[5] \"specialEducatorsQuota\"   \"totalNumberOfPupils\"    \n\n[[5]]\n[1] \"programMetrics\"          \"specialTeacherPositions\"\n[3] \"studentsPerTeacherQuota\" \"certifiedTeachersQuota\" \n[5] \"specialEducatorsQuota\"   \"totalNumberOfPupils\"    \n```\n:::\n:::\n\n\nThey do. Perhaps we should back up and just focus on one type of schools, and sort the differences out later on.\n\nWhich types are available?\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-32_eb53479e686b09b723ceaa877622a803'}\n\n```{.r .cell-code}\nschoolTypes %>% \n  count(type)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    type  n\n1    fsk 27\n2     gr 34\n3   gran 10\n4     gy  5\n5   gyan  2\n6    sfi  1\n7    vux  2\n8 vuxgys  1\n```\n:::\n:::\n\n\nLet's get the full descriptions of these abbreviations.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-33_77ba43a1d542ebc37cebc57d87f703f8'}\n\n```{.r .cell-code}\nschoolTypes <- data.frame()\n\nfor (i in schoolsFiltered$Skolenhetskod) {\n  \n  tmp <- GET(paste0(\"https://api.skolverket.se/planned-educations/v3/school-units/\", i)) %>% \n    content(\"text\") %>% \n    fromJSON()\n  tmp2 <- data.frame(\n    type = tmp$body$typeOfSchooling$code,\n    typeDesc = tmp$body$typeOfSchooling$displayName,\n    Skolenhetskod = i)\n                     \n  schoolTypes <- rbind(schoolTypes,tmp2)\n}\n\nschoolTypes %>% \n  count(typeDesc,type)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                           typeDesc   type  n\n1                               Anpassad grundskola   gran 10\n2                            Anpassad gymnasieskola   gyan  2\n3                                   Förskoleklassen    fsk 27\n4                                       Grundskolan     gr 34\n5                                    Gymnasieskolan     gy  5\n6 Kommunal vuxenutbildning i svenska för invandrare    sfi  1\n7        Kommunal vuxenutbildning på gymnasial nivå    vux  2\n8   Särskild utbildning för vuxna på gymnasial nivå vuxgys  1\n```\n:::\n:::\n\n\nFor our purposes, we are primarily interested in gr and gy, and some stats from fsk, but not the rest. This filtering should of course have been done earlier, but the first part of this post was written on a Saturday after 2 weeks of vacation and my brain was not quite up to speed...\n\n### Data retrieval with filtering on school types\n\nWe'll do them separately this time, starting with \"gr\" only.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-34_e30f53c068e6e853e12a7aafef528d63'}\n\n```{.r .cell-code}\nmapSchoolUnits <- schoolTypes %>% \n  rownames_to_column() %>% \n  filter(type == \"gr\") %>% \n  pull(rowname) %>% \n  as.numeric()\n         \nnestedOutputGR <- map(mapSchoolUnits, ~ oneSchool(.x))\n\nglimpse(nestedOutputGR[[1]])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 76\nColumns: 5\n$ value         <chr> \".\", \".\", \".\", \".\", \".\", \"15,5\", \"14,8\", \"16,6\", \"16,3\",…\n$ valueType     <chr> \"MISSING\", \"MISSING\", \"MISSING\", \"MISSING\", \"MISSING\", \"…\n$ timePeriod    <chr> \"2022/23\", \"2021/22\", \"2020/21\", \"2019/20\", \"2018/19\", \"…\n$ variable      <chr> \"specialTeacherPositions\", \"specialTeacherPositions\", \"s…\n$ Skolenhetskod <chr> \"84411355\", \"84411355\", \"84411355\", \"84411355\", \"8441135…\n```\n:::\n:::\n\n\nNow each school (of type \"gr\") has its own dataframe, stored within the list object `nestedOutputGR`. Next step is to combine them into one dataframe.\n\n### Combining dataframes\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-35_84d0588fbc9a8aecf82a0cf3769ce7e1'}\n\n```{.r .cell-code}\nunnestedOutputGR <- map_dfr(c(1:length(nestedOutputGR)), ~ do.call(bind_rows, nestedOutputGR[[.x]]))\nglimpse(unnestedOutputGR)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,962\nColumns: 5\n$ value         <chr> \".\", \".\", \".\", \".\", \".\", \"15,5\", \"14,8\", \"16,6\", \"16,3\",…\n$ valueType     <chr> \"MISSING\", \"MISSING\", \"MISSING\", \"MISSING\", \"MISSING\", \"…\n$ timePeriod    <chr> \"2022/23\", \"2021/22\", \"2020/21\", \"2019/20\", \"2018/19\", \"…\n$ variable      <chr> \"specialTeacherPositions\", \"specialTeacherPositions\", \"s…\n$ Skolenhetskod <chr> \"84411355\", \"84411355\", \"84411355\", \"84411355\", \"8441135…\n```\n:::\n:::\n\n\nData is now in long format, which will be useful for some uses, and we can use `pivot_wider()` to change format when needed.\n\nAll variables are class \"character\", which is fine for some, but `timePeriod` is a date variable, and `value` has \".\" for missing and \",\" as decimal sign. This needs to be modified.\n\n## Variables\n\nLet's have a look at the variables available in the data.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-36_ce96ea3311eef869c11455a455771abd'}\n\n```{.r .cell-code}\nunnestedOutputGR %>% \n  count(variable)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 20 × 2\n   variable                                                  n\n   <chr>                                                 <int>\n 1 averageGradesMeritRating9thGrade                        109\n 2 averageResultNationalTestsSubjectENG6thGrade             78\n 3 averageResultNationalTestsSubjectENG9thGrade             66\n 4 averageResultNationalTestsSubjectMA6thGrade              78\n 5 averageResultNationalTestsSubjectMA9thGrade              66\n 6 averageResultNationalTestsSubjectSVA6thGrade             78\n 7 averageResultNationalTestsSubjectSVA9thGrade             66\n 8 averageResultNationalTestsSubjectSVE6thGrade             78\n 9 averageResultNationalTestsSubjectSVE9thGrade             66\n10 certifiedTeachersQuota                                  166\n11 ratioOfPupils9thGradeEligibleForNationalProgramES       109\n12 ratioOfPupils9thGradeEligibleForNationalProgramNATE     109\n13 ratioOfPupils9thGradeEligibleForNationalProgramSAEKHU   109\n14 ratioOfPupils9thGradeEligibleForNationalProgramYR       109\n15 ratioOfPupilsIn6thGradeWithAllSubjectsPassed             34\n16 ratioOfPupilsIn9thGradeWithAllSubjectsPassed            109\n17 specialEducatorsQuota                                   166\n18 specialTeacherPositions                                 166\n19 studentsPerTeacherQuota                                 166\n20 totalNumberOfPupils                                      34\n```\n:::\n:::\n\n\n### Types\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-37_7835981fe8ccea9465d16e02d076e32a'}\n\n```{.r .cell-code}\nunnestedOutputGR %>% \n  count(valueType)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n  valueType                                             n\n  <chr>                                             <int>\n1 EXISTS                                             1358\n2 MISSING                                             300\n3 OMITTED_DUE_TO_BASED_ON_FEW_PUPILS                  216\n4 ROUNDED_OFF_DUE_TO_FEW_PUPILS_NOT_ELIGIBLE           73\n5 TEACHERS_EXCLUDED_DUE_TO_NO_REQUIRED_LEGITIMATION    15\n```\n:::\n:::\n\n\nLet's look at the value variable for the different valueTypes (except EXISTS).\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-38_f56e444ec7d36fe85283daceb4a01b28'}\n\n```{.r .cell-code}\nunnestedOutputGR %>% \n  filter(!valueType == \"EXISTS\") %>% \n  group_by(valueType) %>% \n  distinct(value)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n# Groups:   valueType [4]\n  valueType                                         value\n  <chr>                                             <chr>\n1 MISSING                                           .    \n2 OMITTED_DUE_TO_BASED_ON_FEW_PUPILS                ..   \n3 ROUNDED_OFF_DUE_TO_FEW_PUPILS_NOT_ELIGIBLE        ~100 \n4 TEACHERS_EXCLUDED_DUE_TO_NO_REQUIRED_LEGITIMATION *    \n5 MISSING                                           <NA> \n```\n:::\n:::\n\n\nWe need the value variable to be of class numeric, which means only numerics and NA values are allowed.\n\n### Recoding\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-39_0610d92784be8e25057a7d798c2b0266'}\n\n```{.r .cell-code}\n# create copy of dataframe prior to recoding\ndf.gr <- unnestedOutputGR\n\n# recode . to NA\ndf.gr$value <- car::recode(df.gr$value,\"'.'=NA\")\n# change decimal comma to decimal point\ndf.gr$value <- gsub(pattern = \",\",\n                    replacement = \".\",\n                    df.gr$value)\n```\n:::\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-40_cf693c6c0dfb1256e024e504aa05f853'}\n\n```{.r .cell-code}\n# remaining cleanup\ndf.gr$value <- car::recode(df.gr$value,\"'..'=NA\") # too few pupils\ndf.gr$value <- car::recode(df.gr$value,\"'*'=NA\") # no req for teacher license\ndf.gr$value <- gsub(\"cirka \", \"\", df.gr$value)\ndf.gr$value <- gsub(\"~\", \"\", df.gr$value)\n\ndf.gr$value <- as.numeric(df.gr$value)\n```\n:::\n\n\n#### Date variable\n\nFirst remove the second part of the school year designation (extract the first 4 digits).\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-41_79679c35492b9aafe4253ddc6b60c9e8'}\n\n```{.r .cell-code}\n# date variable\ndf.gr$timePeriod <- str_extract(df.gr$timePeriod, \"\\\\d{4}\")\ndf.gr$timePeriod <- as.integer(df.gr$timePeriod)\n\ndf.gr %>% \n  count(timePeriod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 2\n  timePeriod     n\n       <int> <int>\n1       2017   314\n2       2018   456\n3       2019   260\n4       2020   262\n5       2021   496\n6       2022   166\n7         NA     8\n```\n:::\n:::\n\n\nWe could transform this to a date format variable, but having dates as year numerics is fine for our intended use.\n\n## Visualizing data\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-42_440626d9e5981517bf0d83fcb59a8ee0'}\n\n```{.r .cell-code}\n# we like to use school names instead of codes when creating figures\ndf.gr <- left_join(df.gr,schools, by = \"Skolenhetskod\")\n```\n:::\n\n\n\n### Variable check\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-43_8ec3074c021f81d5ba008169d24ae9ad'}\n\n```{.r .cell-code}\nlibrary(gtsummary)\n\ndf.gr %>% \n  select(timePeriod,variable) %>% \n  group_by(variable) %>% \n  tbl_summary(timePeriod)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"pgjdqeqvoj\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#pgjdqeqvoj table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#pgjdqeqvoj thead, #pgjdqeqvoj tbody, #pgjdqeqvoj tfoot, #pgjdqeqvoj tr, #pgjdqeqvoj td, #pgjdqeqvoj th {\n  border-style: none;\n}\n\n#pgjdqeqvoj p {\n  margin: 0;\n  padding: 0;\n}\n\n#pgjdqeqvoj .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#pgjdqeqvoj .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#pgjdqeqvoj .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#pgjdqeqvoj .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#pgjdqeqvoj .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#pgjdqeqvoj .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#pgjdqeqvoj .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#pgjdqeqvoj .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#pgjdqeqvoj .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#pgjdqeqvoj .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#pgjdqeqvoj .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#pgjdqeqvoj .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#pgjdqeqvoj .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#pgjdqeqvoj .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#pgjdqeqvoj .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#pgjdqeqvoj .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#pgjdqeqvoj .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#pgjdqeqvoj .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#pgjdqeqvoj .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pgjdqeqvoj .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#pgjdqeqvoj .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#pgjdqeqvoj .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#pgjdqeqvoj .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pgjdqeqvoj .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#pgjdqeqvoj .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#pgjdqeqvoj .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#pgjdqeqvoj .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pgjdqeqvoj .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#pgjdqeqvoj .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#pgjdqeqvoj .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#pgjdqeqvoj .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#pgjdqeqvoj .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#pgjdqeqvoj .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pgjdqeqvoj .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#pgjdqeqvoj .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pgjdqeqvoj .gt_left {\n  text-align: left;\n}\n\n#pgjdqeqvoj .gt_center {\n  text-align: center;\n}\n\n#pgjdqeqvoj .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#pgjdqeqvoj .gt_font_normal {\n  font-weight: normal;\n}\n\n#pgjdqeqvoj .gt_font_bold {\n  font-weight: bold;\n}\n\n#pgjdqeqvoj .gt_font_italic {\n  font-style: italic;\n}\n\n#pgjdqeqvoj .gt_super {\n  font-size: 65%;\n}\n\n#pgjdqeqvoj .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#pgjdqeqvoj .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#pgjdqeqvoj .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#pgjdqeqvoj .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#pgjdqeqvoj .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#pgjdqeqvoj .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#pgjdqeqvoj .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;2017&lt;/strong&gt;, N = 314&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>2017</strong>, N = 314<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;2018&lt;/strong&gt;, N = 456&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>2018</strong>, N = 456<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;2019&lt;/strong&gt;, N = 260&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>2019</strong>, N = 260<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;2020&lt;/strong&gt;, N = 262&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>2020</strong>, N = 262<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;2021&lt;/strong&gt;, N = 496&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>2021</strong>, N = 496<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;2022&lt;/strong&gt;, N = 166&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>2022</strong>, N = 166<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">variable</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\"></td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\"></td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\"></td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\"></td>\n<td headers=\"stat_5\" class=\"gt_row gt_center\"></td>\n<td headers=\"stat_6\" class=\"gt_row gt_center\"></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    averageGradesMeritRating9thGrade</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">21 (6.7%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">22 (4.8%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">22 (8.5%)</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">21 (8.0%)</td>\n<td headers=\"stat_5\" class=\"gt_row gt_center\">23 (4.6%)</td>\n<td headers=\"stat_6\" class=\"gt_row gt_center\">0 (0%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    averageResultNationalTestsSubjectENG6thGrade</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">26 (8.3%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">26 (5.7%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_5\" class=\"gt_row gt_center\">26 (5.2%)</td>\n<td headers=\"stat_6\" class=\"gt_row gt_center\">0 (0%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    averageResultNationalTestsSubjectENG9thGrade</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">21 (6.7%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">22 (4.8%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_5\" class=\"gt_row gt_center\">23 (4.6%)</td>\n<td headers=\"stat_6\" class=\"gt_row gt_center\">0 (0%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    averageResultNationalTestsSubjectMA6thGrade</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">26 (8.3%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">26 (5.7%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_5\" class=\"gt_row gt_center\">26 (5.2%)</td>\n<td headers=\"stat_6\" class=\"gt_row gt_center\">0 (0%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    averageResultNationalTestsSubjectMA9thGrade</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">21 (6.7%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">22 (4.8%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_5\" class=\"gt_row gt_center\">23 (4.6%)</td>\n<td headers=\"stat_6\" class=\"gt_row gt_center\">0 (0%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    averageResultNationalTestsSubjectSVA6thGrade</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">26 (8.3%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">26 (5.7%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_5\" class=\"gt_row gt_center\">26 (5.2%)</td>\n<td headers=\"stat_6\" class=\"gt_row gt_center\">0 (0%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    averageResultNationalTestsSubjectSVA9thGrade</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">21 (6.7%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">22 (4.8%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_5\" class=\"gt_row gt_center\">23 (4.6%)</td>\n<td headers=\"stat_6\" class=\"gt_row gt_center\">0 (0%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    averageResultNationalTestsSubjectSVE6thGrade</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">26 (8.3%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">26 (5.7%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_5\" class=\"gt_row gt_center\">26 (5.2%)</td>\n<td headers=\"stat_6\" class=\"gt_row gt_center\">0 (0%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    averageResultNationalTestsSubjectSVE9thGrade</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">21 (6.7%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">22 (4.8%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_5\" class=\"gt_row gt_center\">23 (4.6%)</td>\n<td headers=\"stat_6\" class=\"gt_row gt_center\">0 (0%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    certifiedTeachersQuota</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">33 (7.2%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">32 (12%)</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">34 (13%)</td>\n<td headers=\"stat_5\" class=\"gt_row gt_center\">34 (6.9%)</td>\n<td headers=\"stat_6\" class=\"gt_row gt_center\">33 (20%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    ratioOfPupils9thGradeEligibleForNationalProgramES</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">21 (6.7%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">22 (4.8%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">22 (8.5%)</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">21 (8.0%)</td>\n<td headers=\"stat_5\" class=\"gt_row gt_center\">23 (4.6%)</td>\n<td headers=\"stat_6\" class=\"gt_row gt_center\">0 (0%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    ratioOfPupils9thGradeEligibleForNationalProgramNATE</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">21 (6.7%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">22 (4.8%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">22 (8.5%)</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">21 (8.0%)</td>\n<td headers=\"stat_5\" class=\"gt_row gt_center\">23 (4.6%)</td>\n<td headers=\"stat_6\" class=\"gt_row gt_center\">0 (0%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    ratioOfPupils9thGradeEligibleForNationalProgramSAEKHU</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">21 (6.7%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">22 (4.8%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">22 (8.5%)</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">21 (8.0%)</td>\n<td headers=\"stat_5\" class=\"gt_row gt_center\">23 (4.6%)</td>\n<td headers=\"stat_6\" class=\"gt_row gt_center\">0 (0%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    ratioOfPupils9thGradeEligibleForNationalProgramYR</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">21 (6.7%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">22 (4.8%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">22 (8.5%)</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">21 (8.0%)</td>\n<td headers=\"stat_5\" class=\"gt_row gt_center\">23 (4.6%)</td>\n<td headers=\"stat_6\" class=\"gt_row gt_center\">0 (0%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    ratioOfPupilsIn6thGradeWithAllSubjectsPassed</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_5\" class=\"gt_row gt_center\">26 (5.2%)</td>\n<td headers=\"stat_6\" class=\"gt_row gt_center\">0 (0%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    ratioOfPupilsIn9thGradeWithAllSubjectsPassed</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">21 (6.7%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">22 (4.8%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">22 (8.5%)</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">21 (8.0%)</td>\n<td headers=\"stat_5\" class=\"gt_row gt_center\">23 (4.6%)</td>\n<td headers=\"stat_6\" class=\"gt_row gt_center\">0 (0%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    specialEducatorsQuota</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">33 (7.2%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">32 (12%)</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">34 (13%)</td>\n<td headers=\"stat_5\" class=\"gt_row gt_center\">34 (6.9%)</td>\n<td headers=\"stat_6\" class=\"gt_row gt_center\">33 (20%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    specialTeacherPositions</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">33 (7.2%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">32 (12%)</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">34 (13%)</td>\n<td headers=\"stat_5\" class=\"gt_row gt_center\">34 (6.9%)</td>\n<td headers=\"stat_6\" class=\"gt_row gt_center\">33 (20%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    studentsPerTeacherQuota</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">33 (7.2%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">32 (12%)</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">34 (13%)</td>\n<td headers=\"stat_5\" class=\"gt_row gt_center\">34 (6.9%)</td>\n<td headers=\"stat_6\" class=\"gt_row gt_center\">33 (20%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    totalNumberOfPupils</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_5\" class=\"gt_row gt_center\">0 (0%)</td>\n<td headers=\"stat_6\" class=\"gt_row gt_center\">34 (20%)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"7\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> n (%)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n:::\n:::\n\n\n### Number of pupils per school\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-44_00adabe0b62de49ee99c069c1c887702'}\n\n```{.r .cell-code}\ndf.gr %>% \n  filter(variable == \"totalNumberOfPupils\") %>% \n  ggplot(aes(x = factor(timePeriod), \n             y = value, \n             color = Skolenhetsnamn,\n             group = Skolenhetsnamn)) +\n  geom_point() +\n  geom_line() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](skolverketapi_files/figure-html/unnamed-chunk-44-1.png){width=1050}\n:::\n:::\n\n\nOnly data from 2022 for that variable. We need to look elsewhere for historical data, it seems. It would also be useful to have the number of pupils per class, since we want to make comparisons to survey data responses. However, the documentation of this variable indicates that number of pupils is rounded to nearest 10th:\n\n> \"Antal elever på skolenheten, avrundat till tiotal.  1-14 elever ger 10, 15-24 elever ger 20, 25-34 elever ger 30, enkelprick förekommer om elever saknas.\nUppgiften samlas in 15 oktober varje år och uppdatering sker i mars året efter insamling.\"\n\nAlso, we can see that there are several school units that have very similar names, or represent parts of the same schools. This data is clearly quite complex in its structure.\n\nAs a bonus item, here is a more suitable type of figure to illustrate data from a single year, \n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-45_2295a1740dbc508bfa2bb9035f934d1f'}\n\n```{.r .cell-code}\ndf.gr %>% \n  filter(variable == \"totalNumberOfPupils\") %>% \n  mutate(Skolenhetsnamn = factor(Skolenhetsnamn)) %>% \n  ggplot(aes(x = fct_reorder(Skolenhetsnamn, desc(value)), \n             y = value,\n             fill = value)) +\n  geom_col() +\n  theme_minimal() +\n  labs(x = \"\",\n       y = \"Number of pupils\") +\n  scale_fill_viridis_c(guide = \"none\") +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](skolverketapi_files/figure-html/unnamed-chunk-45-1.png){width=1050}\n:::\n:::\n\n\n### studentsPerTeacherQuota\n\nHere we have data from multiple school years.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-46_5863624a318f3d9f85d3a8f975f8fc81'}\n\n```{.r .cell-code}\ndf.gr %>% \n  filter(variable == \"studentsPerTeacherQuota\") %>% \n  ggplot(aes(x = factor(timePeriod), \n             y = value, \n             color = Skolenhetsnamn,\n             group = Skolenhetsnamn)) +\n  geom_point() +\n  geom_line() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](skolverketapi_files/figure-html/unnamed-chunk-46-1.png){width=1050}\n:::\n:::\n\n\nHuge variation, probably since there are schools in the data that seem to represent special education groups. Let's look at the average numbers across years and sort out the 10 with the lowest number of pupils per teacher.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-47_cf821c49dcdb39dc7106f12defd6498e'}\n\n```{.r .cell-code}\ndf.gr %>% \n  filter(variable == \"studentsPerTeacherQuota\") %>% \n  group_by(Skolenhetsnamn) %>% \n  reframe(Average = mean(value)) %>% \n  arrange(Average) %>% \n  slice(1:10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   Skolenhetsnamn                  Average\n   <chr>                             <dbl>\n 1 Rikstens skola Trampolinen 1GR     3.88\n 2 Storvretskolan 1GR                 5.34\n 3 Borgsskolan Borggruppen 1GR        5.78\n 4 Hammerstaskolan Språkenhet 1GR     5.82\n 5 Fittjaskolan Lilla Aspen 1GR       6   \n 6 Falkbergsskolan klass 6-9 A 1GR    7.08\n 7 Freinetskolan Kastanjen            9.66\n 8 Sverigefinska skolan, Botkyrka    10   \n 9 Storvretskolan                    11.3 \n10 Hammerstaskolan                   11.5 \n```\n:::\n:::\n\n\nWe'll remove the ones with \"1GR\" at the end of the school name.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-48_f0aca4614fca5c18c28efccce0ec56ba'}\n\n```{.r .cell-code}\ndf.gr %>% \n  filter(variable == \"studentsPerTeacherQuota\",\n         !str_detect(Skolenhetsnamn,\"1GR\")) %>% \n  ggplot(aes(x = factor(timePeriod), \n             y = value, \n             color = Skolenhetsnamn\n             )) +\n  geom_point() +\n  geom_line(aes(group = Skolenhetsnamn)) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](skolverketapi_files/figure-html/unnamed-chunk-48-1.png){width=1050}\n:::\n:::\n\n\nLet's update our information about the schools with some more variables. This will get a bit complicated since an API call for a school unit that has more than one type will contain strings for some variables instead of single values. Also, the `schoolYear` variable is a string in itself, so we need to get the first and last value from that and combine into one value.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-49_4f646c05ba833fa547f09353bbf62373'}\n\n```{.r .cell-code}\nschoolUnitCodes <- schoolTypes %>% \n  filter(type == \"gr\") %>% \n  pull(Skolenhetskod)\n\nschoolTypes2 <- data.frame() # making a new dataframe, to avoid overwriting the old one when we test things\n\nfor (i in schoolUnitCodes) {\n  \n  tmp <- GET(paste0(\"https://api.skolverket.se/planned-educations/v3/school-units/\", i)) %>% \n    content(\"text\") %>% \n    fromJSON()\n  \n  if (length(tmp$body$typeOfSchooling$code) > 1){ # if both fsk and gr\n  \n    tmp2 <- data.frame(\n    type = tmp$body$typeOfSchooling$code[2],\n    principalOrganizerType = tmp$body$principalOrganizerType,\n    companyForm = tmp$body$companyForm,\n    schoolYears = paste0(tmp$body$typeOfSchooling$schoolYears[2][[1]][1],\"-\",tmp$body$typeOfSchooling$schoolYears[2][[1]][length(tmp$body$typeOfSchooling$schoolYears[2][[1]])]),\n    corporationName = tmp$body$corporationName,\n    latitude = tmp$body$wgs84_Lat,\n    longitude = tmp$body$wgs84_Long,\n    zipCode = tmp$body$contactInfo$addresses$zipCode[2],\n    Skolenhetskod = i)\n                     \n  schoolTypes2 <- bind_rows(schoolTypes2,tmp2)\n  } else { # when schoolType only \"gr\"\n    tmp2 <- data.frame(\n    type = tmp$body$typeOfSchooling$code,\n    principalOrganizerType = tmp$body$principalOrganizerType,\n    companyForm = tmp$body$companyForm,\n    schoolYears = paste0(tmp$body$typeOfSchooling$schoolYears[1][[1]][1],\"-\",tmp$body$typeOfSchooling$schoolYears[1][[1]][length(tmp$body$typeOfSchooling$schoolYears[1][[1]])]),\n    corporationName = tmp$body$corporationName,\n    latitude = tmp$body$wgs84_Lat,\n    longitude = tmp$body$wgs84_Long,\n    zipCode = tmp$body$contactInfo$addresses$zipCode,\n    Skolenhetskod = i)\n                     \n  schoolTypes2 <- bind_rows(schoolTypes2,tmp2)\n    }\n}\n\nschoolTypes2 <- left_join(schoolTypes2,schools, by = \"Skolenhetskod\")\n\nglimpse(schoolTypes2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 41\nColumns: 13\n$ type                   <chr> \"gr\", \"gr\", \"gr\", \"gr\", \"gr\", \"gr\", \"gr\", \"gr\",…\n$ principalOrganizerType <chr> \"Fristående\", \"Fristående\", \"Fristående\", \"Fris…\n$ companyForm            <chr> \"Övriga aktiebolag\", \"Övriga aktiebolag\", \"Övri…\n$ schoolYears            <chr> \"4-9\", \"4-9\", \"1-6\", \"1-9\", \"1-9\", \"6-9\", \"6-9\"…\n$ corporationName        <chr> \"Kunskapsskolan i Sverige Aktiebolag\", \"Kunskap…\n$ latitude               <chr> \"59.20011169538554\", \"59.20011169538554\", \"59.2…\n$ longitude              <chr> \"17.846722627859616\", \"17.846722627859616\", \"17…\n$ zipCode                <chr> \"14741\", \"14741\", \"14568\", \"14574\", \"14740\", \"1…\n$ Skolenhetskod          <chr> \"84411355\", \"84411355\", \"16762245\", \"29524966\",…\n$ Kommunkod              <chr> \"0127\", \"0127\", \"0127\", \"0127\", \"0127\", \"0127\",…\n$ PeOrgNr                <chr> \"5565661815\", \"5565661815\", \"8024242391\", \"7696…\n$ Skolenhetsnamn         <chr> \"Kunskapsskolan Tumba\", \"Kunskapsskolan Tumba\",…\n$ Status                 <chr> \"Aktiv\", \"Aktiv\", \"Aktiv\", \"Aktiv\", \"Aktiv\", \"A…\n```\n:::\n:::\n\n\nWell, that was a handful to work out. And we only get \"gr\" schools, so a similar process will be necessary if we want to get the other school types. It should at least be a lot quicker since we have worked out some solutions already, depending on the differences in data structure.\n\n## Todo\n\nA couple of things on the todo list:\n\n- getting data for school types \"fsk\" and \"gy\"\n- getting data for all municipalities in a region\n\n\n## More demographics\n\nIt seems that there are other types of data available for manual download. I have been unable to find these using the API documentation and exploration. I emailed Skolverket and asked them if it is possible to retrieve this data via API, and unfortunately it is not in the database made available by database. I manually downloaded the files and combined them. The website URL for manual downloads is [here](https://www.skolverket.se/skolutveckling/statistik/sok-statistik-om-forskola-skola-och-vuxenutbildning?sok=SokD&niva=S&omr=elever&exp=6&lasar=2022&uttag=null)\n\nI've limited this example to the last five years, thus five files.\n\nFirst, let's read one file. I've already done some exploring here, which resulted in skipping the first five rows (which contains what should be meta-data basically) and using semi-colon for separation of data fields. Also, the amazing `janitor::clean_names()` is used, an empty variable is removed, and a year variable is added.\n\nSpecifying \".\" and \"..\" as missing data indicators would seem accurate, but doing this when importing data screws up decimal points later, so we need a manual recode after import.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-50_8a4bd2c61e7c1d2508fc2cee9efab580'}\n\n```{.r .cell-code}\nlibrary(janitor)\nlibrary(car)\n\nread_delim(\"data/Grundskolan - Antal elever per årskurs 2022 Skolenhet.csv\",\n                 skip = 5, delim = \";\") %>%\n  clean_names() %>%\n  select(!x23) %>%\n  add_column(year = 2022) %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 4,740\nColumns: 23\n$ skola                                                            <chr> \"Ahla…\n$ skol_enhetskod                                                   <dbl> 71387…\n$ skolkommun                                                       <chr> \"Ale\"…\n$ kommun_kod                                                       <chr> \"1440…\n$ typ_av_huvudman                                                  <chr> \"Ensk…\n$ huvudman                                                         <chr> \"Ahla…\n$ huvudman_orgnr                                                   <dbl> 76961…\n$ elever_forskoleklass                                             <chr> \"22\",…\n$ andel_percent_flickor_forskoleklass                              <chr> \"..\",…\n$ elever_arskurs_1_9                                               <chr> \"258\"…\n$ andel_percent_flickor_arskurs_1_9                                <chr> \"48,4…\n$ andel_percent_elever_med_utlandsk_bakgrund_ak_1_9                <chr> \"4,7\"…\n$ andel_percent_elever_med_foraldrar_med_eftergymnasial_utb_ak_1_9 <chr> \"69,8…\n$ elever_arskurs_1                                                 <chr> \"24\",…\n$ elever_arskurs_2                                                 <chr> \"22\",…\n$ elever_arskurs_3                                                 <chr> \"22\",…\n$ elever_arskurs_4                                                 <chr> \"25\",…\n$ elever_arskurs_5                                                 <chr> \"49\",…\n$ elever_arskurs_6                                                 <chr> \"23\",…\n$ elever_arskurs_7                                                 <chr> \"24\",…\n$ elever_arskurs_8                                                 <chr> \"46\",…\n$ elever_arskurs_9                                                 <chr> \"23\",…\n$ year                                                             <dbl> 2022,…\n```\n:::\n:::\n\n\nSome recodings are in order.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-51_ffd502e9d4d23e6bc2e28148d0d8ef6e'}\n\n```{.r .cell-code}\nread_delim(\"data/Grundskolan - Antal elever per årskurs 2022 Skolenhet.csv\",\n                 skip = 5, delim = \";\") %>%\n  clean_names() %>%\n  select(!x23) %>%\n  add_column(year = 2022) %>% \n  mutate(across(elever_forskoleklass:elever_arskurs_9, ~ car::recode(.x,\"'.'=NA;'..'=NA\"))) %>% \n  mutate(across(starts_with(\"andel\"), ~ gsub(\",\",\".\",.x))) %>% \n  mutate(across(starts_with(\"andel\"), ~ as.numeric(.x))) %>% \n  mutate(elever_arskurs_1_9 = as.numeric(elever_arskurs_1_9),\n           skol_enhetskod = as.numeric(skol_enhetskod)) %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 4,740\nColumns: 23\n$ skola                                                            <chr> \"Ahla…\n$ skol_enhetskod                                                   <dbl> 71387…\n$ skolkommun                                                       <chr> \"Ale\"…\n$ kommun_kod                                                       <chr> \"1440…\n$ typ_av_huvudman                                                  <chr> \"Ensk…\n$ huvudman                                                         <chr> \"Ahla…\n$ huvudman_orgnr                                                   <dbl> 76961…\n$ elever_forskoleklass                                             <dbl> 22, N…\n$ andel_percent_flickor_forskoleklass                              <dbl> NA, N…\n$ elever_arskurs_1_9                                               <dbl> 258, …\n$ andel_percent_flickor_arskurs_1_9                                <dbl> 48.4,…\n$ andel_percent_elever_med_utlandsk_bakgrund_ak_1_9                <dbl> 4.7, …\n$ andel_percent_elever_med_foraldrar_med_eftergymnasial_utb_ak_1_9 <dbl> 69.8,…\n$ elever_arskurs_1                                                 <dbl> 24, N…\n$ elever_arskurs_2                                                 <dbl> 22, N…\n$ elever_arskurs_3                                                 <dbl> 22, N…\n$ elever_arskurs_4                                                 <dbl> 25, 6…\n$ elever_arskurs_5                                                 <dbl> 49, 6…\n$ elever_arskurs_6                                                 <dbl> 23, 5…\n$ elever_arskurs_7                                                 <dbl> 24, N…\n$ elever_arskurs_8                                                 <dbl> 46, N…\n$ elever_arskurs_9                                                 <dbl> 23, N…\n$ year                                                             <dbl> 2022,…\n```\n:::\n:::\n\n\nAnd now, putting all files into the same dataframe.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-52_d67e20578d0cc4515ddb5c53572d57b8'}\n\n```{.r .cell-code}\n# get all filenames in the folder\nfileList <- list.files(path = \"data/\", full.names=TRUE)\nyears <- c(2018:2022)\n# create an empty list to store data in\ndata <- list()\n# loop over filenames to import them to the list object\nfor (i in c(1:length(fileList))) {\n  data[[i]] <- read_delim(fileList[i],\n                 skip = 5, delim = \";\") %>%\n  clean_names() %>%\n  select(!x23) %>%\n  add_column(year = years[i]) %>% \n  mutate(across(elever_forskoleklass:elever_arskurs_9, ~ car::recode(.x,\"'.'=NA;'..'=NA\"))) %>% \n  mutate(across(starts_with(\"andel\"), ~ gsub(\",\",\".\",.x))) %>% \n  mutate(across(starts_with(\"andel\"), ~ as.numeric(.x))) %>% \n  mutate(elever_arskurs_1_9 = as.numeric(elever_arskurs_1_9),\n           skol_enhetskod = as.numeric(skol_enhetskod))\n}\n\n### Combine all nested lists into one dataframe\ndf <- map_dfr(c(1:5), ~ do.call(bind_rows, data[[.x]]))\nglimpse(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 24,027\nColumns: 23\n$ skola                                                            <chr> \"Ahla…\n$ skol_enhetskod                                                   <dbl> 71387…\n$ skolkommun                                                       <chr> \"Ale\"…\n$ kommun_kod                                                       <chr> \"1440…\n$ typ_av_huvudman                                                  <chr> \"Ensk…\n$ huvudman                                                         <chr> \"Ahla…\n$ huvudman_orgnr                                                   <dbl> 76961…\n$ elever_forskoleklass                                             <dbl> 22, N…\n$ andel_percent_flickor_forskoleklass                              <dbl> NA, N…\n$ elever_arskurs_1_9                                               <dbl> 244, …\n$ andel_percent_flickor_arskurs_1_9                                <dbl> 51, 4…\n$ andel_percent_elever_med_utlandsk_bakgrund_ak_1_9                <dbl> NA, 9…\n$ andel_percent_elever_med_foraldrar_med_eftergymnasial_utb_ak_1_9 <dbl> 64, 4…\n$ elever_arskurs_1                                                 <dbl> 22, N…\n$ elever_arskurs_2                                                 <dbl> 22, N…\n$ elever_arskurs_3                                                 <dbl> 22, N…\n$ elever_arskurs_4                                                 <dbl> 44, 5…\n$ elever_arskurs_5                                                 <dbl> 20, 4…\n$ elever_arskurs_6                                                 <dbl> 21, 6…\n$ elever_arskurs_7                                                 <dbl> 44, N…\n$ elever_arskurs_8                                                 <dbl> 24, N…\n$ elever_arskurs_9                                                 <dbl> 25, N…\n$ year                                                             <int> 2018,…\n```\n:::\n:::\n\n\nThere we go. And now we can write the dataframe to a compressed file if we want to. Parquet is a really fast and efficient open format that is included in `library(arrow)`.\n\n\n::: {.cell hash='skolverketapi_cache/html/unnamed-chunk-53_a2b42e6a349abd5bdfe2ce7e57c02618'}\n\n```{.r .cell-code}\nwrite_parquet(df,\"SkolverketData.parquet\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}