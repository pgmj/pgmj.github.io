---
title: "Using the SCOPUS database from R"
subtitle: "Groundwork for systematic review/meta-analysis in R"
author: 
  name: Magnus Johansson
  affiliation: RISE Research Institutes of Sweden
  affiliation-url: https://www.ri.se/sv/vad-vi-gor/expertiser/kategoriskt-baserade-matningar
  orcid: 0000-0003-1669-592X
date: last-modified
citation:
  type: 'webpage'
csl: ../apa.csl
google-scholar: true
execute: 
  cache: true
  warning: false
  message: false
bibliography: 
- references.bib
- grateful-refs.bib
editor_options: 
  chunk_output_type: console
---

```{r}
library(rscopus)
library(tidyverse)
library(rjson)
library(httr)
library(janitor)
library(readr)
library(glue)
scopusAPIkey <- read_file("~/.scopusAPIkey") %>% 
  gsub("\\n", "", .)

set_api_key(scopusAPIkey)

kbl_rise <- function(data, width = 75, fontsize = 14) {  
  kbl(data, booktabs = T, escape = F, table.attr = glue("style='width:{width}%;'")) %>%
  kable_styling(
    bootstrap_options = c("striped", "hover"),
    position = "left",
    full_width = T,
    font_size = fontsize,
    fixed_thead = T,
    latex_options = c("striped", "scale_down")
  ) %>%
  row_spec(0, bold = T) %>%
  kable_classic(html_font = "Lato")
}
```

## Query SCOPUS API

Let's define our (first) search string using Scopus syntax and store it.

```{r}
query1 <- paste0('TITLE-ABS-KEY("response categor*") OR TITLE-ABS-KEY("response option*") AND TITLE-ABS-KEY("number") AND ALL("psychometric*")')
#query1
```

### Glimpse results

We'll set `view = "COMPLETE"` to include abstracts. If you are just interested in browsing titles, the search will be faster and the results smaller in download size if you set `view = "STANDARD"` instead. See `?scopus_search` for more available options.

```{r}
results1 <- scopus_search(
    query = query1,
    view = "STANDARD",
    api_key = scopusAPIkey)

results1r <- results1$entries %>% 
  enframe() %>% 
  unnest_auto(value) %>% 
  janitor::clean_names()

glimpse(results1r)

# save data to file, to avoid abusing the scopus api
saveRDS(results2, "2023-02-25_scopus_complete_list.Rdata")
```

### Get abstracts

If you for some reason would prefer to download abstracts separately after retrieving results with `view = "STANDARD"`, here is some example code. It does seem a bit cumbersome compared to a COMPLETE search.

```{r}
EIDs <- results2 %>% 
  pull(eid)

abs1<-abstract_retrieval(EIDs[1], identifier = "eid")

abs1$`abstracts-retrieval-response`$coredata$`dc:description`

abs1$content %>% 
  enframe() %>% 
  unnest_auto(value) %>% 
  unnest_auto(coredata) %>% 
  pull("dc:description")

```

With `view = "COMPLETE"`, we have dc_description (abstracts) already.

Some minor data wrangling to select the variables of interest and rename them, as well as recoding the date variable to a proper date format:

```{r}
library(kableExtra)
library(lubridate)

df <- results2r %>%
  mutate(Date = lubridate::year(prism_cover_date)) %>%
  select(dc_creator, Date, dc_title, dc_description, authkeywords, prism_doi) %>%
  rename(
    Author = dc_creator,
    Title = dc_title,
    Abstract = dc_description,
    Keywords = authkeywords,
    DOI = prism_doi
  )
```

We can look at the first paper.
```{r}
df %>% 
  head(1) %>% 
  kbl_rise(width = "90%")
```

Let's check for duplicates, even if it is unlikely when searching only one database.
```{r}
df %>% 
  select(Author,Title) %>% 
  filter(duplicated(Title))
# doesn't look like any duplicates are there
```

## Scanning for keywords

Now we'd like to look at title, keywords and abstract to find mentions of certain words. First, let's use "label" in the three fields title, keywords and abstract.

### Label

```{r}
library(stringr)

scanWord <- function(data = df, word) {
  data %>% 
  filter(str_detect(Abstract, {{ word }}) | 
           str_detect(Title, {{ word }}) |
           str_detect(Keywords, {{ word }})) %>% 
  select(Author,Date,Title) %>% 
  kbl_rise()
}

scanWord(word = "label")
```

### Rasch

Just out of curiosity, how many papers mention Rasch?
```{r}
scanWord(word = "Rasch")

```



```{r}
#| eval: false
# same without rscopus package

scopus1 = GET(glue("https://api.elsevier.com/content/search/scopus?query=TITLE-ABS-KEY(%22response%20categor*%22)%20AND%20TITLE-ABS-KEY(%22number%22)%20AND%20ALL(%22psychometric*%22)&apiKey={scopusAPIkey}"))
scopus1r <- rjson::fromJSON(rawToChar(scopus1$content))

papers <- scopus1r$`search-results`$entry %>% 
  enframe() %>%
  unnest_auto(value) %>% 
  janitor::clean_names()

glimpse(papers)
```


