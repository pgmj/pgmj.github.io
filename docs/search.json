[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "Welcome! Content will be added.\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Magnus Johansson is a licensed psychologist with a PhD in behavior analysis. I work as a scientist at RISE Research Institutes of Sweden, primarily with psychometrics, measurement, prevention and public health.\nYou can also find me on:\n\nTwitter: @pgmjoh\nORCID: 0000-0003-1669-592X\nMastodon: @pgmj\nOSF: Open Science Foundation\n\nand of course on GitHub\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "raschrvignette/index.html",
    "href": "raschrvignette/index.html",
    "title": "RISEkbmRasch",
    "section": "",
    "text": "This is a work-in-progress to create a proper vignette to introduce how to make use of the RISEkbmRasch R package.\nDetails on installation is at the package link above. This vignette will walk through a sample analysis using an open dataset with questionnaire data. This will include some data wrangling to structure the item data and itemlabels, then provide examples of the different functions.\nOne of the aims with this package is to simplify psychometric analysis to shed light on the measurement properties of a scale. In a forthcoming paper (preprint should be out in January 2023 and the link will be added here), our research group propose that the basic aspects of a psychometric analysis should include information about:\nWe’ll include several ways to investigate these measurement properties, using Rasch Measurement Theory."
  },
  {
    "objectID": "raschrvignette/index.html#getting-started",
    "href": "raschrvignette/index.html#getting-started",
    "title": "RISEkbmRasch",
    "section": "1 Getting started",
    "text": "1 Getting started\nSince the package is intended for use with Quarto, this vignette has also been created with Quarto. A “template” .qmd file is available (insert link later) that is suggested to have at hand for copy&paste when running a new analysis.\nLoading the package should also get all the dependencies loaded. You may need to make sure that ggplot2 is updated to version 3.4.0 or later.\n\n\nCode\nlibrary(RISEkbmRasch) # devtools::install_github(\"pgmj/RISEkbmRasch\")\n\n### some commands exist in multiple packages, here we define preferred ones that are frequently used\nselect <- dplyr::select\ncount <- dplyr::count\nrecode <- car::recode\nrename <- dplyr::rename\n\n### set up color palette based on RISE guidelines\nRISEprimGreen <- \"#009ca6\"\nRISEprimRed <- \"#e83c63\"\nRISEprimYellow <- \"#ffe500\"\nRISEprimGreenMid <- \"#8dc8c7\"\nRISEprimRedMid <- \"#f5a9ab\"\nRISEprimYellowMid <- \"#ffee8d\"\nRISEprimGreenLight <- \"#ebf5f0\"\nRISEprimRedLight <- \"#fde8df\"\nRISEprimYellowLight <- \"#fff7dd\"\nRISEcompPurple <- \"#482d55\"\nRISEcompGreenDark <- \"#0e4e65\"\nRISEgrey1 <- \"#f0f0f0\"\nRISEgrey2 <- \"#c8c8c8\"\nRISEgrey3 <- \"#828282\"\nRISEgrey4 <- \"#555555\"\n\n\n\n1.1 Loading data\nWe will use data from a recent paper investigating the “initial elevation effect” (Anvari et al. 2022), and focus on the 10 negative items from the PANAS. The data is available at the OSF website.\n\n\n\n\n\n1.2 Itemlabels\nThen we set up the itemlabels dataframe. This could also be done using the free LibreOffice Calc or MS Excel. Just make sure the file has the same structure, with two variables named itemnr and item that contain the item names and item description. The item names have to match the variable names in the item dataframe.\n\n\nCode\nitemlabels <- df %>% \n  select(starts_with(\"PAN\")) %>% \n  names() %>% \n  as_tibble() %>% \n  separate(value, c(NA, \"item\"), sep =\"_[0-9][0-9]_\") %>% \n  mutate(itemnr = paste0(\"PANAS_\",c(11:20)), .before = \"item\")\n\n\n\n\n1.3 Demographics and invariance\nVariables for invariance tests such as Differential Item Functioning need to be separated into vectors (ideally as factors with specified labels and levels) with the same length as the number of rows in the dataset. This means that any kind of removal of respondents with missing data needs to be done before separating the DIF variables.\nLet’s first see whether any data is missing.\n\n\nCode\ndf %>%\n  select(starts_with(\"PAN\")) %>% \n  t() %>% \n  as.data.frame() %>% \n  mutate(Missing = rowSums(is.na(.))) %>% \n  select(Missing) %>% \n  arrange(desc(Missing)) %>% \n  rownames_to_column(var = \"Item\") %>% \n  mutate(Percentage = Missing/nrow(df)*100) %>% \n  mutate(Item = factor(Item, levels = rev(Item))) %>%\n  ggplot(aes(x = Item, y = Percentage)) +\n  geom_col() +\n  coord_flip() +\n  ggtitle(\"Missing data per item\") +\n  xlab(\"Items\") +\n  ylab(\"Percentage of responses missing\")\n\n\n\n\n\nNo missing data, which makes this easier. We also need to check how the Sex variable has been coded and which responses are present in the data.\n\n\nCode\ndf %>% \n  distinct(Sex)\n\n\n# A tibble: 5 × 1\n  Sex              \n  <chr>            \n1 Male             \n2 Female           \n3 CONSENT REVOKED  \n4 Prefer not to say\n5 DATA EXPIRED     \n\n\nWe’ll recode all responses apart from Male/Female as missing (NA).\n\n\nCode\ndf$Sex <- car::recode(df$Sex,\"'CONSENT REVOKED'=NA;\n                      'Prefer not to say'=NA;\n                      'DATA EXPIRED'=NA\")\n\ndif.sex <- factor(df$Sex)\n\n\nNow we can make use of a very simple function included in this package!\n\n\nCode\nRIdemographics(dif.sex, \"Sex\")\n\n\n\n\n \n  \n    Sex \n    n \n    Percent \n  \n \n\n  \n    Female \n    896 \n    48.4 \n  \n  \n    Male \n    955 \n    51.6 \n  \n\n\n\n\n\nAnd remove the DIF variable from the item dataset.\n\n\nCode\ndf$Sex <- NULL\n\n\nLet’s move on to the age variable.\n\n\nCode\nglimpse(df$age)\n\n\n num [1:1856] 27 32 21 27 20 22 23 25 21 26 ...\n\n\nSometimes age is provided in categories, but here we have a numeric variable with age in years. Let’s have a quick look at the age distribution using a histogram, and calculate mean, sd and range.\n\n\nCode\n### simpler version of the ggplot below\n# hist(df$age, col = \"#009ca6\")\n# \n# df %>% \n#   summarise(Mean = round(mean(age, na.rm = T),1),\n#             StDev = round(sd(age, na.rm = T),1)\n#             )\n\nggplot(df) +\n  geom_histogram(aes(x = age), \n                 fill = \"#009ca6\",\n                 col = \"black\") +\n  geom_vline(xintercept = mean(df$age), \n             linewidth = 1.5,\n             linetype = 2,\n             col = \"#ffe500\") +\n  annotate(\"rect\", ymin = 0, ymax = Inf, \n           xmin = (mean(df$age) - sd(df$age)), xmax = (mean(df$age) + sd(df$age)), \n           alpha = .3) +\n  labs(title = \"\",\n       x = \"Age in years\",\n       y = \"Number of respondents\",\n       caption = glue(\"Note. Mean age is {round(mean(df$age, na.rm = T),1)} years with a standard deviation of {round(sd(df$age, na.rm = T),1)}. Age range is {min(df$age)} to {max(df$age)}.\")\n       ) +\n  theme(plot.caption = element_text(hjust = 0, face = \"italic\"))\n\n\n\n\n\nAge also needs to be a separate vector, and removed from the item dataframe.\n\n\nCode\ndif.age <- df$age\ndf$age <- NULL\n\n\nThere is also a grouping variable which needs to be converted to a factor.\n\n\nCode\ndif.group <- factor(df$Group)\ndf$Group <- NULL\nRIdemographics(dif.group, \"Group\")\n\n\n\n\n \n  \n    Group \n    n \n    Percent \n  \n \n\n  \n    Earlier Start \n    903 \n    48.7 \n  \n  \n    Later Start \n    953 \n    51.3 \n  \n\n\n\n\n\nWith only item data remaining in the dataframe, we can easily rename the items in the item dataframe. These names match the itemlabels variable itemnr.\n\n\nCode\nnames(df) <- itemlabels$itemnr\n\n\nNow we are all set for the psychometric analysis!"
  },
  {
    "objectID": "raschrvignette/index.html#descriptives",
    "href": "raschrvignette/index.html#descriptives",
    "title": "RISEkbmRasch",
    "section": "2 Descriptives",
    "text": "2 Descriptives\nFirst, let’s familiarize ourselves with the data.\n\n2.1 Overall responses\n\n\nCode\nRIallresp(df)\n\n\n\n\n\n\n\nResponse category\n\n\nNumber of responses\n\n\nPercent\n\n\n\n\n\n\n1\n\n\n9444\n\n\n50.9\n\n\n\n\n2\n\n\n4147\n\n\n22.3\n\n\n\n\n3\n\n\n2689\n\n\n14.5\n\n\n\n\n4\n\n\n1732\n\n\n9.3\n\n\n\n\n5\n\n\n548\n\n\n3.0\n\n\n\n\n\n\n\nThe Rasch model requires the lowest response category to be zero, which makes it necessary for us to recode our data from 1-5 to 0-4.\n\n\nCode\ndf <- df %>% \n  mutate(across(everything(), ~ car::recode(.x, \"1=0;2=1;3=2;4=3;5=4\", as.factor = F)))\n\nRIallresp(df)\n\n\n\n\n\n\n\nResponse category\n\n\nNumber of responses\n\n\nPercent\n\n\n\n\n\n\n0\n\n\n9444\n\n\n50.9\n\n\n\n\n1\n\n\n4147\n\n\n22.3\n\n\n\n\n2\n\n\n2689\n\n\n14.5\n\n\n\n\n3\n\n\n1732\n\n\n9.3\n\n\n\n\n4\n\n\n548\n\n\n3.0\n\n\n\n\n\n\n\n\n2.1.1 Floor/ceiling effects\nNow, we can also look at the raw distribution of sum scores. The RIrawdist() function is a bit crude, since it requires responses in all response categories to accurately calculate max and min scores.\n\n\nCode\nRIrawdist(df)\n\n\n\n\n\nWe can see a floor effect with 11.8% of participants responding in the lowest category for all items.\n\n\n2.1.2 Guttman structure\nWhile not really necessary, it could be interesting to see whether the response patterns follow a Guttman-like structure. Items and persons are sorted based on lower->higher responses, and we should see the color move from yellow in the lower left corner to blue in the upper right corner.\n\n\nCode\nRIheatmap(df)\n\n\n\n\n\nIn this data, we see the floor effect on the left, with 11.8% of respondents all yellow, and a rather weak Guttman structure. This could also be due to a low variation in item locations/difficulties.\n\n\n\n2.2 Item level descriptives\nThere are many ways to look at the item level data, and we’ll get them all together in the tab-panel below. The RItileplot() is probably most informative, since it provides the number of responses in each response category for each item. It is usually recommended to have at least ~10 responses in each category for psychometric analysis, no matter which methodology is used.\nMost people will be familiar with the barplot, and this is probably most intuitive to understand the response distribution within each item. However, if there are many items it will take a while to review, and does not provide the same overview as a tileplot or stacked bars.\n\n\nCode\n# this code chunk creates a small table in the margin beside the panel-tabset output below,\n# showing all items currently in the df dataframe\n# the chunk option \"#| column: margin\" is necessary for the layout to work as intended\nRIlistItemsMargin(df, fontsize = 13)\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_15\n\n\nScared\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_18\n\n\nGuilty\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nTile plotStacked barsBarplots\n\n\n\n\nCode\nRItileplot(df)\n\n\n\n\n\n\n\n\n\nCode\nRIbarstack(df)\n\n\n\n\n\n\n\n\n\nCode\nRIbarplot(df)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhile response patterns are skewed for all items, there are more than 10 responses in each category for all items."
  },
  {
    "objectID": "raschrvignette/index.html#rasch-analysis-1",
    "href": "raschrvignette/index.html#rasch-analysis-1",
    "title": "RISEkbmRasch",
    "section": "3 Rasch analysis 1",
    "text": "3 Rasch analysis 1\nThe eRm package and Conditional Maximum Likelihood (CML) estimation will be used primarily, with the Partial Credit Model.\nThis is also where the five basic psychometric aspects are good to recall.\n\nUnidimensionality\nResponse categories\nInvariance\nTargeting\nMeasurement uncertainties (reliability)\n\nWe will look at all except invariance and reliability in parallel below. For unidimensionality, we are mostly interested in item fit and residual correlations, as well as PCA of residuals and loadings on the first residual contrast. At the same time, disordered response categories can influence item fit, and targeting can be useful if it is necessary to remove items due to residual correlations.\nWhen unidimensionality and response categories are found to work adequately, we will move on to invariance testing. And when/if invariance looks good, we can investigate reliability/measurement uncertainties.\nIn the tabset-panel below, each tab will have some explanatory text.\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_15\n\n\nScared\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_18\n\n\nGuilty\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fitPCAResidual correlations1st contrast loadingsAnalysis of response categoriesTargetingItem hierarchy\n\n\n\n\nCode\nRIitemfitPCM2(df, 300, 32, cpu = 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    PANAS_11 \n    1.146 \n    1.105 \n    1.449 \n    1.541 \n  \n  \n    PANAS_12 \n    0.776 \n    0.776 \n    -1.98 \n    -2.618 \n  \n  \n    PANAS_13 \n    1.237 \n    1.091 \n    1.43 \n    0.814 \n  \n  \n    PANAS_14 \n    1.01 \n    0.979 \n    0.22 \n    -0.191 \n  \n  \n    PANAS_15 \n    0.664 \n    0.724 \n    -2.844 \n    -3.181 \n  \n  \n    PANAS_16 \n    0.71 \n    0.736 \n    -2.392 \n    -3.241 \n  \n  \n    PANAS_17 \n    0.839 \n    0.872 \n    -0.908 \n    -1.09 \n  \n  \n    PANAS_18 \n    1.061 \n    1 \n    0.313 \n    -0.123 \n  \n  \n    PANAS_19 \n    0.844 \n    0.844 \n    -1.865 \n    -1.982 \n  \n  \n    PANAS_20 \n    1.16 \n    1.121 \n    1.535 \n    1.27 \n  \n\n\n\n\n\nSince we have a sample size over 500, ZSTD item fit values would be inflated if we use the whole sample. To better estimate accurate ZSTD values the RIitemfitPCM() function allows for multiple subsampling. It is recommended to use a sample size between 250 and 500 (Hagell and Westergren 2016). We will set the sample size to 300 and run 32 subsamples. For faster processing, RIitemfitPCM2() enables parallel processing with multiple CPUs/cores.\n“Outfit” refers to item fit when person location is relatively far away from the item location, while “infit” provides estimates for when person and item locations are close together. MSQ should be close to 1, with lower and upper cutoffs set to 0.7 and 1.3, while ZSTD should be around 0, with cutoffs set to +/- 2.0. Infit is usually more important.\nA low item fit indicates that responses are too predictable and provide little information. A high item fit can indicate several things, most often multidimensionality or, for questionnaires, a question that is difficult to interpret. This could for instance be a question that asks about two things at the same time.\n\n\n\n\nCode\nRIpcmPCA(df)\n\n\n\nPCA of Rasch model residuals\n \n  \n    Eigenvalues \n  \n \n\n  \n    1.79 \n  \n  \n    1.46 \n  \n  \n    1.28 \n  \n  \n    1.14 \n  \n  \n    1.06 \n  \n\n\n\n\n\nThe first eigenvalue should be below 2.0.\n\n\n\n\nCode\nRIresidcorr(df, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    PANAS_11 \n    PANAS_12 \n    PANAS_13 \n    PANAS_14 \n    PANAS_15 \n    PANAS_16 \n    PANAS_17 \n    PANAS_18 \n    PANAS_19 \n    PANAS_20 \n  \n \n\n  \n    PANAS_11 \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_12 \n    -0.1 \n     \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_13 \n    -0.05 \n    -0.01 \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_14 \n    -0.11 \n    0.09 \n    0.07 \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_15 \n    -0.14 \n    -0.13 \n    -0.22 \n    -0.29 \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_16 \n    -0.17 \n    -0.1 \n    -0.25 \n    -0.27 \n    0.39 \n     \n     \n     \n     \n     \n  \n  \n    PANAS_17 \n    -0.18 \n    -0.09 \n    -0.09 \n    -0.19 \n    -0.13 \n    -0.08 \n     \n     \n     \n     \n  \n  \n    PANAS_18 \n    -0.19 \n    -0.15 \n    -0.16 \n    -0.18 \n    -0.15 \n    -0.13 \n    0.32 \n     \n     \n     \n  \n  \n    PANAS_19 \n    -0.12 \n    -0.13 \n    -0.25 \n    -0.14 \n    0.1 \n    0.08 \n    -0.21 \n    -0.12 \n     \n     \n  \n  \n    PANAS_20 \n    -0.06 \n    -0.22 \n    -0.07 \n    -0.05 \n    -0.13 \n    -0.19 \n    -0.16 \n    -0.15 \n    -0.08 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.098, which is 0.2 above the average correlation.\n\n\n\n\n\nThe matrix above shows item-pair correlations of item residuals, with highlights in red showing correlations 0.2 or more above the average item-pair correlation (for all item-pairs) (Christensen, Makransky, and Horton 2017).\n\n\n\n\nCode\nRIloadLoc(df)\n\n\n\n\n\nThis figure can be helpful to identify clusters in data or multidimensionality.\n\n\n\n\nCode\nmirt.rasch <- mirt(df, model=1, itemtype='Rasch') # unidimensional Rasch model\n\n\n\nIteration: 1, Log-Lik: -21806.700, Max-Change: 1.28210\nIteration: 2, Log-Lik: -20090.274, Max-Change: 0.41468\nIteration: 3, Log-Lik: -20001.995, Max-Change: 0.22853\nIteration: 4, Log-Lik: -19963.053, Max-Change: 0.15826\nIteration: 5, Log-Lik: -19943.444, Max-Change: 0.12828\nIteration: 6, Log-Lik: -19932.996, Max-Change: 0.10259\nIteration: 7, Log-Lik: -19927.144, Max-Change: 0.08429\nIteration: 8, Log-Lik: -19923.589, Max-Change: 0.07035\nIteration: 9, Log-Lik: -19921.222, Max-Change: 0.05979\nIteration: 10, Log-Lik: -19915.642, Max-Change: 0.05282\nIteration: 11, Log-Lik: -19913.964, Max-Change: 0.01886\nIteration: 12, Log-Lik: -19913.621, Max-Change: 0.01948\nIteration: 13, Log-Lik: -19912.585, Max-Change: 0.01279\nIteration: 14, Log-Lik: -19912.469, Max-Change: 0.01202\nIteration: 15, Log-Lik: -19912.390, Max-Change: 0.01100\nIteration: 16, Log-Lik: -19912.108, Max-Change: 0.00810\nIteration: 17, Log-Lik: -19912.071, Max-Change: 0.00460\nIteration: 18, Log-Lik: -19912.054, Max-Change: 0.00478\nIteration: 19, Log-Lik: -19911.997, Max-Change: 0.00368\nIteration: 20, Log-Lik: -19911.989, Max-Change: 0.00226\nIteration: 21, Log-Lik: -19911.986, Max-Change: 0.00224\nIteration: 22, Log-Lik: -19911.974, Max-Change: 0.00183\nIteration: 23, Log-Lik: -19911.972, Max-Change: 0.00098\nIteration: 24, Log-Lik: -19911.971, Max-Change: 0.00102\nIteration: 25, Log-Lik: -19911.969, Max-Change: 0.00083\nIteration: 26, Log-Lik: -19911.968, Max-Change: 0.00046\nIteration: 27, Log-Lik: -19911.968, Max-Change: 0.00047\nIteration: 28, Log-Lik: -19911.967, Max-Change: 0.00039\nIteration: 29, Log-Lik: -19911.967, Max-Change: 0.00021\nIteration: 30, Log-Lik: -19911.967, Max-Change: 0.00021\nIteration: 31, Log-Lik: -19911.967, Max-Change: 0.00018\nIteration: 32, Log-Lik: -19911.967, Max-Change: 0.00010\nIteration: 33, Log-Lik: -19911.967, Max-Change: 0.00011\nIteration: 34, Log-Lik: -19911.967, Max-Change: 0.00009\n\n\nCode\nplot(mirt.rasch, type=\"trace\")\n\n\n\n\n\nEach response category for each item should have a curve that indicates it to be the most probably response at some point on the latent variable (x axis in the figure).\n\n\n\n\nCode\n# increase fig-height above as needed, if you have many items\nRItargeting(df)\n\n\n\n\n\nThis figure shows how well the items fit the respondents/persons. It is a sort of Wright Map that shows person and item threshold locations on the same logit scale.\nThe top part shows person location histogram, the middle part a histogram of item threshold locations, and the bottom part shows individual item threshold locations. The histograms also show means and standard deviations.\n\n\n\n\nCode\nRIitemHierarchy(df)\n\n\n\n\n\n\n\n\n\nItem 18 has issues with the second lowest category, which needs to be merged with the lowest category.\nItem 15 shows low item fit.\nTwo item-pairs have high residual correlations:\n\n15 and 16 (scared and afraid)\n17 and 18 (ashamed and guilty)\n\nSince item 15 also had low fit, we will remove it. And since item 18 had problems with response categories, it will also be removed.\n\n\nCode\nremoved.items <- c(\"PANAS_15\",\"PANAS_18\")\n\ndf2 <- df %>% \n  select(!any_of(removed.items))"
  },
  {
    "objectID": "raschrvignette/index.html#rasch-analysis-2",
    "href": "raschrvignette/index.html#rasch-analysis-2",
    "title": "RISEkbmRasch",
    "section": "4 Rasch analysis 2",
    "text": "4 Rasch analysis 2\nWith items 15 and 18 removed.\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fitPCAResidual correlations1st contrast loadingsTargetingItem hierarchy\n\n\n\n\nCode\nRIitemfitPCM2(df2, 300, 32, cpu = 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    PANAS_11 \n    1.058 \n    1.031 \n    0.538 \n    0.233 \n  \n  \n    PANAS_12 \n    0.714 \n    0.722 \n    -2.551 \n    -3.321 \n  \n  \n    PANAS_13 \n    1.127 \n    1.007 \n    0.86 \n    0.2 \n  \n  \n    PANAS_14 \n    0.908 \n    0.879 \n    -0.957 \n    -1.371 \n  \n  \n    PANAS_16 \n    0.758 \n    0.788 \n    -1.895 \n    -2.672 \n  \n  \n    PANAS_17 \n    0.897 \n    0.925 \n    -0.75 \n    -0.455 \n  \n  \n    PANAS_19 \n    0.848 \n    0.842 \n    -1.872 \n    -2.282 \n  \n  \n    PANAS_20 \n    1.082 \n    1.058 \n    0.941 \n    0.656 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIpcmPCA(df2)\n\n\n\nPCA of Rasch model residuals\n \n  \n    Eigenvalues \n  \n \n\n  \n    1.52 \n  \n  \n    1.33 \n  \n  \n    1.19 \n  \n  \n    1.15 \n  \n  \n    1.00 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIresidcorr(df2, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    PANAS_11 \n    PANAS_12 \n    PANAS_13 \n    PANAS_14 \n    PANAS_16 \n    PANAS_17 \n    PANAS_19 \n    PANAS_20 \n  \n \n\n  \n    PANAS_11 \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_12 \n    -0.16 \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_13 \n    -0.11 \n    -0.06 \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_14 \n    -0.19 \n    0.03 \n    0 \n     \n     \n     \n     \n     \n  \n  \n    PANAS_16 \n    -0.16 \n    -0.08 \n    -0.25 \n    -0.28 \n     \n     \n     \n     \n  \n  \n    PANAS_17 \n    -0.18 \n    -0.07 \n    -0.09 \n    -0.19 \n    0 \n     \n     \n     \n  \n  \n    PANAS_19 \n    -0.15 \n    -0.15 \n    -0.28 \n    -0.19 \n    0.12 \n    -0.16 \n     \n     \n  \n  \n    PANAS_20 \n    -0.1 \n    -0.27 \n    -0.12 \n    -0.11 \n    -0.18 \n    -0.15 \n    -0.09 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.071, which is 0.2 above the average correlation.\n\n\n\n\n\n\n\n\n\nCode\nRIloadLoc(df2)\n\n\n\n\n\n\n\n\n\nCode\n# increase fig-height above as needed, if you have many items\nRItargeting(df2)\n\n\n\n\n\n\n\n\n\nCode\nRIitemHierarchy(df2)\n\n\n\n\n\n\n\n\n\nItems 12 and 16 are a bit low in item fit ZSTD.\nItems 16 and 19 have a residual correlation at about 0.25 above the average level.\nLet’s look at DIF before taking action upon this information."
  },
  {
    "objectID": "raschrvignette/index.html#invariancedif",
    "href": "raschrvignette/index.html#invariancedif",
    "title": "RISEkbmRasch",
    "section": "5 Invariance/DIF",
    "text": "5 Invariance/DIF\n\n5.1 Sex\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\nTableFigure itemsFigure thresholds\n\n\n\n\nCode\nRIdifTable(df2, dif.sex)\n\n\n\n\n\n\n\n\n\n\nItem\n\n\n2\n\n\n3\n\n\nMean location\n\n\nStDev\n\n\nMaxDiff\n\n\n\n\n\n\nPANAS_11\n\n\n-0.314\n\n\n-0.196\n\n\n-0.255\n\n\n0.083\n\n\n0.117\n\n\n\n\nPANAS_12\n\n\n0.028\n\n\n-0.044\n\n\n-0.008\n\n\n0.051\n\n\n0.073\n\n\n\n\nPANAS_13\n\n\n0.553\n\n\n0.402\n\n\n0.478\n\n\n0.107\n\n\n0.151\n\n\n\n\nPANAS_14\n\n\n-0.328\n\n\n-0.183\n\n\n-0.255\n\n\n0.103\n\n\n0.146\n\n\n\n\nPANAS_16\n\n\n0.004\n\n\n0.114\n\n\n0.059\n\n\n0.078\n\n\n0.111\n\n\n\n\nPANAS_17\n\n\n0.520\n\n\n0.290\n\n\n0.405\n\n\n0.163\n\n\n0.230\n\n\n\n\nPANAS_19\n\n\n-0.495\n\n\n-0.355\n\n\n-0.425\n\n\n0.099\n\n\n0.140\n\n\n\n\nPANAS_20\n\n\n0.032\n\n\n-0.028\n\n\n0.002\n\n\n0.042\n\n\n0.059\n\n\n\n\n\n\n\n\n\n\n\nCode\nRIdifFigure(df2, dif.sex)\n\n\n\n\n\n\n\n\n\nCode\nRIdifFigThresh(df2, dif.sex)\n\n\n\n\n\n\n\n\nWhile no item shows problematic levels of DIF regarding item location, as shown by the table, there is an interesting pattern in the thresholds figure. The lowest threshold seems to be slightly lower for node 3 (Male) for all items.\nThe results do not require any action.\n\n\n5.2 Age\n\n\nCode\nRIdifTable(df2, dif.age)\n\n\n[1] \"No significant DIF found.\"\n\n\nNo DIF found for age.\n\n\n5.3 Group\n\n\nCode\nRIdifTable(df2, dif.group)\n\n\n[1] \"No significant DIF found.\"\n\n\nAnd no DIF for group.\n\n\n5.4 Sex and age\nWhile it has not been implemented in this package, the psychotree package allows for DIF interaction analysis between multiple DIF variables. This will also serve as an example of how to look at and modify a package function, if needed. Use View(RIdifTable) to view the code in the function.\n\n\nCode\ndfin <- df2\n\ndf.tree <- data.frame(matrix(ncol = 0, nrow = nrow(dfin)))\ndf.tree$difdata <- as.matrix(dfin)\ndf.tree$dif.sex <- dif.sex\ndf.tree$dif.age <- dif.age\n\npctree.out <- pctree(difdata ~ dif.sex + dif.age, data = df.tree)\nplot(pctree.out)\n\n\n\n\n\nNo interaction effect found for sex and age. The analysis only shows the previously identified DIF for sex."
  },
  {
    "objectID": "raschrvignette/index.html#rasch-analysis-3",
    "href": "raschrvignette/index.html#rasch-analysis-3",
    "title": "RISEkbmRasch",
    "section": "6 Rasch analysis 3",
    "text": "6 Rasch analysis 3\nThere were no issues with DIF for any item. We still need to address the previously identified problems\nItems 12 and 16 are a bit low in item fit ZSTD.\nItems 16 and 19 have a residual correlation at about 0.25 above the average level.\nWe’ll remove item 19 since item 16 has better targeting.\n\n\nCode\nremoved.items <- c(removed.items,\"PANAS_19\")\n\ndf2 <- df2 %>% \n  select(!any_of(removed.items))\n\n\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fitResidual correlationsTargetingItem hierarchy\n\n\n\n\nCode\nRIitemfitPCM2(df2, 300, 32, 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    PANAS_11 \n    1.009 \n    1.002 \n    0.141 \n    0.029 \n  \n  \n    PANAS_12 \n    0.687 \n    0.697 \n    -3.032 \n    -3.579 \n  \n  \n    PANAS_13 \n    1 \n    0.94 \n    -0.041 \n    -0.551 \n  \n  \n    PANAS_14 \n    0.861 \n    0.842 \n    -1.667 \n    -1.85 \n  \n  \n    PANAS_16 \n    0.836 \n    0.831 \n    -1.284 \n    -2.123 \n  \n  \n    PANAS_17 \n    0.858 \n    0.879 \n    -0.946 \n    -0.981 \n  \n  \n    PANAS_20 \n    1.068 \n    1.045 \n    0.924 \n    0.373 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIresidcorr(df2, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    PANAS_11 \n    PANAS_12 \n    PANAS_13 \n    PANAS_14 \n    PANAS_16 \n    PANAS_17 \n    PANAS_20 \n  \n \n\n  \n    PANAS_11 \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_12 \n    -0.18 \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_13 \n    -0.15 \n    -0.11 \n     \n     \n     \n     \n     \n  \n  \n    PANAS_14 \n    -0.22 \n    0 \n    -0.04 \n     \n     \n     \n     \n  \n  \n    PANAS_16 \n    -0.14 \n    -0.06 \n    -0.26 \n    -0.26 \n     \n     \n     \n  \n  \n    PANAS_17 \n    -0.2 \n    -0.09 \n    -0.14 \n    -0.22 \n    0 \n     \n     \n  \n  \n    PANAS_20 \n    -0.12 \n    -0.29 \n    -0.16 \n    -0.13 \n    -0.15 \n    -0.17 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.053, which is 0.2 above the average correlation.\n\n\n\n\n\n\n\n\n\nCode\nRItargeting(df2)\n\n\n\n\n\n\n\n\n\nCode\nRIitemHierarchy(df2)\n\n\n\n\n\n\n\n\n\nNo problematic residual correlations, but item 12 is clearly low in item fit."
  },
  {
    "objectID": "raschrvignette/index.html#rasch-analysis-4",
    "href": "raschrvignette/index.html#rasch-analysis-4",
    "title": "RISEkbmRasch",
    "section": "7 Rasch analysis 4",
    "text": "7 Rasch analysis 4\n\n\nCode\nremoved.items <- c(removed.items,\"PANAS_12\")\n\ndf2 <- df2 %>% \n  select(!any_of(removed.items))\n\n\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fitResidual correlationsTargetingItem hierarchy\n\n\n\n\nCode\nRIitemfitPCM2(df2, 300, 32, 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    PANAS_11 \n    0.926 \n    0.932 \n    -0.696 \n    -0.888 \n  \n  \n    PANAS_13 \n    0.906 \n    0.892 \n    -0.84 \n    -0.803 \n  \n  \n    PANAS_14 \n    0.85 \n    0.83 \n    -1.705 \n    -2.204 \n  \n  \n    PANAS_16 \n    0.796 \n    0.802 \n    -1.671 \n    -2.38 \n  \n  \n    PANAS_17 \n    0.803 \n    0.835 \n    -1.32 \n    -1.627 \n  \n  \n    PANAS_20 \n    0.958 \n    0.944 \n    -0.239 \n    -0.638 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIresidcorr(df2, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    PANAS_11 \n    PANAS_13 \n    PANAS_14 \n    PANAS_16 \n    PANAS_17 \n    PANAS_20 \n  \n \n\n  \n    PANAS_11 \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_13 \n    -0.17 \n     \n     \n     \n     \n     \n  \n  \n    PANAS_14 \n    -0.22 \n    -0.03 \n     \n     \n     \n     \n  \n  \n    PANAS_16 \n    -0.15 \n    -0.26 \n    -0.24 \n     \n     \n     \n  \n  \n    PANAS_17 \n    -0.22 \n    -0.14 \n    -0.21 \n    0.01 \n     \n     \n  \n  \n    PANAS_20 \n    -0.17 \n    -0.2 \n    -0.16 \n    -0.18 \n    -0.2 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.03, which is 0.2 above the average correlation.\n\n\n\n\n\n\n\n\n\nCode\nRItargeting(df2)\n\n\n\n\n\n\n\n\n\nCode\nRIitemHierarchy(df2)\n\n\n\n\n\n\n\n\n\nThere are several item thresholds that are very closely located, as shown in the item hierarchy figure. This is not ideal, since it will inflate reliability estimates.\nHowever, we will not modify the response categories for this sample/simple analysis, we only note that this is not ideal."
  },
  {
    "objectID": "raschrvignette/index.html#reliability",
    "href": "raschrvignette/index.html#reliability",
    "title": "RISEkbmRasch",
    "section": "8 Reliability",
    "text": "8 Reliability\n\n\nCode\nRItif(df2)\n\n\n\n\n\nWhile 11.8% of respondents had a floor effect, the figure above shows us that 41.8% are located below the point where the items produce a person separation index (reliability) of 0.7 or higher."
  },
  {
    "objectID": "raschrvignette/index.html#person-fit",
    "href": "raschrvignette/index.html#person-fit",
    "title": "RISEkbmRasch",
    "section": "9 Person fit",
    "text": "9 Person fit\nWe can also look at how the respondents fit the Rasch model with these items.\n\n\nCode\nRIpfit(df2)"
  },
  {
    "objectID": "raschrvignette/index.html#item-parameters",
    "href": "raschrvignette/index.html#item-parameters",
    "title": "RISEkbmRasch",
    "section": "10 Item parameters",
    "text": "10 Item parameters\nTo allow others (and oneself) to use the item parameters estimated for estimation of person locations/thetas, we should make the item parameters available. The function will also write a csv-file with the item threshold locations. Estimations of person locations/thetas can be done with the thetaEst() function from the catR package. Code for this is available upon request and will be made into a function in the RISEkbmRasch package at some point.\n\n\nCode\nRIitemparams(df2)\n\n\n\n\n \n  \n      \n    Threshold 1 \n    Threshold 2 \n    Threshold 3 \n    Threshold 4 \n    Item location \n  \n \n\n  \n    PANAS_11 \n    -1.24 \n    -0.34 \n    0.07 \n    1.47 \n    -0.01 \n  \n  \n    PANAS_13 \n    0.06 \n    0.14 \n    0.83 \n    1.78 \n    0.7 \n  \n  \n    PANAS_14 \n    -0.99 \n    -0.26 \n    0.12 \n    1.11 \n    -0.01 \n  \n  \n    PANAS_16 \n    -0.22 \n    -0.13 \n    0.22 \n    1.34 \n    0.3 \n  \n  \n    PANAS_17 \n    0.28 \n    0.30 \n    0.75 \n    1.17 \n    0.63 \n  \n  \n    PANAS_20 \n    -0.90 \n    -0.28 \n    0.62 \n    1.59 \n    0.26 \n  \n\n\n\n\n\n\n10.1 Ordinal sum score to interval score\nThis table shows the corresponding sum score values and logit scores, with standard errors for each logit value.\n\n\nCode\nRIscoreSE(df2)\n\n\n\n\n\n\n\nOrdinal sum score\n\n\nLogit score\n\n\nLogit std.error\n\n\n\n\n\n\n0\n\n\n-3.21\n\n\nNA\n\n\n\n\n1\n\n\n-2.45\n\n\n1.00\n\n\n\n\n2\n\n\n-1.76\n\n\n0.71\n\n\n\n\n3\n\n\n-1.35\n\n\n0.58\n\n\n\n\n4\n\n\n-1.05\n\n\n0.51\n\n\n\n\n5\n\n\n-0.82\n\n\n0.46\n\n\n\n\n6\n\n\n-0.62\n\n\n0.43\n\n\n\n\n7\n\n\n-0.44\n\n\n0.41\n\n\n\n\n8\n\n\n-0.28\n\n\n0.39\n\n\n\n\n9\n\n\n-0.13\n\n\n0.38\n\n\n\n\n10\n\n\n0.01\n\n\n0.37\n\n\n\n\n11\n\n\n0.15\n\n\n0.37\n\n\n\n\n12\n\n\n0.28\n\n\n0.37\n\n\n\n\n13\n\n\n0.42\n\n\n0.37\n\n\n\n\n14\n\n\n0.56\n\n\n0.38\n\n\n\n\n15\n\n\n0.71\n\n\n0.39\n\n\n\n\n16\n\n\n0.86\n\n\n0.40\n\n\n\n\n17\n\n\n1.03\n\n\n0.42\n\n\n\n\n18\n\n\n1.22\n\n\n0.45\n\n\n\n\n19\n\n\n1.43\n\n\n0.48\n\n\n\n\n20\n\n\n1.69\n\n\n0.53\n\n\n\n\n21\n\n\n2.01\n\n\n0.61\n\n\n\n\n22\n\n\n2.46\n\n\n0.73\n\n\n\n\n23\n\n\n3.19\n\n\n1.02\n\n\n\n\n24\n\n\n3.99\n\n\nNA"
  },
  {
    "objectID": "raschrvignette/index.html#software-used",
    "href": "raschrvignette/index.html#software-used",
    "title": "RISEkbmRasch",
    "section": "11 Software used",
    "text": "11 Software used\n\n\nCode\nlibrary(grateful) # devtools::install_github(\"Pakillo/grateful\")\npkgs <- cite_packages(cite.tidyverse = TRUE, \n                      output = \"table\",\n                      bib.file = \"grateful-refs.bib\",\n                      include.RStudio = TRUE)\nformattable(pkgs, \n            table.attr = 'class=\\\"table table-striped\\\" style=\"font-size: 13px; font-family: Lato; width: 80%\"')\n\n\n\n\n\n\n\nPackage\n\n\nVersion\n\n\nCitation\n\n\n\n\n\n\nbase\n\n\n4.2.2\n\n\nR Core Team (2022)\n\n\n\n\ncar\n\n\n3.1.1\n\n\nFox and Weisberg (2019)\n\n\n\n\ngrateful\n\n\n0.1.11\n\n\nRodríguez-Sánchez, Jackson, and Hutchins (2022)\n\n\n\n\nRISEkbmRasch\n\n\n0.1.7.8\n\n\nJohansson (2022)\n\n\n\n\nrmarkdown\n\n\n2.19\n\n\nXie, Allaire, and Grolemund (2018); Xie, Dervieux, and Riederer (2020); Allaire et al. (2022)\n\n\n\n\ntidyverse\n\n\n1.3.2\n\n\nWickham et al. (2019)"
  },
  {
    "objectID": "raschrvignette/RaschRvign.html",
    "href": "raschrvignette/RaschRvign.html",
    "title": "RISEkbmRasch",
    "section": "",
    "text": "This is a work-in-progress to create a proper vignette to introduce how to make use of the RISEkbmRasch R package.\nDetails on installation is at the package link above. This vignette will walk through a sample analysis using an open dataset with questionnaire data. This will include some data wrangling to structure the item data and itemlabels, then provide examples of the different functions. The full source code of this document can be found either in this repository or by clicking on </> CODE at the top beside the table of contents. You should be able to use the source code as is and reproduce this document locally, as long as you have the required packages installed. This site is built using the open source publishing tool Quarto.\nOne of the aims with this package is to simplify psychometric analysis to shed light on the measurement properties of a scale. In a paper recently made available as a preprint (Johansson et al. 2023), our research group propose that the basic aspects of a psychometric analysis should include information about:\nWe’ll include several ways to investigate these measurement properties, using Rasch Measurement Theory. There are also functions in the package less directly related to the criteria above, that will be shown in this vignette.\nPlease note that this is a sample analysis to showcase the R package. It is not intended as a “best practice” psychometric analysis example."
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#getting-started",
    "href": "raschrvignette/RaschRvign.html#getting-started",
    "title": "RISEkbmRasch",
    "section": "1 Getting started",
    "text": "1 Getting started\nSince the package is intended for use with Quarto, this vignette has also been created with Quarto. A “template” .qmd file is available that can be useful to have handy for copy&paste when running a new analysis.\nLoading the RISEkbmRasch package should also get all the dependencies loaded. You may need to make sure that ggplot2 is updated to version 3.4.0 or later. However, it could be desirable to explicitly load the packages used, to simplify the automatic creation of citations for them, using the grateful package.\n\n\nCode\nlibrary(RISEkbmRasch) # devtools::install_github(\"pgmj/RISEkbmRasch\")\nlibrary(grateful) # devtools::install_github(\"Pakillo/grateful\")\nlibrary(ggrepel)\nlibrary(car)\nlibrary(kableExtra)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(eRm)\nlibrary(mirt)\nlibrary(psych)\nlibrary(ggplot2)\nlibrary(psychotree)\nlibrary(matrixStats)\nlibrary(reshape)\nlibrary(knitr)\nlibrary(cowplot)\nlibrary(formattable) \nlibrary(glue)\nlibrary(foreach)\n\n\n\n1.1 Loading data\nWe will use data from a recent paper investigating the “initial elevation effect” (Anvari et al. 2022), and focus on the 10 negative items from the PANAS. The data is available at the OSF website.\n\n\nCode\ndf.all <- read_csv(\"https://osf.io/download/6fbr5/?view_only=6ad4c2bb65d843bfb1470b8959913630\")\n\n# subset items and demographic variables\ndf <- df.all %>% \n  select(starts_with(\"PANASD2_1\"),\n         starts_with(\"PANASD2_20\"),\n         age,Sex,Group) %>% \n  select(!PANASD2_10_Active) %>% \n  select(!PANASD2_1_Attentive)\n\n\n\n\n1.2 Itemlabels\nThen we set up the itemlabels dataframe. This could also be done using the free LibreOffice Calc or MS Excel. Just make sure the file has the same structure, with two variables named itemnr and item that contain the item names and item description. The item names have to match the variable names in the item dataframe.\n\n\nCode\nitemlabels <- df %>% \n  select(starts_with(\"PAN\")) %>% \n  names() %>% \n  as_tibble() %>% \n  separate(value, c(NA, \"item\"), sep =\"_[0-9][0-9]_\") %>% \n  mutate(itemnr = paste0(\"PANAS_\",c(11:20)), .before = \"item\")\n\n\n\n\n1.3 Demographics\nVariables for invariance tests such as Differential Item Functioning (DIF) need to be separated into vectors (ideally as factors with specified labels and levels) with the same length as the number of rows in the dataset. This means that any kind of removal of respondents with missing data needs to be done before separating the DIF variables.\nLet’s first see whether any data is missing.\n\n\nCode\ndf %>%\n  select(starts_with(\"PAN\")) %>% \n  t() %>% \n  as.data.frame() %>% \n  mutate(Missing = rowSums(is.na(.))) %>% \n  select(Missing) %>% \n  arrange(desc(Missing)) %>% \n  rownames_to_column(var = \"Item\") %>% \n  mutate(Percentage = Missing/nrow(df)*100) %>% \n  mutate(Item = factor(Item, levels = rev(Item))) %>%\n  ggplot(aes(x = Item, y = Percentage)) +\n  geom_col() +\n  coord_flip() +\n  ggtitle(\"Missing data per item\") +\n  xlab(\"Items\") +\n  ylab(\"Percentage of responses missing\")\n\n\n\n\n\nNo missing data, which makes this easier. We also need to check how the Sex variable has been coded and which responses are present in the data.\n\n\nCode\ndf %>% \n  distinct(Sex)\n\n\n# A tibble: 5 × 1\n  Sex              \n  <chr>            \n1 Male             \n2 Female           \n3 CONSENT REVOKED  \n4 Prefer not to say\n5 DATA EXPIRED     \n\n\nWe’ll recode all responses apart from Male/Female as missing (NA).\n\n\nCode\ndf$Sex <- car::recode(df$Sex,\"'CONSENT REVOKED'=NA;\n                      'Prefer not to say'=NA;\n                      'DATA EXPIRED'=NA\")\n\ndif.sex <- factor(df$Sex)\n\n\nNow we can make use of a very simple function included in this package!\n\n\nCode\nRIdemographics(dif.sex, \"Sex\")\n\n\n\n\n \n  \n    Sex \n    n \n    Percent \n  \n \n\n  \n    Female \n    896 \n    48.4 \n  \n  \n    Male \n    955 \n    51.6 \n  \n\n\n\n\n\nAnd remove the DIF variable from the item dataset.\n\n\nCode\ndf$Sex <- NULL\n\n\nLet’s move on to the age variable.\n\n\nCode\nglimpse(df$age)\n\n\n num [1:1856] 27 32 21 27 20 22 23 25 21 26 ...\n\n\nSometimes age is provided in categories, but here we have a numeric variable with age in years. Let’s have a quick look at the age distribution using a histogram, and calculate mean, sd and range.\n\n\nCode\n### simpler version of the ggplot below\n# hist(df$age, col = \"#009ca6\")\n# \n# df %>% \n#   summarise(Mean = round(mean(age, na.rm = T),1),\n#             StDev = round(sd(age, na.rm = T),1)\n#             )\n\nggplot(df) +\n  geom_histogram(aes(x = age), \n                 fill = \"#009ca6\",\n                 col = \"black\") +\n  geom_vline(xintercept = mean(df$age), \n             linewidth = 1.5,\n             linetype = 2,\n             col = \"#ffe500\") +\n  annotate(\"rect\", ymin = 0, ymax = Inf, \n           xmin = (mean(df$age) - sd(df$age)), xmax = (mean(df$age) + sd(df$age)), \n           alpha = .3) +\n  labs(title = \"\",\n       x = \"Age in years\",\n       y = \"Number of respondents\",\n       caption = glue(\"Note. Mean age is {round(mean(df$age, na.rm = T),1)} years with a standard deviation of {round(sd(df$age, na.rm = T),1)}. Age range is {min(df$age)} to {max(df$age)}.\")\n       ) +\n  theme(plot.caption = element_text(hjust = 0, face = \"italic\"))\n\n\n\n\n\nAge also needs to be a separate vector, and removed from the item dataframe.\n\n\nCode\ndif.age <- df$age\ndf$age <- NULL\n\n\nThere is also a grouping variable which needs to be converted to a factor.\n\n\nCode\ndif.group <- factor(df$Group)\ndf$Group <- NULL\nRIdemographics(dif.group, \"Group\")\n\n\n\n\n \n  \n    Group \n    n \n    Percent \n  \n \n\n  \n    Earlier Start \n    903 \n    48.7 \n  \n  \n    Later Start \n    953 \n    51.3 \n  \n\n\n\n\n\nWith only item data remaining in the dataframe, we can easily rename the items in the item dataframe. These names match the itemlabels variable itemnr.\n\n\nCode\nnames(df) <- itemlabels$itemnr\n\n\nNow we are all set for the psychometric analysis!"
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#descriptives",
    "href": "raschrvignette/RaschRvign.html#descriptives",
    "title": "RISEkbmRasch",
    "section": "2 Descriptives",
    "text": "2 Descriptives\nFirst, let’s familiarize ourselves with the data.\n\n2.1 Overall responses\n\n\nCode\nRIallresp(df)\n\n\n\n\n\n\n\nResponse category\n\n\nNumber of responses\n\n\nPercent\n\n\n\n\n\n\n1\n\n\n9444\n\n\n50.9\n\n\n\n\n2\n\n\n4147\n\n\n22.3\n\n\n\n\n3\n\n\n2689\n\n\n14.5\n\n\n\n\n4\n\n\n1732\n\n\n9.3\n\n\n\n\n5\n\n\n548\n\n\n3.0\n\n\n\n\n\n\n\nThe Rasch model requires the lowest response category to be zero, which makes it necessary for us to recode our data from 1-5 to 0-4.\n\n\nCode\ndf <- df %>% \n  mutate(across(everything(), ~ car::recode(.x, \"1=0;2=1;3=2;4=3;5=4\", as.factor = F)))\n\nRIallresp(df)\n\n\n\n\n\n\n\nResponse category\n\n\nNumber of responses\n\n\nPercent\n\n\n\n\n\n\n0\n\n\n9444\n\n\n50.9\n\n\n\n\n1\n\n\n4147\n\n\n22.3\n\n\n\n\n2\n\n\n2689\n\n\n14.5\n\n\n\n\n3\n\n\n1732\n\n\n9.3\n\n\n\n\n4\n\n\n548\n\n\n3.0\n\n\n\n\n\n\n\n\n2.1.1 Floor/ceiling effects\nNow, we can also look at the raw distribution of sum scores. The RIrawdist() function is a bit crude, since it requires responses in all response categories to accurately calculate max and min scores.\n\n\nCode\nRIrawdist(df)\n\n\n\n\n\nWe can see a floor effect with 11.8% of participants responding in the lowest category for all items.\n\n\n2.1.2 Guttman structure\nWhile not really necessary, it could be interesting to see whether the response patterns follow a Guttman-like structure. Items and persons are sorted based on lower->higher responses, and we should see the color move from yellow in the lower left corner to blue in the upper right corner.\n\n\nCode\nRIheatmap(df)\n\n\n\n\n\nIn this data, we see the floor effect on the left, with 11.8% of respondents all yellow, and a rather weak Guttman structure. This could also be due to a low variation in item locations/difficulties.\n\n\n\n2.2 Item level descriptives\nThere are many ways to look at the item level data, and we’ll get them all together in the tab-panel below. The RItileplot() is probably most informative, since it provides the number of responses in each response category for each item. It is usually recommended to have at least ~10 responses in each category for psychometric analysis, no matter which methodology is used.\nKudos to Solomon Kurz for providing the idea and code on which the tile plot function is built!\nMost people will be familiar with the barplot, and this is probably most intuitive to understand the response distribution within each item. However, if there are many items it will take a while to review, and does not provide the same overview as a tileplot or stacked bars.\n\n\nCode\n# this code chunk creates a small table in the margin beside the panel-tabset output below,\n# showing all items currently in the df dataframe\n# the chunk option \"#| column: margin\" is necessary for the layout to work as intended\nRIlistItemsMargin(df, fontsize = 13)\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_15\n\n\nScared\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_18\n\n\nGuilty\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nTile plotStacked barsBarplots\n\n\n\n\nCode\nRItileplot(df)\n\n\n\n\n\n\n\n\n\nCode\nRIbarstack(df)\n\n\n\n\n\n\n\n\n\nCode\nRIbarplot(df)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhile response patterns are skewed for all items, there are more than 10 responses in each category for all items."
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#rasch-analysis-1",
    "href": "raschrvignette/RaschRvign.html#rasch-analysis-1",
    "title": "RISEkbmRasch",
    "section": "3 Rasch analysis 1",
    "text": "3 Rasch analysis 1\nThe eRm package and Conditional Maximum Likelihood (CML) estimation will be used primarily, with the Partial Credit Model.\nThis is also where the five basic psychometric aspects are good to recall.\n\nUnidimensionality\nResponse categories\nInvariance\nTargeting\nMeasurement uncertainties (reliability)\n\nWe will look at all except invariance and reliability in parallel below. For unidimensionality, we are mostly interested in item fit and residual correlations, as well as PCA of residuals and loadings on the first residual contrast. At the same time, disordered response categories can influence item fit, and targeting can be useful if it is necessary to remove items due to residual correlations.\nWhen unidimensionality and response categories are found to work adequately, we will move on to invariance testing. And when/if invariance looks good, we can investigate reliability/measurement uncertainties.\nIn the tabset-panel below, each tab will have some explanatory text.\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_15\n\n\nScared\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_18\n\n\nGuilty\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fitPCAResidual correlations1st contrast loadingsAnalysis of response categoriesTargetingItem hierarchy\n\n\n\n\nCode\nRIitemfitPCM2(df, 300, 32, cpu = 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    PANAS_11 \n    1.146 \n    1.105 \n    1.563 \n    1.093 \n  \n  \n    PANAS_12 \n    0.776 \n    0.776 \n    -2.261 \n    -2.615 \n  \n  \n    PANAS_13 \n    1.237 \n    1.091 \n    1.327 \n    0.689 \n  \n  \n    PANAS_14 \n    1.01 \n    0.979 \n    -0.068 \n    -0.362 \n  \n  \n    PANAS_15 \n    0.664 \n    0.724 \n    -2.633 \n    -3.113 \n  \n  \n    PANAS_16 \n    0.71 \n    0.736 \n    -2.128 \n    -3.091 \n  \n  \n    PANAS_17 \n    0.839 \n    0.872 \n    -1.017 \n    -1.423 \n  \n  \n    PANAS_18 \n    1.061 \n    1 \n    0.549 \n    0.278 \n  \n  \n    PANAS_19 \n    0.844 \n    0.844 \n    -1.787 \n    -1.835 \n  \n  \n    PANAS_20 \n    1.16 \n    1.121 \n    1.572 \n    1.464 \n  \n\n\n\n\n\nSince we have a sample size over 500, ZSTD item fit values would be inflated if we use the whole sample. To better estimate accurate ZSTD values the RIitemfitPCM() function allows for multiple subsampling. It is recommended to use a sample size between 250 and 500 (Hagell and Westergren 2016). We will set the sample size to 300 and run 32 subsamples. For faster processing, RIitemfitPCM2() enables parallel processing with multiple CPUs/cores.\n“Outfit” refers to item fit when person location is relatively far away from the item location, while “infit” provides estimates for when person and item locations are close together. MSQ should be close to 1, with lower and upper cutoffs set to 0.7 and 1.3, while ZSTD should be around 0, with cutoffs set to +/- 2.0. Infit is usually more important.\nA low item fit indicates that responses are too predictable and provide little information. A high item fit can indicate several things, most often multidimensionality or, for questionnaires, a question that is difficult to interpret. This could for instance be a question that asks about two things at the same time.\n\n\n\n\nCode\nRIpcmPCA(df)\n\n\n\nPCA of Rasch model residuals\n \n  \n    Eigenvalues \n  \n \n\n  \n    1.79 \n  \n  \n    1.46 \n  \n  \n    1.28 \n  \n  \n    1.14 \n  \n  \n    1.06 \n  \n\n\n\n\n\nThe first eigenvalue should be below 2.0.\n\n\n\n\nCode\nRIresidcorr(df, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    PANAS_11 \n    PANAS_12 \n    PANAS_13 \n    PANAS_14 \n    PANAS_15 \n    PANAS_16 \n    PANAS_17 \n    PANAS_18 \n    PANAS_19 \n    PANAS_20 \n  \n \n\n  \n    PANAS_11 \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_12 \n    -0.1 \n     \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_13 \n    -0.05 \n    -0.01 \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_14 \n    -0.11 \n    0.09 \n    0.07 \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_15 \n    -0.14 \n    -0.13 \n    -0.22 \n    -0.29 \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_16 \n    -0.17 \n    -0.1 \n    -0.25 \n    -0.27 \n    0.39 \n     \n     \n     \n     \n     \n  \n  \n    PANAS_17 \n    -0.18 \n    -0.09 \n    -0.09 \n    -0.19 \n    -0.13 \n    -0.08 \n     \n     \n     \n     \n  \n  \n    PANAS_18 \n    -0.19 \n    -0.15 \n    -0.16 \n    -0.18 \n    -0.15 \n    -0.13 \n    0.32 \n     \n     \n     \n  \n  \n    PANAS_19 \n    -0.12 \n    -0.13 \n    -0.25 \n    -0.14 \n    0.1 \n    0.08 \n    -0.21 \n    -0.12 \n     \n     \n  \n  \n    PANAS_20 \n    -0.06 \n    -0.22 \n    -0.07 \n    -0.05 \n    -0.13 \n    -0.19 \n    -0.16 \n    -0.15 \n    -0.08 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.098, which is 0.2 above the average correlation.\n\n\n\n\n\nThe matrix above shows item-pair correlations of item residuals, with highlights in red showing correlations 0.2 or more above the average item-pair correlation (for all item-pairs) (Christensen, Makransky, and Horton 2017).\n\n\n\n\nCode\nRIloadLoc(df)\n\n\n\n\n\nThis figure can be helpful to identify clusters in data or multidimensionality.\n\n\n\n\nCode\n# the line of code below is necessary prior to creating the plot:\n# mirt.rasch <- mirt(df, model=1, itemtype='Rasch') # unidimensional Rasch model\nplot(mirt.rasch, type=\"trace\")\n\n\n\n\n\nEach response category for each item should have a curve that indicates it to be the most probably response at some point on the latent variable (x axis in the figure).\n\n\n\n\nCode\n# increase fig-height above as needed, if you have many items\nRItargeting(df)\n\n\n\n\n\nThis figure shows how well the items fit the respondents/persons. It is a sort of Wright Map that shows person and item threshold locations on the same logit scale.\nThe top part shows person location histogram, the middle part a histogram of item threshold locations, and the bottom part shows individual item threshold locations. The histograms also show means and standard deviations.\n\n\n\n\nCode\nRIitemHierarchy(df)\n\n\n\n\n\n\n\n\n\nItem 18 has issues with the second lowest category, which needs to be merged with the lowest category.\nItem 15 shows low item fit.\nTwo item-pairs show residual correlations above the cutoff value:\n\n15 and 16 (scared and afraid)\n17 and 18 (ashamed and guilty)\n\nSince item 15 also had low item fit, we will remove it. And since item 18 had problems with response categories, it will also be removed.\n\n\nCode\nremoved.items <- c(\"PANAS_15\",\"PANAS_18\")\n\ndf2 <- df %>% \n  select(!any_of(removed.items))"
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#rasch-analysis-2",
    "href": "raschrvignette/RaschRvign.html#rasch-analysis-2",
    "title": "RISEkbmRasch",
    "section": "4 Rasch analysis 2",
    "text": "4 Rasch analysis 2\nWith items 15 and 18 removed.\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fitPCAResidual correlations1st contrast loadingsTargetingItem hierarchy\n\n\n\n\nCode\nRIitemfitPCM2(df2, 300, 32, cpu = 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    PANAS_11 \n    1.058 \n    1.031 \n    0.458 \n    0.408 \n  \n  \n    PANAS_12 \n    0.714 \n    0.722 \n    -2.595 \n    -3.29 \n  \n  \n    PANAS_13 \n    1.127 \n    1.007 \n    0.943 \n    0.134 \n  \n  \n    PANAS_14 \n    0.908 \n    0.879 \n    -1.059 \n    -1.597 \n  \n  \n    PANAS_16 \n    0.758 \n    0.788 \n    -2.032 \n    -2.342 \n  \n  \n    PANAS_17 \n    0.897 \n    0.925 \n    -0.725 \n    -0.677 \n  \n  \n    PANAS_19 \n    0.848 \n    0.842 \n    -1.603 \n    -2.028 \n  \n  \n    PANAS_20 \n    1.082 \n    1.058 \n    0.882 \n    0.573 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIpcmPCA(df2)\n\n\n\nPCA of Rasch model residuals\n \n  \n    Eigenvalues \n  \n \n\n  \n    1.52 \n  \n  \n    1.33 \n  \n  \n    1.19 \n  \n  \n    1.15 \n  \n  \n    1.00 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIresidcorr(df2, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    PANAS_11 \n    PANAS_12 \n    PANAS_13 \n    PANAS_14 \n    PANAS_16 \n    PANAS_17 \n    PANAS_19 \n    PANAS_20 \n  \n \n\n  \n    PANAS_11 \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_12 \n    -0.16 \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_13 \n    -0.11 \n    -0.06 \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_14 \n    -0.19 \n    0.03 \n    0 \n     \n     \n     \n     \n     \n  \n  \n    PANAS_16 \n    -0.16 \n    -0.08 \n    -0.25 \n    -0.28 \n     \n     \n     \n     \n  \n  \n    PANAS_17 \n    -0.18 \n    -0.07 \n    -0.09 \n    -0.19 \n    0 \n     \n     \n     \n  \n  \n    PANAS_19 \n    -0.15 \n    -0.15 \n    -0.28 \n    -0.19 \n    0.12 \n    -0.16 \n     \n     \n  \n  \n    PANAS_20 \n    -0.1 \n    -0.27 \n    -0.12 \n    -0.11 \n    -0.18 \n    -0.15 \n    -0.09 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.071, which is 0.2 above the average correlation.\n\n\n\n\n\n\n\n\n\nCode\nRIloadLoc(df2)\n\n\n\n\n\n\n\n\n\nCode\n# increase fig-height above as needed, if you have many items\nRItargeting(df2)\n\n\n\n\n\n\n\n\n\nCode\nRIitemHierarchy(df2)\n\n\n\n\n\n\n\n\n\nItems 12 and 16 are a bit low in item fit ZSTD.\nItems 16 and 19 have a residual correlation at about 0.25 above the average level.\nLet’s look at DIF before taking action upon this information."
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#invariancedif",
    "href": "raschrvignette/RaschRvign.html#invariancedif",
    "title": "RISEkbmRasch",
    "section": "5 Invariance/DIF",
    "text": "5 Invariance/DIF\n\n5.1 Sex\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\nTableFigure itemsFigure thresholds\n\n\n\n\nCode\nRIdifTable(df2, dif.sex)\n\n\n\n\n\n\n\n\n\n\nItem\n\n\n2\n\n\n3\n\n\nMean location\n\n\nStDev\n\n\nMaxDiff\n\n\n\n\n\n\nPANAS_11\n\n\n-0.314\n\n\n-0.196\n\n\n-0.255\n\n\n0.083\n\n\n0.117\n\n\n\n\nPANAS_12\n\n\n0.028\n\n\n-0.044\n\n\n-0.008\n\n\n0.051\n\n\n0.073\n\n\n\n\nPANAS_13\n\n\n0.553\n\n\n0.402\n\n\n0.478\n\n\n0.107\n\n\n0.151\n\n\n\n\nPANAS_14\n\n\n-0.328\n\n\n-0.183\n\n\n-0.255\n\n\n0.103\n\n\n0.146\n\n\n\n\nPANAS_16\n\n\n0.004\n\n\n0.114\n\n\n0.059\n\n\n0.078\n\n\n0.111\n\n\n\n\nPANAS_17\n\n\n0.520\n\n\n0.290\n\n\n0.405\n\n\n0.163\n\n\n0.230\n\n\n\n\nPANAS_19\n\n\n-0.495\n\n\n-0.355\n\n\n-0.425\n\n\n0.099\n\n\n0.140\n\n\n\n\nPANAS_20\n\n\n0.032\n\n\n-0.028\n\n\n0.002\n\n\n0.042\n\n\n0.059\n\n\n\n\n\n\n\n\n\n\n\nCode\nRIdifFigure(df2, dif.sex)\n\n\n\n\n\n\n\n\n\nCode\nRIdifFigThresh(df2, dif.sex)\n\n\n\n\n\n\n\n\nWhile no item shows problematic levels of DIF regarding item location, as shown by the table, there is an interesting pattern in the thresholds figure. The lowest threshold seems to be slightly lower for node 3 (Male) for all items.\nThe results do not require any action since the difference is very small.\n\n\n5.2 Age\n\n\nCode\nRIdifTable(df2, dif.age)\n\n\n[1] \"No significant DIF found.\"\n\n\nNo DIF found for age.\n\n\n5.3 Group\n\n\nCode\nRIdifTable(df2, dif.group)\n\n\n[1] \"No significant DIF found.\"\n\n\nAnd no DIF for group.\n\n\n5.4 Sex and age\nWhile it has not yet been implemented in this package, the psychotree package allows for DIF interaction analysis with multiple DIF variables. This will also serve as an example of how to look at and modify a package function, if needed. Use View(RIdifTable) to view the code in the function. Then we can copy the code needed and modify it.\n\n\nCode\ndfin <- df2\n\ndf.tree <- data.frame(matrix(ncol = 0, nrow = nrow(dfin)))\ndf.tree$difdata <- as.matrix(dfin)\ndf.tree$dif.sex <- dif.sex\ndf.tree$dif.age <- dif.age\n\npctree.out <- pctree(difdata ~ dif.sex + dif.age, data = df.tree)\nplot(pctree.out)\n\n\n\n\n\nNo interaction effect found for sex and age. The analysis only shows the previously identified DIF for sex."
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#rasch-analysis-3",
    "href": "raschrvignette/RaschRvign.html#rasch-analysis-3",
    "title": "RISEkbmRasch",
    "section": "6 Rasch analysis 3",
    "text": "6 Rasch analysis 3\nThere were no issues with DIF for any item. We still need to address the previously identified problems\nItems 12 and 16 are a bit low in item fit ZSTD.\nItems 16 and 19 have a residual correlation at about 0.25 above the average level.\nWe’ll remove item 19 since item 16 has better targeting.\n\n\nCode\nremoved.items <- c(removed.items,\"PANAS_19\")\n\ndf2 <- df2 %>% \n  select(!any_of(removed.items))\n\n\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fitResidual correlationsTargetingItem hierarchy\n\n\n\n\nCode\nRIitemfitPCM2(df2, 300, 32, 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    PANAS_11 \n    1.009 \n    1.002 \n    -0.21 \n    -0.269 \n  \n  \n    PANAS_12 \n    0.687 \n    0.697 \n    -3.127 \n    -3.813 \n  \n  \n    PANAS_13 \n    1 \n    0.94 \n    0.128 \n    -0.577 \n  \n  \n    PANAS_14 \n    0.861 \n    0.842 \n    -1.51 \n    -1.843 \n  \n  \n    PANAS_16 \n    0.836 \n    0.831 \n    -1.45 \n    -1.994 \n  \n  \n    PANAS_17 \n    0.858 \n    0.879 \n    -0.718 \n    -1.124 \n  \n  \n    PANAS_20 \n    1.068 \n    1.045 \n    0.789 \n    0.819 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIresidcorr(df2, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    PANAS_11 \n    PANAS_12 \n    PANAS_13 \n    PANAS_14 \n    PANAS_16 \n    PANAS_17 \n    PANAS_20 \n  \n \n\n  \n    PANAS_11 \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_12 \n    -0.18 \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_13 \n    -0.15 \n    -0.11 \n     \n     \n     \n     \n     \n  \n  \n    PANAS_14 \n    -0.22 \n    0 \n    -0.04 \n     \n     \n     \n     \n  \n  \n    PANAS_16 \n    -0.14 \n    -0.06 \n    -0.26 \n    -0.26 \n     \n     \n     \n  \n  \n    PANAS_17 \n    -0.2 \n    -0.09 \n    -0.14 \n    -0.22 \n    0 \n     \n     \n  \n  \n    PANAS_20 \n    -0.12 \n    -0.29 \n    -0.16 \n    -0.13 \n    -0.15 \n    -0.17 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.053, which is 0.2 above the average correlation.\n\n\n\n\n\n\n\n\n\nCode\nRItargeting(df2)\n\n\n\n\n\n\n\n\n\nCode\nRIitemHierarchy(df2)\n\n\n\n\n\n\n\n\n\nNo problematic residual correlations, but item 12 is clearly low in item fit."
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#rasch-analysis-4",
    "href": "raschrvignette/RaschRvign.html#rasch-analysis-4",
    "title": "RISEkbmRasch",
    "section": "7 Rasch analysis 4",
    "text": "7 Rasch analysis 4\n\n\nCode\nremoved.items <- c(removed.items,\"PANAS_12\")\n\ndf2 <- df2 %>% \n  select(!any_of(removed.items))\n\n\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fitResidual correlationsTargetingItem hierarchy\n\n\n\n\nCode\nRIitemfitPCM2(df2, 300, 32, 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    PANAS_11 \n    0.926 \n    0.932 \n    -0.839 \n    -0.88 \n  \n  \n    PANAS_13 \n    0.906 \n    0.892 \n    -0.634 \n    -1.122 \n  \n  \n    PANAS_14 \n    0.85 \n    0.83 \n    -1.715 \n    -2.076 \n  \n  \n    PANAS_16 \n    0.796 \n    0.802 \n    -1.753 \n    -2.195 \n  \n  \n    PANAS_17 \n    0.803 \n    0.835 \n    -1.389 \n    -1.604 \n  \n  \n    PANAS_20 \n    0.958 \n    0.944 \n    -0.445 \n    -0.688 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIresidcorr(df2, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    PANAS_11 \n    PANAS_13 \n    PANAS_14 \n    PANAS_16 \n    PANAS_17 \n    PANAS_20 \n  \n \n\n  \n    PANAS_11 \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_13 \n    -0.17 \n     \n     \n     \n     \n     \n  \n  \n    PANAS_14 \n    -0.22 \n    -0.03 \n     \n     \n     \n     \n  \n  \n    PANAS_16 \n    -0.15 \n    -0.26 \n    -0.24 \n     \n     \n     \n  \n  \n    PANAS_17 \n    -0.22 \n    -0.14 \n    -0.21 \n    0.01 \n     \n     \n  \n  \n    PANAS_20 \n    -0.17 \n    -0.2 \n    -0.16 \n    -0.18 \n    -0.2 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.03, which is 0.2 above the average correlation.\n\n\n\n\n\n\n\n\n\nCode\nRItargeting(df2)\n\n\n\n\n\n\n\n\n\nCode\nRIitemHierarchy(df2)\n\n\n\n\n\n\n\n\n\nThere are several item thresholds that are very closely located, as shown in the item hierarchy figure. This is not ideal, since it will inflate reliability estimates.\nHowever, we will not modify the response categories for this sample/simple analysis, we only note that this is not ideal."
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#reliability",
    "href": "raschrvignette/RaschRvign.html#reliability",
    "title": "RISEkbmRasch",
    "section": "8 Reliability",
    "text": "8 Reliability\n\n\nCode\nRItif(df2)\n\n\n\n\n\nWhile 11.8% of respondents had a floor effect based on the raw sum scored data, the figure above shows us that 41.8% are located below the point where the items produce a person separation index (reliability) of 0.7 or higher."
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#person-fit",
    "href": "raschrvignette/RaschRvign.html#person-fit",
    "title": "RISEkbmRasch",
    "section": "9 Person fit",
    "text": "9 Person fit\nWe can also look at how the respondents fit the Rasch model with these items.\n\n\nCode\nRIpfit(df2)"
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#item-parameters",
    "href": "raschrvignette/RaschRvign.html#item-parameters",
    "title": "RISEkbmRasch",
    "section": "10 Item parameters",
    "text": "10 Item parameters\nTo allow others (and oneself) to use the item parameters estimated for estimation of person locations/thetas, we should make the item parameters available. The function will also write a csv-file with the item threshold locations. Estimations of person locations/thetas can be done with the thetaEst() function from the catR package.\nIt can also be done by using the new (as of 2023-02-04) RIestTheta() function in this package (does not yet work with dichotomous data), which uses thetaEst() across all the participants in your dataframe.\nFirst, we’ll output the parameters into a table.\n\n\nCode\nRIitemparams(df2)\n\n\n\n\n \n  \n      \n    Threshold 1 \n    Threshold 2 \n    Threshold 3 \n    Threshold 4 \n    Item location \n  \n \n\n  \n    PANAS_11 \n    -1.24 \n    -0.34 \n    0.07 \n    1.47 \n    -0.01 \n  \n  \n    PANAS_13 \n    0.06 \n    0.14 \n    0.83 \n    1.78 \n    0.7 \n  \n  \n    PANAS_14 \n    -0.99 \n    -0.26 \n    0.12 \n    1.11 \n    -0.01 \n  \n  \n    PANAS_16 \n    -0.22 \n    -0.13 \n    0.22 \n    1.34 \n    0.3 \n  \n  \n    PANAS_17 \n    0.28 \n    0.30 \n    0.75 \n    1.17 \n    0.63 \n  \n  \n    PANAS_20 \n    -0.90 \n    -0.28 \n    0.62 \n    1.59 \n    0.26 \n  \n\n\n\n\n\nRIitemparams() will automatically write a CSV-file called “itemParameters.csv”. The filename can be specified manually.\n\n10.1 Ordinal sum score to interval score\nThis table shows the corresponding sum score values and logit scores, with standard errors for each logit value.\n\n\nCode\nRIscoreSE(df2)\n\n\n\n\n\n\n\nOrdinal sum score\n\n\nLogit score\n\n\nLogit std.error\n\n\n\n\n\n\n0\n\n\n-3.21\n\n\nNA\n\n\n\n\n1\n\n\n-2.45\n\n\n1.00\n\n\n\n\n2\n\n\n-1.76\n\n\n0.71\n\n\n\n\n3\n\n\n-1.35\n\n\n0.58\n\n\n\n\n4\n\n\n-1.05\n\n\n0.51\n\n\n\n\n5\n\n\n-0.82\n\n\n0.46\n\n\n\n\n6\n\n\n-0.62\n\n\n0.43\n\n\n\n\n7\n\n\n-0.44\n\n\n0.41\n\n\n\n\n8\n\n\n-0.28\n\n\n0.39\n\n\n\n\n9\n\n\n-0.13\n\n\n0.38\n\n\n\n\n10\n\n\n0.01\n\n\n0.37\n\n\n\n\n11\n\n\n0.15\n\n\n0.37\n\n\n\n\n12\n\n\n0.28\n\n\n0.37\n\n\n\n\n13\n\n\n0.42\n\n\n0.37\n\n\n\n\n14\n\n\n0.56\n\n\n0.38\n\n\n\n\n15\n\n\n0.71\n\n\n0.39\n\n\n\n\n16\n\n\n0.86\n\n\n0.40\n\n\n\n\n17\n\n\n1.03\n\n\n0.42\n\n\n\n\n18\n\n\n1.22\n\n\n0.45\n\n\n\n\n19\n\n\n1.43\n\n\n0.48\n\n\n\n\n20\n\n\n1.69\n\n\n0.53\n\n\n\n\n21\n\n\n2.01\n\n\n0.61\n\n\n\n\n22\n\n\n2.46\n\n\n0.73\n\n\n\n\n23\n\n\n3.19\n\n\n1.02\n\n\n\n\n24\n\n\n3.99\n\n\nNA\n\n\n\n\n\n\n\n\n\n10.2 Estimating interval level person scores\nBased on the Rasch analysis output of item parameters, we can estimate each individuals location or score (also known as “theta”). Similarly to the RIitemfitPCM() function there is also a parallel processing version of the function available, which makes use of 4 cores by default.\nRIestThetas() by default uses WL estimation of a partial credit model and outputs a vector of person locations on the logit scale. If you do not supply a matrix of item (threshold) locations, it will use eRm’s CML PCM to calculate it based on the dataframe input.\n\n\nCode\nlibrary(furrr) # for a parallel processing version of purrr::map_dbl\ndf2$PersonScores <- RIestThetas2(df2, cpu = 8)\n\n\nRIestThetas() can also be used with a pre-specified item (threshold) location matrix. The choice of WL as default is due to the lower bias compared to ML estimation (Warm 1989).\nIf you would like to use an existing item matrix, this code may be helpful:\n\n\nCode\nitems <- as.matrix(read.csv(\"itemParameters.csv\"))\nitems\n\n\n     Threshold.1 Threshold.2 Threshold.3 Threshold.4\n[1,]     -1.2389     -0.3363      0.0748      1.4745\n[2,]      0.0638      0.1417      0.8278      1.7834\n[3,]     -0.9927     -0.2567      0.1160      1.1097\n[4,]     -0.2164     -0.1275      0.2169      1.3363\n[5,]      0.2815      0.3040      0.7492      1.1715\n[6,]     -0.8955     -0.2828      0.6150      1.5903\n\n\nAs you can see, this is a matrix object (not a dataframe), with each item as a row, and the threshold locations as columns.\nFinally, we’ll look at the distribution of person scores using a simple histogram.\n\n\nCode\nhist(df2$PersonScores, col = \"#009ca6\")"
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#software-used",
    "href": "raschrvignette/RaschRvign.html#software-used",
    "title": "RISEkbmRasch",
    "section": "11 Software used",
    "text": "11 Software used\nThe grateful package is a nice way to give credit to the packages used in making the analysis. It is not available on CRAN, but can be installed directly from GitHub (see code below).\n\n\nCode\nlibrary(grateful) # devtools::install_github(\"Pakillo/grateful\")\npkgs <- cite_packages(cite.tidyverse = TRUE, \n                      output = \"table\",\n                      bib.file = \"grateful-refs.bib\",\n                      include.RStudio = TRUE)\nformattable(pkgs, \n            table.attr = 'class=\\\"table table-striped\\\" style=\"font-size: 13px; font-family: Lato; width: 80%\"')\n\n\n\n\n\n\n\nPackage\n\n\nVersion\n\n\nCitation\n\n\n\n\n\n\nbase\n\n\n4.2.2\n\n\nR Core Team (2022)\n\n\n\n\ncar\n\n\n3.1.1\n\n\nFox and Weisberg (2019)\n\n\n\n\ncowplot\n\n\n1.1.1\n\n\nWilke (2020)\n\n\n\n\neRm\n\n\n1.0.2\n\n\nMair and Hatzinger (2007b); Mair and Hatzinger (2007a); Hatzinger and Rusch (2009); Rusch, Maier, and Hatzinger (2013); Koller, Maier, and Hatzinger (2015); Debelak and Koller (2019); Mair, Hatzinger, and Maier (2021)\n\n\n\n\nforeach\n\n\n1.5.2\n\n\nMicrosoft and Weston (2022)\n\n\n\n\nformattable\n\n\n0.2.1\n\n\nRen and Russell (2021)\n\n\n\n\nfurrr\n\n\n0.3.1\n\n\nVaughan and Dancho (2022)\n\n\n\n\nggrepel\n\n\n0.9.3\n\n\nSlowikowski (2023)\n\n\n\n\nglue\n\n\n1.6.2\n\n\nHester and Bryan (2022)\n\n\n\n\ngrateful\n\n\n0.1.11\n\n\nRodríguez-Sánchez, Jackson, and Hutchins (2022)\n\n\n\n\nkableExtra\n\n\n1.3.4\n\n\nZhu (2021)\n\n\n\n\nknitr\n\n\n1.42\n\n\nXie (2014); Xie (2015); Xie (2023)\n\n\n\n\nmatrixStats\n\n\n0.63.0\n\n\nBengtsson (2022)\n\n\n\n\nmirt\n\n\n1.37.1\n\n\nChalmers (2012)\n\n\n\n\npsych\n\n\n2.2.9\n\n\nRevelle (2022)\n\n\n\n\npsychotree\n\n\n0.16.0\n\n\nTrepte and Verbeet (2010); Strobl, Wickelmaier, and Zeileis (2011); Strobl, Kopf, and Zeileis (2015); Komboz, Zeileis, and Strobl (2018); Wickelmaier and Zeileis (2018)\n\n\n\n\nreshape\n\n\n0.8.9\n\n\nWickham (2007)\n\n\n\n\nRISEkbmRasch\n\n\n0.1.8.4\n\n\nJohansson (2023)\n\n\n\n\nrmarkdown\n\n\n2.20\n\n\nXie, Allaire, and Grolemund (2018); Xie, Dervieux, and Riederer (2020); Allaire et al. (2023)\n\n\n\n\ntidyverse\n\n\n1.3.2\n\n\nWickham et al. (2019)"
  }
]