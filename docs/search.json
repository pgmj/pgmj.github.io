[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "When you work with open source tools such as R it comes with a community of users asking and answering questions, as well as many making helpful tutorials or blog posts freely available.\nI constantly learn from others and like to give something back from my own journey of learning, exploring and hopefully innovating and contributing back to the community. I have the opportunity to work with a lot of different data scenarios. Most often psychometrics is involved, as well as data analysis and visualization.\nMy goal is to get better at documenting my own learning process and sharing it through this website. Content will be added intermittently under the Blog headline.\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Magnus Johansson is a licensed psychologist with a PhD in behavior analysis. I work as a scientist at RISE Research Institutes of Sweden, primarily with psychometrics, measurement, prevention and public health.\nYou can also find me on:\n\nTwitter: @pgmjoh\nORCID: 0000-0003-1669-592X\nMastodon: @pgmj\nOSF: Open Science Framework\n\nand of course on GitHub\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "raschrvignette/index.html",
    "href": "raschrvignette/index.html",
    "title": "RISEkbmRasch",
    "section": "",
    "text": "This is a work-in-progress to create a proper vignette to introduce how to make use of the RISEkbmRasch R package.\nDetails on installation is at the package link above. This vignette will walk through a sample analysis using an open dataset with questionnaire data. This will include some data wrangling to structure the item data and itemlabels, then provide examples of the different functions.\nOne of the aims with this package is to simplify psychometric analysis to shed light on the measurement properties of a scale. In a forthcoming paper (preprint should be out in January 2023 and the link will be added here), our research group propose that the basic aspects of a psychometric analysis should include information about:\nWe’ll include several ways to investigate these measurement properties, using Rasch Measurement Theory."
  },
  {
    "objectID": "raschrvignette/index.html#getting-started",
    "href": "raschrvignette/index.html#getting-started",
    "title": "RISEkbmRasch",
    "section": "1 Getting started",
    "text": "1 Getting started\nSince the package is intended for use with Quarto, this vignette has also been created with Quarto. A “template” .qmd file is available (insert link later) that is suggested to have at hand for copy&paste when running a new analysis.\nLoading the package should also get all the dependencies loaded. You may need to make sure that ggplot2 is updated to version 3.4.0 or later.\n\n\nCode\nlibrary(RISEkbmRasch) # devtools::install_github(\"pgmj/RISEkbmRasch\")\n\n### some commands exist in multiple packages, here we define preferred ones that are frequently used\nselect <- dplyr::select\ncount <- dplyr::count\nrecode <- car::recode\nrename <- dplyr::rename\n\n### set up color palette based on RISE guidelines\nRISEprimGreen <- \"#009ca6\"\nRISEprimRed <- \"#e83c63\"\nRISEprimYellow <- \"#ffe500\"\nRISEprimGreenMid <- \"#8dc8c7\"\nRISEprimRedMid <- \"#f5a9ab\"\nRISEprimYellowMid <- \"#ffee8d\"\nRISEprimGreenLight <- \"#ebf5f0\"\nRISEprimRedLight <- \"#fde8df\"\nRISEprimYellowLight <- \"#fff7dd\"\nRISEcompPurple <- \"#482d55\"\nRISEcompGreenDark <- \"#0e4e65\"\nRISEgrey1 <- \"#f0f0f0\"\nRISEgrey2 <- \"#c8c8c8\"\nRISEgrey3 <- \"#828282\"\nRISEgrey4 <- \"#555555\"\n\n\n\n1.1 Loading data\nWe will use data from a recent paper investigating the “initial elevation effect” (Anvari et al. 2022), and focus on the 10 negative items from the PANAS. The data is available at the OSF website.\n\n\n\n\n\n1.2 Itemlabels\nThen we set up the itemlabels dataframe. This could also be done using the free LibreOffice Calc or MS Excel. Just make sure the file has the same structure, with two variables named itemnr and item that contain the item names and item description. The item names have to match the variable names in the item dataframe.\n\n\nCode\nitemlabels <- df %>% \n  select(starts_with(\"PAN\")) %>% \n  names() %>% \n  as_tibble() %>% \n  separate(value, c(NA, \"item\"), sep =\"_[0-9][0-9]_\") %>% \n  mutate(itemnr = paste0(\"PANAS_\",c(11:20)), .before = \"item\")\n\n\n\n\n1.3 Demographics and invariance\nVariables for invariance tests such as Differential Item Functioning need to be separated into vectors (ideally as factors with specified labels and levels) with the same length as the number of rows in the dataset. This means that any kind of removal of respondents with missing data needs to be done before separating the DIF variables.\nLet’s first see whether any data is missing.\n\n\nCode\ndf %>%\n  select(starts_with(\"PAN\")) %>% \n  t() %>% \n  as.data.frame() %>% \n  mutate(Missing = rowSums(is.na(.))) %>% \n  select(Missing) %>% \n  arrange(desc(Missing)) %>% \n  rownames_to_column(var = \"Item\") %>% \n  mutate(Percentage = Missing/nrow(df)*100) %>% \n  mutate(Item = factor(Item, levels = rev(Item))) %>%\n  ggplot(aes(x = Item, y = Percentage)) +\n  geom_col() +\n  coord_flip() +\n  ggtitle(\"Missing data per item\") +\n  xlab(\"Items\") +\n  ylab(\"Percentage of responses missing\")\n\n\n\n\n\nNo missing data, which makes this easier. We also need to check how the Sex variable has been coded and which responses are present in the data.\n\n\nCode\ndf %>% \n  distinct(Sex)\n\n\n# A tibble: 5 × 1\n  Sex              \n  <chr>            \n1 Male             \n2 Female           \n3 CONSENT REVOKED  \n4 Prefer not to say\n5 DATA EXPIRED     \n\n\nWe’ll recode all responses apart from Male/Female as missing (NA).\n\n\nCode\ndf$Sex <- car::recode(df$Sex,\"'CONSENT REVOKED'=NA;\n                      'Prefer not to say'=NA;\n                      'DATA EXPIRED'=NA\")\n\ndif.sex <- factor(df$Sex)\n\n\nNow we can make use of a very simple function included in this package!\n\n\nCode\nRIdemographics(dif.sex, \"Sex\")\n\n\n\n\n \n  \n    Sex \n    n \n    Percent \n  \n \n\n  \n    Female \n    896 \n    48.4 \n  \n  \n    Male \n    955 \n    51.6 \n  \n\n\n\n\n\nAnd remove the DIF variable from the item dataset.\n\n\nCode\ndf$Sex <- NULL\n\n\nLet’s move on to the age variable.\n\n\nCode\nglimpse(df$age)\n\n\n num [1:1856] 27 32 21 27 20 22 23 25 21 26 ...\n\n\nSometimes age is provided in categories, but here we have a numeric variable with age in years. Let’s have a quick look at the age distribution using a histogram, and calculate mean, sd and range.\n\n\nCode\n### simpler version of the ggplot below\n# hist(df$age, col = \"#009ca6\")\n# \n# df %>% \n#   summarise(Mean = round(mean(age, na.rm = T),1),\n#             StDev = round(sd(age, na.rm = T),1)\n#             )\n\nggplot(df) +\n  geom_histogram(aes(x = age), \n                 fill = \"#009ca6\",\n                 col = \"black\") +\n  geom_vline(xintercept = mean(df$age), \n             linewidth = 1.5,\n             linetype = 2,\n             col = \"#ffe500\") +\n  annotate(\"rect\", ymin = 0, ymax = Inf, \n           xmin = (mean(df$age) - sd(df$age)), xmax = (mean(df$age) + sd(df$age)), \n           alpha = .3) +\n  labs(title = \"\",\n       x = \"Age in years\",\n       y = \"Number of respondents\",\n       caption = glue(\"Note. Mean age is {round(mean(df$age, na.rm = T),1)} years with a standard deviation of {round(sd(df$age, na.rm = T),1)}. Age range is {min(df$age)} to {max(df$age)}.\")\n       ) +\n  theme(plot.caption = element_text(hjust = 0, face = \"italic\"))\n\n\n\n\n\nAge also needs to be a separate vector, and removed from the item dataframe.\n\n\nCode\ndif.age <- df$age\ndf$age <- NULL\n\n\nThere is also a grouping variable which needs to be converted to a factor.\n\n\nCode\ndif.group <- factor(df$Group)\ndf$Group <- NULL\nRIdemographics(dif.group, \"Group\")\n\n\n\n\n \n  \n    Group \n    n \n    Percent \n  \n \n\n  \n    Earlier Start \n    903 \n    48.7 \n  \n  \n    Later Start \n    953 \n    51.3 \n  \n\n\n\n\n\nWith only item data remaining in the dataframe, we can easily rename the items in the item dataframe. These names match the itemlabels variable itemnr.\n\n\nCode\nnames(df) <- itemlabels$itemnr\n\n\nNow we are all set for the psychometric analysis!"
  },
  {
    "objectID": "raschrvignette/index.html#descriptives",
    "href": "raschrvignette/index.html#descriptives",
    "title": "RISEkbmRasch",
    "section": "2 Descriptives",
    "text": "2 Descriptives\nFirst, let’s familiarize ourselves with the data.\n\n2.1 Overall responses\n\n\nCode\nRIallresp(df)\n\n\n\n\n\n\n\nResponse category\n\n\nNumber of responses\n\n\nPercent\n\n\n\n\n\n\n1\n\n\n9444\n\n\n50.9\n\n\n\n\n2\n\n\n4147\n\n\n22.3\n\n\n\n\n3\n\n\n2689\n\n\n14.5\n\n\n\n\n4\n\n\n1732\n\n\n9.3\n\n\n\n\n5\n\n\n548\n\n\n3.0\n\n\n\n\n\n\n\nThe Rasch model requires the lowest response category to be zero, which makes it necessary for us to recode our data from 1-5 to 0-4.\n\n\nCode\ndf <- df %>% \n  mutate(across(everything(), ~ car::recode(.x, \"1=0;2=1;3=2;4=3;5=4\", as.factor = F)))\n\nRIallresp(df)\n\n\n\n\n\n\n\nResponse category\n\n\nNumber of responses\n\n\nPercent\n\n\n\n\n\n\n0\n\n\n9444\n\n\n50.9\n\n\n\n\n1\n\n\n4147\n\n\n22.3\n\n\n\n\n2\n\n\n2689\n\n\n14.5\n\n\n\n\n3\n\n\n1732\n\n\n9.3\n\n\n\n\n4\n\n\n548\n\n\n3.0\n\n\n\n\n\n\n\n\n2.1.1 Floor/ceiling effects\nNow, we can also look at the raw distribution of sum scores. The RIrawdist() function is a bit crude, since it requires responses in all response categories to accurately calculate max and min scores.\n\n\nCode\nRIrawdist(df)\n\n\n\n\n\nWe can see a floor effect with 11.8% of participants responding in the lowest category for all items.\n\n\n2.1.2 Guttman structure\nWhile not really necessary, it could be interesting to see whether the response patterns follow a Guttman-like structure. Items and persons are sorted based on lower->higher responses, and we should see the color move from yellow in the lower left corner to blue in the upper right corner.\n\n\nCode\nRIheatmap(df)\n\n\n\n\n\nIn this data, we see the floor effect on the left, with 11.8% of respondents all yellow, and a rather weak Guttman structure. This could also be due to a low variation in item locations/difficulties.\n\n\n\n2.2 Item level descriptives\nThere are many ways to look at the item level data, and we’ll get them all together in the tab-panel below. The RItileplot() is probably most informative, since it provides the number of responses in each response category for each item. It is usually recommended to have at least ~10 responses in each category for psychometric analysis, no matter which methodology is used.\nMost people will be familiar with the barplot, and this is probably most intuitive to understand the response distribution within each item. However, if there are many items it will take a while to review, and does not provide the same overview as a tileplot or stacked bars.\n\n\nCode\n# this code chunk creates a small table in the margin beside the panel-tabset output below,\n# showing all items currently in the df dataframe\n# the chunk option \"#| column: margin\" is necessary for the layout to work as intended\nRIlistItemsMargin(df, fontsize = 13)\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_15\n\n\nScared\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_18\n\n\nGuilty\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nTile plotStacked barsBarplots\n\n\n\n\nCode\nRItileplot(df)\n\n\n\n\n\n\n\n\n\nCode\nRIbarstack(df)\n\n\n\n\n\n\n\n\n\nCode\nRIbarplot(df)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhile response patterns are skewed for all items, there are more than 10 responses in each category for all items."
  },
  {
    "objectID": "raschrvignette/index.html#rasch-analysis-1",
    "href": "raschrvignette/index.html#rasch-analysis-1",
    "title": "RISEkbmRasch",
    "section": "3 Rasch analysis 1",
    "text": "3 Rasch analysis 1\nThe eRm package and Conditional Maximum Likelihood (CML) estimation will be used primarily, with the Partial Credit Model.\nThis is also where the five basic psychometric aspects are good to recall.\n\nUnidimensionality\nResponse categories\nInvariance\nTargeting\nMeasurement uncertainties (reliability)\n\nWe will look at all except invariance and reliability in parallel below. For unidimensionality, we are mostly interested in item fit and residual correlations, as well as PCA of residuals and loadings on the first residual contrast. At the same time, disordered response categories can influence item fit, and targeting can be useful if it is necessary to remove items due to residual correlations.\nWhen unidimensionality and response categories are found to work adequately, we will move on to invariance testing. And when/if invariance looks good, we can investigate reliability/measurement uncertainties.\nIn the tabset-panel below, each tab will have some explanatory text.\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_15\n\n\nScared\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_18\n\n\nGuilty\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fitPCAResidual correlations1st contrast loadingsAnalysis of response categoriesTargetingItem hierarchy\n\n\n\n\nCode\nRIitemfitPCM2(df, 300, 32, cpu = 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    PANAS_11 \n    1.146 \n    1.105 \n    1.449 \n    1.541 \n  \n  \n    PANAS_12 \n    0.776 \n    0.776 \n    -1.98 \n    -2.618 \n  \n  \n    PANAS_13 \n    1.237 \n    1.091 \n    1.43 \n    0.814 \n  \n  \n    PANAS_14 \n    1.01 \n    0.979 \n    0.22 \n    -0.191 \n  \n  \n    PANAS_15 \n    0.664 \n    0.724 \n    -2.844 \n    -3.181 \n  \n  \n    PANAS_16 \n    0.71 \n    0.736 \n    -2.392 \n    -3.241 \n  \n  \n    PANAS_17 \n    0.839 \n    0.872 \n    -0.908 \n    -1.09 \n  \n  \n    PANAS_18 \n    1.061 \n    1 \n    0.313 \n    -0.123 \n  \n  \n    PANAS_19 \n    0.844 \n    0.844 \n    -1.865 \n    -1.982 \n  \n  \n    PANAS_20 \n    1.16 \n    1.121 \n    1.535 \n    1.27 \n  \n\n\n\n\n\nSince we have a sample size over 500, ZSTD item fit values would be inflated if we use the whole sample. To better estimate accurate ZSTD values the RIitemfitPCM() function allows for multiple subsampling. It is recommended to use a sample size between 250 and 500 (Hagell and Westergren 2016). We will set the sample size to 300 and run 32 subsamples. For faster processing, RIitemfitPCM2() enables parallel processing with multiple CPUs/cores.\n“Outfit” refers to item fit when person location is relatively far away from the item location, while “infit” provides estimates for when person and item locations are close together. MSQ should be close to 1, with lower and upper cutoffs set to 0.7 and 1.3, while ZSTD should be around 0, with cutoffs set to +/- 2.0. Infit is usually more important.\nA low item fit indicates that responses are too predictable and provide little information. A high item fit can indicate several things, most often multidimensionality or, for questionnaires, a question that is difficult to interpret. This could for instance be a question that asks about two things at the same time.\n\n\n\n\nCode\nRIpcmPCA(df)\n\n\n\nPCA of Rasch model residuals\n \n  \n    Eigenvalues \n  \n \n\n  \n    1.79 \n  \n  \n    1.46 \n  \n  \n    1.28 \n  \n  \n    1.14 \n  \n  \n    1.06 \n  \n\n\n\n\n\nThe first eigenvalue should be below 2.0.\n\n\n\n\nCode\nRIresidcorr(df, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    PANAS_11 \n    PANAS_12 \n    PANAS_13 \n    PANAS_14 \n    PANAS_15 \n    PANAS_16 \n    PANAS_17 \n    PANAS_18 \n    PANAS_19 \n    PANAS_20 \n  \n \n\n  \n    PANAS_11 \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_12 \n    -0.1 \n     \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_13 \n    -0.05 \n    -0.01 \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_14 \n    -0.11 \n    0.09 \n    0.07 \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_15 \n    -0.14 \n    -0.13 \n    -0.22 \n    -0.29 \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_16 \n    -0.17 \n    -0.1 \n    -0.25 \n    -0.27 \n    0.39 \n     \n     \n     \n     \n     \n  \n  \n    PANAS_17 \n    -0.18 \n    -0.09 \n    -0.09 \n    -0.19 \n    -0.13 \n    -0.08 \n     \n     \n     \n     \n  \n  \n    PANAS_18 \n    -0.19 \n    -0.15 \n    -0.16 \n    -0.18 \n    -0.15 \n    -0.13 \n    0.32 \n     \n     \n     \n  \n  \n    PANAS_19 \n    -0.12 \n    -0.13 \n    -0.25 \n    -0.14 \n    0.1 \n    0.08 \n    -0.21 \n    -0.12 \n     \n     \n  \n  \n    PANAS_20 \n    -0.06 \n    -0.22 \n    -0.07 \n    -0.05 \n    -0.13 \n    -0.19 \n    -0.16 \n    -0.15 \n    -0.08 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.098, which is 0.2 above the average correlation.\n\n\n\n\n\nThe matrix above shows item-pair correlations of item residuals, with highlights in red showing correlations 0.2 or more above the average item-pair correlation (for all item-pairs) (Christensen, Makransky, and Horton 2017).\n\n\n\n\nCode\nRIloadLoc(df)\n\n\n\n\n\nThis figure can be helpful to identify clusters in data or multidimensionality.\n\n\n\n\nCode\nmirt.rasch <- mirt(df, model=1, itemtype='Rasch') # unidimensional Rasch model\n\n\n\nIteration: 1, Log-Lik: -21806.700, Max-Change: 1.28210\nIteration: 2, Log-Lik: -20090.274, Max-Change: 0.41468\nIteration: 3, Log-Lik: -20001.995, Max-Change: 0.22853\nIteration: 4, Log-Lik: -19963.053, Max-Change: 0.15826\nIteration: 5, Log-Lik: -19943.444, Max-Change: 0.12828\nIteration: 6, Log-Lik: -19932.996, Max-Change: 0.10259\nIteration: 7, Log-Lik: -19927.144, Max-Change: 0.08429\nIteration: 8, Log-Lik: -19923.589, Max-Change: 0.07035\nIteration: 9, Log-Lik: -19921.222, Max-Change: 0.05979\nIteration: 10, Log-Lik: -19915.642, Max-Change: 0.05282\nIteration: 11, Log-Lik: -19913.964, Max-Change: 0.01886\nIteration: 12, Log-Lik: -19913.621, Max-Change: 0.01948\nIteration: 13, Log-Lik: -19912.585, Max-Change: 0.01279\nIteration: 14, Log-Lik: -19912.469, Max-Change: 0.01202\nIteration: 15, Log-Lik: -19912.390, Max-Change: 0.01100\nIteration: 16, Log-Lik: -19912.108, Max-Change: 0.00810\nIteration: 17, Log-Lik: -19912.071, Max-Change: 0.00460\nIteration: 18, Log-Lik: -19912.054, Max-Change: 0.00478\nIteration: 19, Log-Lik: -19911.997, Max-Change: 0.00368\nIteration: 20, Log-Lik: -19911.989, Max-Change: 0.00226\nIteration: 21, Log-Lik: -19911.986, Max-Change: 0.00224\nIteration: 22, Log-Lik: -19911.974, Max-Change: 0.00183\nIteration: 23, Log-Lik: -19911.972, Max-Change: 0.00098\nIteration: 24, Log-Lik: -19911.971, Max-Change: 0.00102\nIteration: 25, Log-Lik: -19911.969, Max-Change: 0.00083\nIteration: 26, Log-Lik: -19911.968, Max-Change: 0.00046\nIteration: 27, Log-Lik: -19911.968, Max-Change: 0.00047\nIteration: 28, Log-Lik: -19911.967, Max-Change: 0.00039\nIteration: 29, Log-Lik: -19911.967, Max-Change: 0.00021\nIteration: 30, Log-Lik: -19911.967, Max-Change: 0.00021\nIteration: 31, Log-Lik: -19911.967, Max-Change: 0.00018\nIteration: 32, Log-Lik: -19911.967, Max-Change: 0.00010\nIteration: 33, Log-Lik: -19911.967, Max-Change: 0.00011\nIteration: 34, Log-Lik: -19911.967, Max-Change: 0.00009\n\n\nCode\nplot(mirt.rasch, type=\"trace\")\n\n\n\n\n\nEach response category for each item should have a curve that indicates it to be the most probably response at some point on the latent variable (x axis in the figure).\n\n\n\n\nCode\n# increase fig-height above as needed, if you have many items\nRItargeting(df)\n\n\n\n\n\nThis figure shows how well the items fit the respondents/persons. It is a sort of Wright Map that shows person and item threshold locations on the same logit scale.\nThe top part shows person location histogram, the middle part a histogram of item threshold locations, and the bottom part shows individual item threshold locations. The histograms also show means and standard deviations.\n\n\n\n\nCode\nRIitemHierarchy(df)\n\n\n\n\n\n\n\n\n\nItem 18 has issues with the second lowest category, which needs to be merged with the lowest category.\nItem 15 shows low item fit.\nTwo item-pairs have high residual correlations:\n\n15 and 16 (scared and afraid)\n17 and 18 (ashamed and guilty)\n\nSince item 15 also had low fit, we will remove it. And since item 18 had problems with response categories, it will also be removed.\n\n\nCode\nremoved.items <- c(\"PANAS_15\",\"PANAS_18\")\n\ndf2 <- df %>% \n  select(!any_of(removed.items))"
  },
  {
    "objectID": "raschrvignette/index.html#rasch-analysis-2",
    "href": "raschrvignette/index.html#rasch-analysis-2",
    "title": "RISEkbmRasch",
    "section": "4 Rasch analysis 2",
    "text": "4 Rasch analysis 2\nWith items 15 and 18 removed.\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fitPCAResidual correlations1st contrast loadingsTargetingItem hierarchy\n\n\n\n\nCode\nRIitemfitPCM2(df2, 300, 32, cpu = 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    PANAS_11 \n    1.058 \n    1.031 \n    0.538 \n    0.233 \n  \n  \n    PANAS_12 \n    0.714 \n    0.722 \n    -2.551 \n    -3.321 \n  \n  \n    PANAS_13 \n    1.127 \n    1.007 \n    0.86 \n    0.2 \n  \n  \n    PANAS_14 \n    0.908 \n    0.879 \n    -0.957 \n    -1.371 \n  \n  \n    PANAS_16 \n    0.758 \n    0.788 \n    -1.895 \n    -2.672 \n  \n  \n    PANAS_17 \n    0.897 \n    0.925 \n    -0.75 \n    -0.455 \n  \n  \n    PANAS_19 \n    0.848 \n    0.842 \n    -1.872 \n    -2.282 \n  \n  \n    PANAS_20 \n    1.082 \n    1.058 \n    0.941 \n    0.656 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIpcmPCA(df2)\n\n\n\nPCA of Rasch model residuals\n \n  \n    Eigenvalues \n  \n \n\n  \n    1.52 \n  \n  \n    1.33 \n  \n  \n    1.19 \n  \n  \n    1.15 \n  \n  \n    1.00 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIresidcorr(df2, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    PANAS_11 \n    PANAS_12 \n    PANAS_13 \n    PANAS_14 \n    PANAS_16 \n    PANAS_17 \n    PANAS_19 \n    PANAS_20 \n  \n \n\n  \n    PANAS_11 \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_12 \n    -0.16 \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_13 \n    -0.11 \n    -0.06 \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_14 \n    -0.19 \n    0.03 \n    0 \n     \n     \n     \n     \n     \n  \n  \n    PANAS_16 \n    -0.16 \n    -0.08 \n    -0.25 \n    -0.28 \n     \n     \n     \n     \n  \n  \n    PANAS_17 \n    -0.18 \n    -0.07 \n    -0.09 \n    -0.19 \n    0 \n     \n     \n     \n  \n  \n    PANAS_19 \n    -0.15 \n    -0.15 \n    -0.28 \n    -0.19 \n    0.12 \n    -0.16 \n     \n     \n  \n  \n    PANAS_20 \n    -0.1 \n    -0.27 \n    -0.12 \n    -0.11 \n    -0.18 \n    -0.15 \n    -0.09 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.071, which is 0.2 above the average correlation.\n\n\n\n\n\n\n\n\n\nCode\nRIloadLoc(df2)\n\n\n\n\n\n\n\n\n\nCode\n# increase fig-height above as needed, if you have many items\nRItargeting(df2)\n\n\n\n\n\n\n\n\n\nCode\nRIitemHierarchy(df2)\n\n\n\n\n\n\n\n\n\nItems 12 and 16 are a bit low in item fit ZSTD.\nItems 16 and 19 have a residual correlation at about 0.25 above the average level.\nLet’s look at DIF before taking action upon this information."
  },
  {
    "objectID": "raschrvignette/index.html#invariancedif",
    "href": "raschrvignette/index.html#invariancedif",
    "title": "RISEkbmRasch",
    "section": "5 Invariance/DIF",
    "text": "5 Invariance/DIF\n\n5.1 Sex\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\nTableFigure itemsFigure thresholds\n\n\n\n\nCode\nRIdifTable(df2, dif.sex)\n\n\n\n\n\n\n\n\n\n\nItem\n\n\n2\n\n\n3\n\n\nMean location\n\n\nStDev\n\n\nMaxDiff\n\n\n\n\n\n\nPANAS_11\n\n\n-0.314\n\n\n-0.196\n\n\n-0.255\n\n\n0.083\n\n\n0.117\n\n\n\n\nPANAS_12\n\n\n0.028\n\n\n-0.044\n\n\n-0.008\n\n\n0.051\n\n\n0.073\n\n\n\n\nPANAS_13\n\n\n0.553\n\n\n0.402\n\n\n0.478\n\n\n0.107\n\n\n0.151\n\n\n\n\nPANAS_14\n\n\n-0.328\n\n\n-0.183\n\n\n-0.255\n\n\n0.103\n\n\n0.146\n\n\n\n\nPANAS_16\n\n\n0.004\n\n\n0.114\n\n\n0.059\n\n\n0.078\n\n\n0.111\n\n\n\n\nPANAS_17\n\n\n0.520\n\n\n0.290\n\n\n0.405\n\n\n0.163\n\n\n0.230\n\n\n\n\nPANAS_19\n\n\n-0.495\n\n\n-0.355\n\n\n-0.425\n\n\n0.099\n\n\n0.140\n\n\n\n\nPANAS_20\n\n\n0.032\n\n\n-0.028\n\n\n0.002\n\n\n0.042\n\n\n0.059\n\n\n\n\n\n\n\n\n\n\n\nCode\nRIdifFigure(df2, dif.sex)\n\n\n\n\n\n\n\n\n\nCode\nRIdifFigThresh(df2, dif.sex)\n\n\n\n\n\n\n\n\nWhile no item shows problematic levels of DIF regarding item location, as shown by the table, there is an interesting pattern in the thresholds figure. The lowest threshold seems to be slightly lower for node 3 (Male) for all items.\nThe results do not require any action.\n\n\n5.2 Age\n\n\nCode\nRIdifTable(df2, dif.age)\n\n\n[1] \"No significant DIF found.\"\n\n\nNo DIF found for age.\n\n\n5.3 Group\n\n\nCode\nRIdifTable(df2, dif.group)\n\n\n[1] \"No significant DIF found.\"\n\n\nAnd no DIF for group.\n\n\n5.4 Sex and age\nWhile it has not been implemented in this package, the psychotree package allows for DIF interaction analysis between multiple DIF variables. This will also serve as an example of how to look at and modify a package function, if needed. Use View(RIdifTable) to view the code in the function.\n\n\nCode\ndfin <- df2\n\ndf.tree <- data.frame(matrix(ncol = 0, nrow = nrow(dfin)))\ndf.tree$difdata <- as.matrix(dfin)\ndf.tree$dif.sex <- dif.sex\ndf.tree$dif.age <- dif.age\n\npctree.out <- pctree(difdata ~ dif.sex + dif.age, data = df.tree)\nplot(pctree.out)\n\n\n\n\n\nNo interaction effect found for sex and age. The analysis only shows the previously identified DIF for sex."
  },
  {
    "objectID": "raschrvignette/index.html#rasch-analysis-3",
    "href": "raschrvignette/index.html#rasch-analysis-3",
    "title": "RISEkbmRasch",
    "section": "6 Rasch analysis 3",
    "text": "6 Rasch analysis 3\nThere were no issues with DIF for any item. We still need to address the previously identified problems\nItems 12 and 16 are a bit low in item fit ZSTD.\nItems 16 and 19 have a residual correlation at about 0.25 above the average level.\nWe’ll remove item 19 since item 16 has better targeting.\n\n\nCode\nremoved.items <- c(removed.items,\"PANAS_19\")\n\ndf2 <- df2 %>% \n  select(!any_of(removed.items))\n\n\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fitResidual correlationsTargetingItem hierarchy\n\n\n\n\nCode\nRIitemfitPCM2(df2, 300, 32, 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    PANAS_11 \n    1.009 \n    1.002 \n    0.141 \n    0.029 \n  \n  \n    PANAS_12 \n    0.687 \n    0.697 \n    -3.032 \n    -3.579 \n  \n  \n    PANAS_13 \n    1 \n    0.94 \n    -0.041 \n    -0.551 \n  \n  \n    PANAS_14 \n    0.861 \n    0.842 \n    -1.667 \n    -1.85 \n  \n  \n    PANAS_16 \n    0.836 \n    0.831 \n    -1.284 \n    -2.123 \n  \n  \n    PANAS_17 \n    0.858 \n    0.879 \n    -0.946 \n    -0.981 \n  \n  \n    PANAS_20 \n    1.068 \n    1.045 \n    0.924 \n    0.373 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIresidcorr(df2, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    PANAS_11 \n    PANAS_12 \n    PANAS_13 \n    PANAS_14 \n    PANAS_16 \n    PANAS_17 \n    PANAS_20 \n  \n \n\n  \n    PANAS_11 \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_12 \n    -0.18 \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_13 \n    -0.15 \n    -0.11 \n     \n     \n     \n     \n     \n  \n  \n    PANAS_14 \n    -0.22 \n    0 \n    -0.04 \n     \n     \n     \n     \n  \n  \n    PANAS_16 \n    -0.14 \n    -0.06 \n    -0.26 \n    -0.26 \n     \n     \n     \n  \n  \n    PANAS_17 \n    -0.2 \n    -0.09 \n    -0.14 \n    -0.22 \n    0 \n     \n     \n  \n  \n    PANAS_20 \n    -0.12 \n    -0.29 \n    -0.16 \n    -0.13 \n    -0.15 \n    -0.17 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.053, which is 0.2 above the average correlation.\n\n\n\n\n\n\n\n\n\nCode\nRItargeting(df2)\n\n\n\n\n\n\n\n\n\nCode\nRIitemHierarchy(df2)\n\n\n\n\n\n\n\n\n\nNo problematic residual correlations, but item 12 is clearly low in item fit."
  },
  {
    "objectID": "raschrvignette/index.html#rasch-analysis-4",
    "href": "raschrvignette/index.html#rasch-analysis-4",
    "title": "RISEkbmRasch",
    "section": "7 Rasch analysis 4",
    "text": "7 Rasch analysis 4\n\n\nCode\nremoved.items <- c(removed.items,\"PANAS_12\")\n\ndf2 <- df2 %>% \n  select(!any_of(removed.items))\n\n\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fitResidual correlationsTargetingItem hierarchy\n\n\n\n\nCode\nRIitemfitPCM2(df2, 300, 32, 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    PANAS_11 \n    0.926 \n    0.932 \n    -0.696 \n    -0.888 \n  \n  \n    PANAS_13 \n    0.906 \n    0.892 \n    -0.84 \n    -0.803 \n  \n  \n    PANAS_14 \n    0.85 \n    0.83 \n    -1.705 \n    -2.204 \n  \n  \n    PANAS_16 \n    0.796 \n    0.802 \n    -1.671 \n    -2.38 \n  \n  \n    PANAS_17 \n    0.803 \n    0.835 \n    -1.32 \n    -1.627 \n  \n  \n    PANAS_20 \n    0.958 \n    0.944 \n    -0.239 \n    -0.638 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIresidcorr(df2, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    PANAS_11 \n    PANAS_13 \n    PANAS_14 \n    PANAS_16 \n    PANAS_17 \n    PANAS_20 \n  \n \n\n  \n    PANAS_11 \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_13 \n    -0.17 \n     \n     \n     \n     \n     \n  \n  \n    PANAS_14 \n    -0.22 \n    -0.03 \n     \n     \n     \n     \n  \n  \n    PANAS_16 \n    -0.15 \n    -0.26 \n    -0.24 \n     \n     \n     \n  \n  \n    PANAS_17 \n    -0.22 \n    -0.14 \n    -0.21 \n    0.01 \n     \n     \n  \n  \n    PANAS_20 \n    -0.17 \n    -0.2 \n    -0.16 \n    -0.18 \n    -0.2 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.03, which is 0.2 above the average correlation.\n\n\n\n\n\n\n\n\n\nCode\nRItargeting(df2)\n\n\n\n\n\n\n\n\n\nCode\nRIitemHierarchy(df2)\n\n\n\n\n\n\n\n\n\nThere are several item thresholds that are very closely located, as shown in the item hierarchy figure. This is not ideal, since it will inflate reliability estimates.\nHowever, we will not modify the response categories for this sample/simple analysis, we only note that this is not ideal."
  },
  {
    "objectID": "raschrvignette/index.html#reliability",
    "href": "raschrvignette/index.html#reliability",
    "title": "RISEkbmRasch",
    "section": "8 Reliability",
    "text": "8 Reliability\n\n\nCode\nRItif(df2)\n\n\n\n\n\nWhile 11.8% of respondents had a floor effect, the figure above shows us that 41.8% are located below the point where the items produce a person separation index (reliability) of 0.7 or higher."
  },
  {
    "objectID": "raschrvignette/index.html#person-fit",
    "href": "raschrvignette/index.html#person-fit",
    "title": "RISEkbmRasch",
    "section": "9 Person fit",
    "text": "9 Person fit\nWe can also look at how the respondents fit the Rasch model with these items.\n\n\nCode\nRIpfit(df2)"
  },
  {
    "objectID": "raschrvignette/index.html#item-parameters",
    "href": "raschrvignette/index.html#item-parameters",
    "title": "RISEkbmRasch",
    "section": "10 Item parameters",
    "text": "10 Item parameters\nTo allow others (and oneself) to use the item parameters estimated for estimation of person locations/thetas, we should make the item parameters available. The function will also write a csv-file with the item threshold locations. Estimations of person locations/thetas can be done with the thetaEst() function from the catR package. Code for this is available upon request and will be made into a function in the RISEkbmRasch package at some point.\n\n\nCode\nRIitemparams(df2)\n\n\n\n\n \n  \n      \n    Threshold 1 \n    Threshold 2 \n    Threshold 3 \n    Threshold 4 \n    Item location \n  \n \n\n  \n    PANAS_11 \n    -1.24 \n    -0.34 \n    0.07 \n    1.47 \n    -0.01 \n  \n  \n    PANAS_13 \n    0.06 \n    0.14 \n    0.83 \n    1.78 \n    0.7 \n  \n  \n    PANAS_14 \n    -0.99 \n    -0.26 \n    0.12 \n    1.11 \n    -0.01 \n  \n  \n    PANAS_16 \n    -0.22 \n    -0.13 \n    0.22 \n    1.34 \n    0.3 \n  \n  \n    PANAS_17 \n    0.28 \n    0.30 \n    0.75 \n    1.17 \n    0.63 \n  \n  \n    PANAS_20 \n    -0.90 \n    -0.28 \n    0.62 \n    1.59 \n    0.26 \n  \n\n\n\n\n\n\n10.1 Ordinal sum score to interval score\nThis table shows the corresponding sum score values and logit scores, with standard errors for each logit value.\n\n\nCode\nRIscoreSE(df2)\n\n\n\n\n\n\n\nOrdinal sum score\n\n\nLogit score\n\n\nLogit std.error\n\n\n\n\n\n\n0\n\n\n-3.21\n\n\nNA\n\n\n\n\n1\n\n\n-2.45\n\n\n1.00\n\n\n\n\n2\n\n\n-1.76\n\n\n0.71\n\n\n\n\n3\n\n\n-1.35\n\n\n0.58\n\n\n\n\n4\n\n\n-1.05\n\n\n0.51\n\n\n\n\n5\n\n\n-0.82\n\n\n0.46\n\n\n\n\n6\n\n\n-0.62\n\n\n0.43\n\n\n\n\n7\n\n\n-0.44\n\n\n0.41\n\n\n\n\n8\n\n\n-0.28\n\n\n0.39\n\n\n\n\n9\n\n\n-0.13\n\n\n0.38\n\n\n\n\n10\n\n\n0.01\n\n\n0.37\n\n\n\n\n11\n\n\n0.15\n\n\n0.37\n\n\n\n\n12\n\n\n0.28\n\n\n0.37\n\n\n\n\n13\n\n\n0.42\n\n\n0.37\n\n\n\n\n14\n\n\n0.56\n\n\n0.38\n\n\n\n\n15\n\n\n0.71\n\n\n0.39\n\n\n\n\n16\n\n\n0.86\n\n\n0.40\n\n\n\n\n17\n\n\n1.03\n\n\n0.42\n\n\n\n\n18\n\n\n1.22\n\n\n0.45\n\n\n\n\n19\n\n\n1.43\n\n\n0.48\n\n\n\n\n20\n\n\n1.69\n\n\n0.53\n\n\n\n\n21\n\n\n2.01\n\n\n0.61\n\n\n\n\n22\n\n\n2.46\n\n\n0.73\n\n\n\n\n23\n\n\n3.19\n\n\n1.02\n\n\n\n\n24\n\n\n3.99\n\n\nNA"
  },
  {
    "objectID": "raschrvignette/index.html#software-used",
    "href": "raschrvignette/index.html#software-used",
    "title": "RISEkbmRasch",
    "section": "11 Software used",
    "text": "11 Software used\n\n\nCode\nlibrary(grateful) # devtools::install_github(\"Pakillo/grateful\")\npkgs <- cite_packages(cite.tidyverse = TRUE, \n                      output = \"table\",\n                      bib.file = \"grateful-refs.bib\",\n                      include.RStudio = TRUE)\nformattable(pkgs, \n            table.attr = 'class=\\\"table table-striped\\\" style=\"font-size: 13px; font-family: Lato; width: 80%\"')\n\n\n\n\n\n\n\nPackage\n\n\nVersion\n\n\nCitation\n\n\n\n\n\n\nbase\n\n\n4.2.2\n\n\nR Core Team (2022)\n\n\n\n\ncar\n\n\n3.1.1\n\n\nFox and Weisberg (2019)\n\n\n\n\ngrateful\n\n\n0.1.11\n\n\nRodríguez-Sánchez, Jackson, and Hutchins (2022)\n\n\n\n\nRISEkbmRasch\n\n\n0.1.7.8\n\n\nJohansson (2022)\n\n\n\n\nrmarkdown\n\n\n2.19\n\n\nXie, Allaire, and Grolemund (2018); Xie, Dervieux, and Riederer (2020); Allaire et al. (2022)\n\n\n\n\ntidyverse\n\n\n1.3.2\n\n\nWickham et al. (2019)"
  },
  {
    "objectID": "raschrvignette/RaschRvign.html",
    "href": "raschrvignette/RaschRvign.html",
    "title": "RISEkbmRasch vignette",
    "section": "",
    "text": "This is an introduction to using the RISEkbmRasch R package. A changelog for package updates is available here.\nDetails on installation are available at the package GitHub page. This vignette will walk through a sample analysis using an open dataset with polytomous questionnaire data. This will include some data wrangling to structure the item data and itemlabels, then provide examples of the different functions. The full source code of this document can be found either in this repository or by clicking on </> CODE at the top beside the table of contents. You should be able to use the source code “as is” and reproduce this document locally, as long as you have the required packages installed. This page and this website are built using the open source publishing tool Quarto.\nOne of the aims with this package is to simplify psychometric analysis to shed light on the measurement properties of a scale, questionnaire or test. In a paper recently made available as a preprint (Johansson et al., 2023), our research group propose that the basic aspects of a psychometric analysis should include information about:\nWe’ll include several ways to investigate these measurement properties, using Rasch Measurement Theory. There are also functions in the package less directly related to the criteria above, that will be shown in this vignette.\nPlease note that this is a sample analysis to showcase the R package. It is not intended as a “best practice” psychometric analysis example.\nYou can skip ahead to the Rasch analysis part in Section 3 if you are eager to look at the package output :)"
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#getting-started",
    "href": "raschrvignette/RaschRvign.html#getting-started",
    "title": "RISEkbmRasch vignette",
    "section": "\n1 Getting started",
    "text": "1 Getting started\nSince the package is intended for use with Quarto, this vignette has also been created with Quarto. A “template” .qmd file is available that can be useful to have handy for copy&paste when running a new analysis. You can also download a complete copy of the Quarto/R code to produce this document here.\nLoading the RISEkbmRasch package should also get all the dependencies loaded. You may need to make sure that ggplot2 is updated to version 3.4.0 or later. However, it could be desirable to explicitly load the packages used, to simplify the automatic creation of citations for them, using the grateful package.\n\nCodelibrary(RISEkbmRasch) # devtools::install_github(\"pgmj/RISEkbmRasch\")\nlibrary(grateful)\nlibrary(ggrepel)\nlibrary(car)\nlibrary(kableExtra)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(eRm)\nlibrary(mirt)\nlibrary(psych)\nlibrary(ggplot2)\nlibrary(psychotree)\nlibrary(matrixStats)\nlibrary(reshape)\nlibrary(knitr)\nlibrary(cowplot)\nlibrary(formattable) \nlibrary(glue)\nlibrary(foreach)\n\n\n\n\n\n\n\n\nNote\n\n\n\nQuarto automatically adds links to R packages and functions throughout this document. However, this feature only works properly for packages available on CRAN. Since the RISEkbmRasch package is not on CRAN the links related to functions starting with RI will not work.\n\n\n\n1.1 Loading data\nWe will use data from a recent paper investigating the “initial elevation effect” (Anvari et al., 2022), and focus on the 10 negative items from the PANAS. The data is available at the OSF website.\n\nCodedf.all <- read_csv(\"https://osf.io/download/6fbr5/\")\n# if you have issues with the link, please try downloading manually using the same URL as above\n# and read the file from your local drive.\n\n# subset items and demographic variables\ndf <- df.all %>% \n  select(starts_with(\"PANASD2_1\"),\n         starts_with(\"PANASD2_20\"),\n         age,Sex,Group) %>% \n  select(!PANASD2_10_Active) %>% \n  select(!PANASD2_1_Attentive)\n\n\nThe glimpse() function provides a quick overview of our dataframe.\n\nCodeglimpse(df)\n\nRows: 1,856\nColumns: 13\n$ PANASD2_11_Distressed <dbl> 2, 2, 2, 1, 2, 2, 4, 1, 1, 3, 1, 4, 2, 4, 4, 1, …\n$ PANASD2_12_Upset      <dbl> 1, 1, 4, 1, 1, 5, 2, 1, 2, 2, 2, 3, 1, 3, 5, 1, …\n$ PANASD2_13_Hostile    <dbl> 1, 1, 2, 1, 1, 3, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, …\n$ PANASD2_14_Irritable  <dbl> 1, 1, 3, 1, 2, 5, 3, 1, 2, 4, 2, 3, 1, 2, 3, 1, …\n$ PANASD2_15_Scared     <dbl> 1, 1, 3, 1, 1, 4, 1, 1, 1, 2, 2, 2, 1, 4, 4, 1, …\n$ PANASD2_16_Afraid     <dbl> 1, 1, 4, 1, 1, 3, 1, 1, 1, 3, 1, 2, 1, 4, 4, 1, …\n$ PANASD2_17_Ashamed    <dbl> 1, 1, 2, 1, 1, 3, 1, 1, 1, 2, 1, 4, 1, 1, 3, 1, …\n$ PANASD2_18_Guilty     <dbl> 2, 1, 2, 1, 1, 3, 3, 1, 1, 3, 1, 4, 1, 1, 3, 1, …\n$ PANASD2_19_Nervous    <dbl> 1, 1, 2, 1, 2, 4, 4, 1, 1, 4, 2, 4, 2, 1, 5, 1, …\n$ PANASD2_20_Jittery    <dbl> 1, 2, 3, 1, 1, 2, 3, 3, 2, 1, 2, 2, 1, 1, 4, 1, …\n$ age                   <dbl> 27, 32, 21, 27, 20, 22, 23, 25, 21, 26, 38, 36, …\n$ Sex                   <chr> \"Male\", \"Male\", \"Female\", \"Male\", \"Male\", \"Male\"…\n$ Group                 <chr> \"Later Start\", \"Later Start\", \"Later Start\", \"La…\n\n\nWe have 1856 rows, ie. respondents. All variables except Sex and Group are of class dbl, which means they are numeric and can have decimals. Integer (numeric with no decimals) would also be fine for our purposes. The two demographic variables currently of class chr (character) will need to be converted to factors (fct), and we will do that later on.\n(If you import a dataset where item variables are of class character, you will need to recode to numeric.)\n\n1.2 Itemlabels\nThen we set up the itemlabels dataframe. This could also be done using the free LibreOffice Calc or MS Excel. Just make sure the file has the same structure, with two variables named itemnr and item that contain the item variable names and item description. The item variable names have to match the variable names in the item dataframe.\n\nCodeitemlabels <- df %>% \n  select(starts_with(\"PAN\")) %>% \n  names() %>% \n  as_tibble() %>% \n  separate(value, c(NA, \"item\"), sep =\"_[0-9][0-9]_\") %>% \n  mutate(itemnr = paste0(\"PANAS_\",c(11:20)), .before = \"item\")\n\n\nThe itemlabels dataframe looks like this.\n\nCodeitemlabels\n\n# A tibble: 10 × 2\n   itemnr   item      \n   <chr>    <chr>     \n 1 PANAS_11 Distressed\n 2 PANAS_12 Upset     \n 3 PANAS_13 Hostile   \n 4 PANAS_14 Irritable \n 5 PANAS_15 Scared    \n 6 PANAS_16 Afraid    \n 7 PANAS_17 Ashamed   \n 8 PANAS_18 Guilty    \n 9 PANAS_19 Nervous   \n10 PANAS_20 Jittery   \n\n\n\n1.3 Demographics\nVariables for invariance tests such as Differential Item Functioning (DIF) need to be separated into vectors (ideally as factors with specified levels and labels) with the same length as the number of rows in the dataset. This means that any kind of removal of respondents/rows with missing data needs to be done before separating the DIF variables.\nWe need to check how the Sex variable has been coded and which responses are present in the data.\n\nCodetable(df$Sex)\n\n\n  CONSENT REVOKED      DATA EXPIRED            Female              Male \n                2                 1               896               955 \nPrefer not to say \n                2 \n\n\nSince there are only 5 respondents using labels outside of Female/Male (too few for meaningful statistical analysis), we will remove them to have a complete dataset for all variables in this example.\n\nCodedf <- df %>% \n  filter(Sex %in% c(\"Female\",\"Male\"))\n\n\nLet’s make the variable a factor (instead of class “character”) and put in in a vector separate from the item dataframe.\n\nCodedif.sex <- factor(df$Sex)\n\n\nAnd remove our DIF demographic variable from the item dataset.\n\nCodedf$Sex <- NULL\n\n\nWe can now make use of a very simple function included in this package!\n\nCodeRIdemographics(dif.sex, \"Sex\")\n\n\n\n\n Sex \n    n \n    Percent \n  \n\n\n Female \n    896 \n    48.4 \n  \n\n Male \n    955 \n    51.6 \n  \n\n\n\n\nLet’s move on to the age variable.\n\nCodeglimpse(df$age)\n\n num [1:1851] 27 32 21 27 20 22 23 25 21 26 ...\n\n\nSometimes age is provided in categories, but here we have a numeric variable with age in years. Let’s have a quick look at the age distribution using a histogram, and calculate mean, sd and range.\n\nCode### simpler version of the ggplot below\n# hist(df$age, col = \"#009ca6\")\n# \n# df %>% \n#   summarise(Mean = round(mean(age, na.rm = T),1),\n#             StDev = round(sd(age, na.rm = T),1)\n#             )\n\nggplot(df) +\n  geom_histogram(aes(x = age), \n                 fill = \"#009ca6\",\n                 col = \"black\") +\n  # add the average as a vertical line\n  geom_vline(xintercept = mean(df$age), \n             linewidth = 1.5,\n             linetype = 2,\n             col = \"#ffe500\") +\n  # add a light grey field indicating the standard deviation\n  annotate(\"rect\", ymin = 0, ymax = Inf, \n           xmin = (mean(df$age) - sd(df$age)), xmax = (mean(df$age) + sd(df$age)), \n           alpha = .2) +\n  labs(title = \"\",\n       x = \"Age in years\",\n       y = \"Number of respondents\",\n       caption = glue(\"Note. Mean age is {round(mean(df$age, na.rm = T),1)} years with a standard deviation of {round(sd(df$age, na.rm = T),1)}. Age range is {min(df$age)} to {max(df$age)}.\")\n       ) +\n  theme(plot.caption = element_text(hjust = 0, face = \"italic\"))\n\n\n\n\nAge also needs to be a separate vector, and removed from the item dataframe.\n\nCodedif.age <- df$age\ndf$age <- NULL\n\n\nThere is also a grouping variable which needs to be converted to a factor.\n\nCodedif.group <- factor(df$Group)\ndf$Group <- NULL\nRIdemographics(dif.group, \"Group\")\n\n\n\n\n Group \n    n \n    Percent \n  \n\n\n Earlier Start \n    901 \n    48.7 \n  \n\n Later Start \n    950 \n    51.3 \n  \n\n\n\n\nWith only item data remaining in the dataframe, we can easily rename the items in the item dataframe. These names match the itemlabels variable itemnr.\n\nCodenames(df) <- itemlabels$itemnr\n\n\nNow we are all set for the psychometric analysis!"
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#descriptives",
    "href": "raschrvignette/RaschRvign.html#descriptives",
    "title": "RISEkbmRasch vignette",
    "section": "\n2 Descriptives",
    "text": "2 Descriptives\nLet’s familiarize ourselves with the data before diving into the analysis.\n\n2.1 Missing data\nFirst, we visualize the proportion of missing data on item level.\n\nCodeRImissing(df)\n\n\n\n\nNo missing data in this dataset.\n\n2.2 Overall responses\nThis provides us with an overall picture of the data distribution. As a bonus, any oddities/mistakes in recoding the item data from categories to numbers will be clearly visible.\n\nCodeRIallresp(df)\n\n\n\n\n\nResponse category\n\n\nNumber of responses\n\n\nPercent\n\n\n\n\n\n1\n\n\n9430\n\n\n50.9\n\n\n\n\n2\n\n\n4136\n\n\n22.3\n\n\n\n\n3\n\n\n2676\n\n\n14.5\n\n\n\n\n4\n\n\n1722\n\n\n9.3\n\n\n\n\n5\n\n\n546\n\n\n2.9\n\n\n\n\n\n\nMost R packages for Rasch analysis require the lowest response category to be zero, which makes it necessary for us to recode our data, from using the range of 1-5 to 0-4.\n\nCodedf <- df %>% \n  mutate(across(everything(), ~ car::recode(.x, \"1=0;2=1;3=2;4=3;5=4\", as.factor = F)))\n\n# always check that your recoding worked as intended.\nRIallresp(df)\n\n\n\n\n\nResponse category\n\n\nNumber of responses\n\n\nPercent\n\n\n\n\n\n0\n\n\n9430\n\n\n50.9\n\n\n\n\n1\n\n\n4136\n\n\n22.3\n\n\n\n\n2\n\n\n2676\n\n\n14.5\n\n\n\n\n3\n\n\n1722\n\n\n9.3\n\n\n\n\n4\n\n\n546\n\n\n2.9\n\n\n\n\n\n\n\n2.2.1 Floor/ceiling effects\nNow, we can also look at the raw distribution of sum scores. The RIrawdist() function is a bit crude, since it requires responses in all response categories to accurately calculate max and min scores.\n\nCodeRIrawdist(df)\n\n\n\n\nWe can see a floor effect with 11.8% of participants responding in the lowest category for all items.\n\n2.2.2 Guttman structure\nWhile not really necessary, it could be interesting to see whether the response patterns follow a Guttman-like structure. Items and persons are sorted based on lower->higher responses, and we should see the color move from yellow in the lower left corner to blue in the upper right corner.\n\nCodeRIheatmap(df) +\n  theme(axis.text.x = element_blank())\n\n\n\n\nIn this data, we see the floor effect on the left, with 11.8% of respondents all yellow, and a rather weak Guttman structure. This could also be due to a low variation in item locations/difficulties. Since we have a very large sample I added a theme() option to remove the x-axis text, which would anyway just be a blur of the 1851 respondent row numbers. Each thin vertical slice in the figure is one respondent.\n\n2.3 Item level descriptives\nThere are many ways to look at the item level data, and we’ll get them all together in the tab-panel below. The RItileplot() is probably most informative, since it provides the number of responses in each response category for each item. It is usually recommended to have at least ~10 responses in each category for psychometric analysis, no matter which methodology is used.\nKudos to Solomon Kurz for providing the idea and code on which the tile plot function is built!\nMost people will be familiar with the barplot, and this is probably most intuitive to understand the response distribution within each item. However, if there are many items it will take a while to review, and does not provide the same overview as a tileplot or stacked bars.\n\nCode```{r}\n#| column: margin\n#| code-fold: true\n\n# This code chunk creates a small table in the margin beside the panel-tabset output below, showing all items currently in the df dataframe.\n# The Quarto code chunk option \"#| column: margin\" is necessary for the layout to work as intended.\nRIlistItemsMargin(df, fontsize = 13)\n```\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_15\n\n\nScared\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_18\n\n\nGuilty\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nTile plot\nStacked bars\nBarplots\nExpected Value Curves\n\n\n\n\nCodeRItileplot(df)\n\n\n\n\nWhile response patterns are skewed for all items, there are more than 10 responses in each category for all items which is helpful for the analysis.\n\n\n\nCodeRIbarstack(df) +\n  theme_minimal() + # theming is optional, see section 11 for more on this\n  theme_rise() \n\n\n\n\n\n\n\nCodeRIbarplot(df)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCodelibrary(TAM)\ntam1 <- tam(as.matrix(df), irtmodel = \"PCM\", verbose = FALSE) # run TAM Rasch Partial Credit Model on our data, which uses Marginal Maximum Likelihood estimation\nplot(tam1) # create ICC plots\n\n\n\nIteration in WLE/MLE estimation  1   | Maximal change  2.949 \nIteration in WLE/MLE estimation  2   | Maximal change  2.0344 \nIteration in WLE/MLE estimation  3   | Maximal change  0.7294 \nIteration in WLE/MLE estimation  4   | Maximal change  0.1271 \nIteration in WLE/MLE estimation  5   | Maximal change  0.0034 \nIteration in WLE/MLE estimation  6   | Maximal change  1e-04 \nIteration in WLE/MLE estimation  7   | Maximal change  0 \n----\n WLE Reliability= 0.761 \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n....................................................\n Plots exported in png format into folder:\n /Users/magnuspjo/Library/CloudStorage/OneDrive-RISE/Dokument/R/RISEkbmVignette/raschrvignette/Plots\n\n\n\n\nThe expected value curves are made using the TAM package, which uses Marginal Maximum Likelihood (MML) estimation. It is a good way to check if any of your items may need reversed response categories, amongst other things."
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#rasch-analysis-1",
    "href": "raschrvignette/RaschRvign.html#rasch-analysis-1",
    "title": "RISEkbmRasch",
    "section": "3 Rasch analysis 1",
    "text": "3 Rasch analysis 1\nThe eRm package and Conditional Maximum Likelihood (CML) estimation will be used primarily, with the Partial Credit Model.\nThis is also where the five basic psychometric aspects are good to recall.\n\nUnidimensionality\nResponse categories\nInvariance\nTargeting\nMeasurement uncertainties (reliability)\n\nWe will begin by looking at unidimensionality, response categories, and targeting in parallel below. For unidimensionality, we are mostly interested in item fit and residual correlations, as well as PCA of residuals and loadings on the first residual contrast. At the same time, disordered response categories can influence item fit, and targeting can be useful if it is necessary to remove items due to residual correlations.\nWhen unidimensionality and response categories are found to work adequately, we will move on to invariance testing. And when/if invariance looks good, we can investigate reliability/measurement uncertainties.\nIn the tabset-panel below, each tab will have some explanatory text.\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_15\n\n\nScared\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_18\n\n\nGuilty\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fitPCAResidual correlations1st contrast loadingsAnalysis of response categoriesTargetingItem hierarchy\n\n\n\n\nCode\nRIitemfitPCM2(df, 300, 32, cpu = 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    PANAS_11 \n    1.146 \n    1.105 \n    1.781 \n    1.086 \n  \n  \n    PANAS_12 \n    0.776 \n    0.776 \n    -1.865 \n    -2.397 \n  \n  \n    PANAS_13 \n    1.237 \n    1.091 \n    1.311 \n    0.663 \n  \n  \n    PANAS_14 \n    1.01 \n    0.979 \n    -0.001 \n    -0.128 \n  \n  \n    PANAS_15 \n    0.664 \n    0.724 \n    -2.804 \n    -3.195 \n  \n  \n    PANAS_16 \n    0.71 \n    0.736 \n    -2.565 \n    -3.176 \n  \n  \n    PANAS_17 \n    0.839 \n    0.872 \n    -1.2 \n    -1.239 \n  \n  \n    PANAS_18 \n    1.061 \n    1 \n    0.268 \n    0.215 \n  \n  \n    PANAS_19 \n    0.844 \n    0.844 \n    -1.627 \n    -2.001 \n  \n  \n    PANAS_20 \n    1.16 \n    1.121 \n    1.439 \n    1.401 \n  \n\n\n\n\n\nSince we have a sample size over 500, ZSTD item fit values would be inflated if we use the whole sample. To better estimate accurate ZSTD values the RIitemfitPCM() function allows for multiple subsampling. It is recommended to use a sample size between 250 and 500 (Hagell and Westergren 2016). We will set the sample size to 300 and run 32 subsamples. For faster processing, RIitemfitPCM2() enables parallel processing with multiple CPUs/cores.\n“Outfit” refers to item fit when person location is relatively far away from the item location, while “infit” provides estimates for when person and item locations are close together. MSQ should be close to 1, with lower and upper cutoffs by default set to 0.7 and 1.3, while ZSTD should be around 0, with cutoffs set to +/- 2.0. Infit is usually more important. You can change the cutoffs by using options in the function, see ?RIitemfitPCM for details.\nA low item fit indicates that responses are too predictable and provide little information. A high item fit can indicate several things, most often multidimensionality or, for questionnaires, a question that is difficult to interpret. This could for instance be a question that asks about two things at the same time.\n\n\n\n\nCode\nRIpcmPCA(df)\n\n\n\nPCA of Rasch model residuals\n \n  \n    Eigenvalues \n  \n \n\n  \n    1.79 \n  \n  \n    1.46 \n  \n  \n    1.28 \n  \n  \n    1.14 \n  \n  \n    1.06 \n  \n\n\n\n\n\nThe first eigenvalue should be below 2.0 to support unidimensionality.\n\n\n\n\nCode\nRIresidcorr(df, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    PANAS_11 \n    PANAS_12 \n    PANAS_13 \n    PANAS_14 \n    PANAS_15 \n    PANAS_16 \n    PANAS_17 \n    PANAS_18 \n    PANAS_19 \n    PANAS_20 \n  \n \n\n  \n    PANAS_11 \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_12 \n    -0.1 \n     \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_13 \n    -0.05 \n    -0.01 \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_14 \n    -0.11 \n    0.09 \n    0.07 \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_15 \n    -0.14 \n    -0.13 \n    -0.22 \n    -0.29 \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_16 \n    -0.17 \n    -0.1 \n    -0.25 \n    -0.27 \n    0.39 \n     \n     \n     \n     \n     \n  \n  \n    PANAS_17 \n    -0.18 \n    -0.09 \n    -0.09 \n    -0.19 \n    -0.13 \n    -0.08 \n     \n     \n     \n     \n  \n  \n    PANAS_18 \n    -0.19 \n    -0.15 \n    -0.16 \n    -0.18 \n    -0.15 \n    -0.13 \n    0.32 \n     \n     \n     \n  \n  \n    PANAS_19 \n    -0.12 \n    -0.13 \n    -0.25 \n    -0.14 \n    0.1 \n    0.08 \n    -0.21 \n    -0.12 \n     \n     \n  \n  \n    PANAS_20 \n    -0.06 \n    -0.22 \n    -0.07 \n    -0.05 \n    -0.13 \n    -0.19 \n    -0.16 \n    -0.15 \n    -0.08 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.098, which is 0.2 above the average correlation.\n\n\n\n\n\nThe matrix above shows item-pair correlations of item residuals, with highlights in red showing correlations 0.2 or more above the average item-pair correlation (for all item-pairs) (Christensen, Makransky, and Horton 2017). Rasch model residual correlations are calculated using the mirt package. Again, you can set the cutoff value you desire in the function.\n\n\n\n\nCode\nRIloadLoc(df)\n\n\n\n\n\nHere we see item locations and their loadings on the first residual contrast. This figure can be helpful to identify clusters in data or multidimensionality.\n\n\n\n\nCode\nmodel1 <- PCM(df)\nplotICC(model1, xlim = c(-4,4),\n        xlab = \"Latent variable\",\n        ylab = \"Probability\",\n        legpos = \"topleft\")\n# see ?eRm::plotICC for various options\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEach response category for each item should have a curve that indicates it to be the most probably response at some point on the latent variable (x axis in the figure).\n\n\n\n\nCode\n# increase fig-height above as needed, if you have many items\nRItargeting(df)\n\n\n\n\n\nThis figure shows how well the items fit the respondents/persons. It is a sort of Wright Map that shows person and item threshold locations on the same logit scale.\nThe top part shows person location histogram, the middle part a histogram of item threshold locations, and the bottom part shows individual item threshold locations. The histograms also show means and standard deviations.\n\n\n\n\nCode\nRIitemHierarchy(df)\n\n\n\n\n\n\n\n\n\nItem 18 has issues with the second lowest category, which needs to be merged with the lowest category.\nItem 15 shows low item fit.\nTwo item-pairs show residual correlations above the cutoff value:\n\n15 and 16 (scared and afraid)\n17 and 18 (ashamed and guilty)\n\nSince item 15 also had low item fit, we will remove it. And since item 18 had problems with response categories, it will also be removed.\n\n\nCode\nremoved.items <- c(\"PANAS_15\",\"PANAS_18\")\n\ndf2 <- df %>% \n  select(!any_of(removed.items))"
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#rasch-analysis-2",
    "href": "raschrvignette/RaschRvign.html#rasch-analysis-2",
    "title": "RISEkbmRasch vignette",
    "section": "\n4 Rasch analysis 2",
    "text": "4 Rasch analysis 2\nWith items 15 and 18 removed.\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fit\nPCA\nResidual correlations\n1st contrast loadings\nTargeting\nItem hierarchy\n\n\n\n\nCodeRIitemfitPCM2(df2, 300, 32, cpu = 8)\n\n\n\n\n   \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n\n\n PANAS_11 \n    1.06 \n    1.032 \n    0.731 \n    0.285 \n  \n\n PANAS_12 \n    0.713 \n    0.722 \n    -2.713 \n    -3.41 \n  \n\n PANAS_13 \n    1.129 \n    1.01 \n    0.72 \n    0.288 \n  \n\n PANAS_14 \n    0.908 \n    0.878 \n    -0.934 \n    -1.477 \n  \n\n PANAS_16 \n    0.757 \n    0.788 \n    -1.988 \n    -2.273 \n  \n\n PANAS_17 \n    0.898 \n    0.926 \n    -0.887 \n    -0.732 \n  \n\n PANAS_19 \n    0.845 \n    0.838 \n    -1.538 \n    -2.149 \n  \n\n PANAS_20 \n    1.083 \n    1.06 \n    0.865 \n    0.635 \n  \n\n\n\n\n\n\n\nCodeRIpcmPCA(df2)\n\n\n\nPCA of Rasch model residuals\n \n Eigenvalues \n  \n\n\n 1.52 \n  \n\n 1.33 \n  \n\n 1.19 \n  \n\n 1.15 \n  \n\n 1.00 \n  \n\n\n\n\n\n\n\nCodeRIresidcorr(df2, cutoff = 0.2)\n\n\n\n\n   \n    PANAS_11 \n    PANAS_12 \n    PANAS_13 \n    PANAS_14 \n    PANAS_16 \n    PANAS_17 \n    PANAS_19 \n    PANAS_20 \n  \n\n\n PANAS_11 \n     \n     \n     \n     \n     \n     \n     \n     \n  \n\n PANAS_12 \n    -0.16 \n     \n     \n     \n     \n     \n     \n     \n  \n\n PANAS_13 \n    -0.11 \n    -0.06 \n     \n     \n     \n     \n     \n     \n  \n\n PANAS_14 \n    -0.19 \n    0.03 \n    0.01 \n     \n     \n     \n     \n     \n  \n\n PANAS_16 \n    -0.16 \n    -0.08 \n    -0.25 \n    -0.28 \n     \n     \n     \n     \n  \n\n PANAS_17 \n    -0.18 \n    -0.06 \n    -0.09 \n    -0.19 \n    0 \n     \n     \n     \n  \n\n PANAS_19 \n    -0.15 \n    -0.15 \n    -0.28 \n    -0.18 \n    0.12 \n    -0.16 \n     \n     \n  \n\n PANAS_20 \n    -0.1 \n    -0.27 \n    -0.13 \n    -0.11 \n    -0.18 \n    -0.15 \n    -0.09 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.071, which is 0.2 above the average correlation.\n\n\n\n\n\n\n\nCodeRIloadLoc(df2)\n\n\n\n\n\n\n\nCode# increase fig-height above as needed, if you have many items\nRItargeting(df2)\n\n\n\n\n\n\n\nCodeRIitemHierarchy(df2)\n\n\n\n\n\n\n\n\nItems 12 and 16 are a bit low in item fit ZSTD.\nItems 16 and 19 have a residual correlation at about 0.25 above the average level.\nLet’s look at DIF before taking action upon this information."
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#invariancedif",
    "href": "raschrvignette/RaschRvign.html#invariancedif",
    "title": "RISEkbmRasch vignette",
    "section": "5 Invariance/DIF",
    "text": "5 Invariance/DIF\n\n5.1 Sex\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\nTableFigure itemsFigure thresholds\n\n\n\n\nCode\nRIdifTable(df2, dif.sex)\n\n\n\n\n\n\n\n\n\n\nItem\n\n\n2\n\n\n3\n\n\nMean location\n\n\nStDev\n\n\nMaxDiff\n\n\n\n\n\n\nPANAS_11\n\n\n-0.314\n\n\n-0.196\n\n\n-0.255\n\n\n0.083\n\n\n0.117\n\n\n\n\nPANAS_12\n\n\n0.028\n\n\n-0.044\n\n\n-0.008\n\n\n0.051\n\n\n0.073\n\n\n\n\nPANAS_13\n\n\n0.553\n\n\n0.402\n\n\n0.478\n\n\n0.107\n\n\n0.151\n\n\n\n\nPANAS_14\n\n\n-0.328\n\n\n-0.183\n\n\n-0.255\n\n\n0.103\n\n\n0.146\n\n\n\n\nPANAS_16\n\n\n0.004\n\n\n0.114\n\n\n0.059\n\n\n0.078\n\n\n0.111\n\n\n\n\nPANAS_17\n\n\n0.520\n\n\n0.290\n\n\n0.405\n\n\n0.163\n\n\n0.230\n\n\n\n\nPANAS_19\n\n\n-0.495\n\n\n-0.355\n\n\n-0.425\n\n\n0.099\n\n\n0.140\n\n\n\n\nPANAS_20\n\n\n0.032\n\n\n-0.028\n\n\n0.002\n\n\n0.042\n\n\n0.059\n\n\n\n\n\n\n\n\n\n\n\nCode\nRIdifFigure(df2, dif.sex)\n\n\n\n\n\n\n\n\n\nCode\nRIdifFigThresh(df2, dif.sex)\n\n\n\n\n\n\n\n\nWhile no item shows problematic levels of DIF regarding item location, as shown by the table, there is an interesting pattern in the thresholds figure. The lowest threshold seems to be slightly lower for node 3 (Male) for all items.\nThe results do not require any action since the difference is very small.\n\n\n5.2 Age\n\n\nCode\nRIdifTable(df2, dif.age)\n\n\n[1] \"No significant DIF found.\"\n\n\nNo DIF found for age.\n\n\n5.3 Group\n\n\nCode\nRIdifTable(df2, dif.group)\n\n\n[1] \"No significant DIF found.\"\n\n\nAnd no DIF for group.\n\n\n5.4 Sex and age\nThe psychotree package allows for DIF interaction analysis with multiple DIF variables. Use RIdifTable2() to input two DIF variables.\n\n\nCode\nRIdifTable2(df2, dif.sex, dif.age)\n\n\n\n\n\n\n\n\n\n\nItem\n\n\n2\n\n\n3\n\n\nMean location\n\n\nStDev\n\n\nMaxDiff\n\n\n\n\n\n\nPANAS_11\n\n\n-0.314\n\n\n-0.196\n\n\n-0.255\n\n\n0.083\n\n\n0.117\n\n\n\n\nPANAS_12\n\n\n0.028\n\n\n-0.044\n\n\n-0.008\n\n\n0.051\n\n\n0.073\n\n\n\n\nPANAS_13\n\n\n0.553\n\n\n0.402\n\n\n0.478\n\n\n0.107\n\n\n0.151\n\n\n\n\nPANAS_14\n\n\n-0.328\n\n\n-0.183\n\n\n-0.255\n\n\n0.103\n\n\n0.146\n\n\n\n\nPANAS_16\n\n\n0.004\n\n\n0.114\n\n\n0.059\n\n\n0.078\n\n\n0.111\n\n\n\n\nPANAS_17\n\n\n0.520\n\n\n0.290\n\n\n0.405\n\n\n0.163\n\n\n0.230\n\n\n\n\nPANAS_19\n\n\n-0.495\n\n\n-0.355\n\n\n-0.425\n\n\n0.099\n\n\n0.140\n\n\n\n\nPANAS_20\n\n\n0.032\n\n\n-0.028\n\n\n0.002\n\n\n0.042\n\n\n0.059\n\n\n\n\n\n\n\nNo interaction effect found for sex and age. The analysis only shows the previously identified DIF for sex."
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#rasch-analysis-3",
    "href": "raschrvignette/RaschRvign.html#rasch-analysis-3",
    "title": "RISEkbmRasch vignette",
    "section": "\n6 Rasch analysis 3",
    "text": "6 Rasch analysis 3\nWhile there were no significant issues with DIF for any item/subgroup combination, we need to address the previously identified problems\nItems 12 and 16 are a bit low in item fit ZSTD.\nItems 16 and 19 have a residual correlation at about 0.25 above the average level.\nWe’ll remove item 19 since item 16 has better targeting.\n\nCoderemoved.items <- c(removed.items,\"PANAS_19\")\n\ndf2 <- df2 %>% \n  select(!any_of(removed.items))\n\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fit\nResidual correlations\nTargeting\nItem hierarchy\n\n\n\n\nCodeRIitemfitPCM2(df2, 350, 32, 8)\n\n\n\n\n   \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n\n\n PANAS_11 \n    1.01 \n    1.002 \n    -0.044 \n    0.202 \n  \n\n PANAS_12 \n    0.686 \n    0.695 \n    -3.346 \n    -4.117 \n  \n\n PANAS_13 \n    1.001 \n    0.941 \n    -0.24 \n    -0.513 \n  \n\n PANAS_14 \n    0.86 \n    0.841 \n    -1.578 \n    -2.223 \n  \n\n PANAS_16 \n    0.834 \n    0.83 \n    -1.353 \n    -1.944 \n  \n\n PANAS_17 \n    0.858 \n    0.879 \n    -0.801 \n    -1.25 \n  \n\n PANAS_20 \n    1.07 \n    1.047 \n    0.903 \n    0.546 \n  \n\n\n\n\n\n\n\nCodeRIresidcorr(df2, cutoff = 0.2)\n\n\n\n\n   \n    PANAS_11 \n    PANAS_12 \n    PANAS_13 \n    PANAS_14 \n    PANAS_16 \n    PANAS_17 \n    PANAS_20 \n  \n\n\n PANAS_11 \n     \n     \n     \n     \n     \n     \n     \n  \n\n PANAS_12 \n    -0.18 \n     \n     \n     \n     \n     \n     \n  \n\n PANAS_13 \n    -0.15 \n    -0.11 \n     \n     \n     \n     \n     \n  \n\n PANAS_14 \n    -0.22 \n    0.01 \n    -0.04 \n     \n     \n     \n     \n  \n\n PANAS_16 \n    -0.14 \n    -0.06 \n    -0.26 \n    -0.26 \n     \n     \n     \n  \n\n PANAS_17 \n    -0.2 \n    -0.09 \n    -0.14 \n    -0.22 \n    0 \n     \n     \n  \n\n PANAS_20 \n    -0.12 \n    -0.29 \n    -0.16 \n    -0.13 \n    -0.15 \n    -0.17 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.053, which is 0.2 above the average correlation.\n\n\n\n\n\n\n\nCodeRItargeting(df2)\n\n\n\n\n\n\n\nCodeRIitemHierarchy(df2)\n\n\n\n\n\n\n\n\nNo problematic residual correlations, but item 12 is a bit low in item fit."
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#rasch-analysis-4",
    "href": "raschrvignette/RaschRvign.html#rasch-analysis-4",
    "title": "RISEkbmRasch vignette",
    "section": "\n7 Rasch analysis 4",
    "text": "7 Rasch analysis 4\n\nCoderemoved.items <- c(removed.items,\"PANAS_12\")\n\ndf2 <- df2 %>% \n  select(!any_of(removed.items))\n\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fit\nResidual correlations\nTargeting\nItem hierarchy\n\n\n\n\nCodeRIitemfitPCM2(df2, 350, 32, 8)\n\n\n\n\n   \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n\n\n PANAS_11 \n    0.926 \n    0.932 \n    -0.727 \n    -0.968 \n  \n\n PANAS_13 \n    0.907 \n    0.894 \n    -0.734 \n    -0.789 \n  \n\n PANAS_14 \n    0.85 \n    0.83 \n    -1.69 \n    -2.223 \n  \n\n PANAS_16 \n    0.795 \n    0.8 \n    -1.958 \n    -2.71 \n  \n\n PANAS_17 \n    0.802 \n    0.834 \n    -1.497 \n    -1.881 \n  \n\n PANAS_20 \n    0.96 \n    0.946 \n    -0.397 \n    -0.679 \n  \n\n\n\n\n\n\n\nCodeRIresidcorr(df2, cutoff = 0.2)\n\n\n\n\n   \n    PANAS_11 \n    PANAS_13 \n    PANAS_14 \n    PANAS_16 \n    PANAS_17 \n    PANAS_20 \n  \n\n\n PANAS_11 \n     \n     \n     \n     \n     \n     \n  \n\n PANAS_13 \n    -0.17 \n     \n     \n     \n     \n     \n  \n\n PANAS_14 \n    -0.22 \n    -0.03 \n     \n     \n     \n     \n  \n\n PANAS_16 \n    -0.15 \n    -0.26 \n    -0.24 \n     \n     \n     \n  \n\n PANAS_17 \n    -0.22 \n    -0.14 \n    -0.21 \n    0.01 \n     \n     \n  \n\n PANAS_20 \n    -0.17 \n    -0.2 \n    -0.16 \n    -0.19 \n    -0.2 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.03, which is 0.2 above the average correlation.\n\n\n\n\n\n\n\nCodeRItargeting(df2)\n\n\n\n\n\n\n\nCodeRIitemHierarchy(df2)\n\n\n\n\n\n\n\n\nThere are several item thresholds that are very closely located, as shown in the item hierarchy figure. This is not ideal, since it will inflate reliability estimates.\nHowever, we will not modify the response categories for this sample/simple analysis, we only note that this is not ideal."
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#reliability",
    "href": "raschrvignette/RaschRvign.html#reliability",
    "title": "RISEkbmRasch vignette",
    "section": "\n8 Reliability",
    "text": "8 Reliability\n\nCodeRItif(df2)\n\n\n\n\nWhile 11.8% of respondents had a floor effect based on the raw sum scored data, the figure above shows us that 41.8% are located below the point where the items produce a person separation index (reliability) of 0.7 or higher."
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#person-fit",
    "href": "raschrvignette/RaschRvign.html#person-fit",
    "title": "RISEkbmRasch vignette",
    "section": "\n9 Person fit",
    "text": "9 Person fit\nWe can also look at how the respondents fit the Rasch model with these items.\n\nCodeRIpfit(df2)"
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#item-parameters",
    "href": "raschrvignette/RaschRvign.html#item-parameters",
    "title": "RISEkbmRasch vignette",
    "section": "\n10 Item parameters",
    "text": "10 Item parameters\nTo allow others (and oneself) to use the item parameters estimated for estimation of person locations/thetas, we should make the item parameters available. The function will also write a csv-file with the item threshold locations. Estimations of person locations/thetas can be done with the thetaEst() function from the catR package.\nIt can also be done by using the new (as of 2023-02-04) RIestTheta() function in this package (does not yet work with dichotomous data), which uses thetaEst() across all the participants in your dataframe.\nFirst, we’ll output the parameters into a table.\n\nCodeRIitemparams(df2)\n\n\n\n\n   \n    Threshold 1 \n    Threshold 2 \n    Threshold 3 \n    Threshold 4 \n    Item location \n  \n\n\n PANAS_11 \n    -1.24 \n    -0.33 \n    0.07 \n    1.46 \n    -0.01 \n  \n\n PANAS_13 \n    0.06 \n    0.15 \n    0.82 \n    1.77 \n    0.7 \n  \n\n PANAS_14 \n    -0.99 \n    -0.26 \n    0.12 \n    1.12 \n    0 \n  \n\n PANAS_16 \n    -0.22 \n    -0.12 \n    0.21 \n    1.32 \n    0.3 \n  \n\n PANAS_17 \n    0.29 \n    0.31 \n    0.73 \n    1.17 \n    0.62 \n  \n\n PANAS_20 \n    -0.89 \n    -0.29 \n    0.63 \n    1.57 \n    0.25 \n  \n\n\n\n\nRIitemparams() will automatically write a CSV-file called “itemParameters.csv”. The filename can be specified manually.\n\n10.1 Ordinal sum score to interval score\nThis table shows the corresponding sum score values and logit scores, with standard errors for each logit value.\n\nCodeRIscoreSE(df2)\n\n\n\n\n\nOrdinal sum score\n\n\nLogit score\n\n\nLogit std.error\n\n\n\n\n\n0\n\n\n-3.21\n\n\nNA\n\n\n\n\n1\n\n\n-2.45\n\n\n1.00\n\n\n\n\n2\n\n\n-1.76\n\n\n0.71\n\n\n\n\n3\n\n\n-1.35\n\n\n0.58\n\n\n\n\n4\n\n\n-1.05\n\n\n0.51\n\n\n\n\n5\n\n\n-0.82\n\n\n0.46\n\n\n\n\n6\n\n\n-0.62\n\n\n0.43\n\n\n\n\n7\n\n\n-0.44\n\n\n0.41\n\n\n\n\n8\n\n\n-0.28\n\n\n0.39\n\n\n\n\n9\n\n\n-0.13\n\n\n0.38\n\n\n\n\n10\n\n\n0.01\n\n\n0.37\n\n\n\n\n11\n\n\n0.15\n\n\n0.37\n\n\n\n\n12\n\n\n0.28\n\n\n0.37\n\n\n\n\n13\n\n\n0.42\n\n\n0.37\n\n\n\n\n14\n\n\n0.56\n\n\n0.38\n\n\n\n\n15\n\n\n0.71\n\n\n0.39\n\n\n\n\n16\n\n\n0.86\n\n\n0.40\n\n\n\n\n17\n\n\n1.03\n\n\n0.42\n\n\n\n\n18\n\n\n1.22\n\n\n0.45\n\n\n\n\n19\n\n\n1.43\n\n\n0.48\n\n\n\n\n20\n\n\n1.68\n\n\n0.53\n\n\n\n\n21\n\n\n2.01\n\n\n0.61\n\n\n\n\n22\n\n\n2.45\n\n\n0.73\n\n\n\n\n23\n\n\n3.18\n\n\n1.02\n\n\n\n\n24\n\n\n3.98\n\n\nNA\n\n\n\n\n\n\n\n10.2 Estimating interval level person scores\nBased on the Rasch analysis output of item parameters, we can estimate each individuals location or score (also known as “theta”). Similarly to the RIitemfitPCM() function there is also a parallel processing version of the function available, which makes use of 4 cores by default.\nRIestThetas() by default uses WL estimation of a partial credit model and outputs a vector of person locations on the logit scale. If you do not supply a matrix of item (threshold) locations, it will use eRm’s CML PCM to calculate it based on the dataframe input.\n\nCodelibrary(furrr) # for a parallel processing version of purrr::map_dbl\ndf2$PersonScores <- RIestThetas2(df2, cpu = 8)\n\n\nRIestThetas() can also be used with a pre-specified item (threshold) location matrix. The choice of WL as default is due to the lower bias compared to ML estimation (Warm, 1989).\nIf you would like to use an existing item matrix, this code may be helpful:\n\nCodeitems <- as.matrix(read.csv(\"itemParameters.csv\"))\nitems\n\n     Threshold.1 Threshold.2 Threshold.3 Threshold.4\n[1,]     -1.2382     -0.3288      0.0666      1.4649\n[2,]      0.0623      0.1480      0.8241      1.7680\n[3,]     -0.9915     -0.2566      0.1231      1.1222\n[4,]     -0.2179     -0.1217      0.2099      1.3248\n[5,]      0.2868      0.3061      0.7319      1.1655\n[6,]     -0.8929     -0.2860      0.6297      1.5673\n\n\nAs you can see, this is a matrix object (not a dataframe), with each item as a row, and the threshold locations as columns.\nFinally, we’ll look at the distribution of person scores using a simple histogram.\n\nCodehist(df2$PersonScores, col = \"#009ca6\")"
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#software-used",
    "href": "raschrvignette/RaschRvign.html#software-used",
    "title": "RISEkbmRasch vignette",
    "section": "\n12 Software used",
    "text": "12 Software used\nThe grateful package is a nice way to give credit to the packages used in making the analysis. The package can create both a bibliography file and a table object, which is handy for automatically creating a reference list based on the packages used (or at least explicitly loaded).\n\nCodelibrary(grateful)\npkgs <- cite_packages(cite.tidyverse = TRUE, \n                      output = \"table\",\n                      bib.file = \"grateful-refs.bib\",\n                      include.RStudio = TRUE,\n                      out.dir = getwd())\n# If kbl() is used to generate this table, the references will not be added to the Reference list.\nformattable(pkgs, \n            table.attr = 'class=\\\"table table-striped\\\" style=\"font-size: 13px; font-family: Lato; width: 80%\"')\n\n\n\n\n\nPackage\n\n\nVersion\n\n\nCitation\n\n\n\n\n\nbase\n\n\n4.2.3\n\n\nR Core Team (2023)\n\n\n\n\ncar\n\n\n3.1.2\n\n\nFox & Weisberg (2019)\n\n\n\n\ncowplot\n\n\n1.1.1\n\n\nWilke (2020)\n\n\n\n\neRm\n\n\n1.0.2\n\n\nMair & Hatzinger (2007b); Mair & Hatzinger (2007a); Hatzinger & Rusch (2009); Rusch et al. (2013); Koller et al. (2015); Debelak & Koller (2019); Mair et al. (2021)\n\n\n\n\nforeach\n\n\n1.5.2\n\n\nMicrosoft & Weston (2022)\n\n\n\n\nformattable\n\n\n0.2.1\n\n\nRen & Russell (2021)\n\n\n\n\nfurrr\n\n\n0.3.1\n\n\nVaughan & Dancho (2022)\n\n\n\n\nggrepel\n\n\n0.9.3\n\n\nSlowikowski (2023)\n\n\n\n\nglue\n\n\n1.6.2\n\n\nHester & Bryan (2022)\n\n\n\n\nkableExtra\n\n\n1.3.4\n\n\nZhu (2021)\n\n\n\n\nknitr\n\n\n1.42\n\n\nXie (2014); Xie (2015); Xie (2023)\n\n\n\n\nmatrixStats\n\n\n0.63.0\n\n\nBengtsson (2022)\n\n\n\n\nmirt\n\n\n1.38.1\n\n\nChalmers (2012)\n\n\n\n\npsych\n\n\n2.3.3\n\n\nWilliam Revelle (2023)\n\n\n\n\npsychotree\n\n\n0.16.0\n\n\nTrepte & Verbeet (2010); Strobl et al. (2011); Strobl et al. (2015b); Komboz et al. (2018); Wickelmaier & Zeileis (2018)\n\n\n\n\nreshape\n\n\n0.8.9\n\n\nWickham (2007)\n\n\n\n\nRISEkbmRasch\n\n\n0.1.16.3\n\n\nJohansson (2023)\n\n\n\n\nrmarkdown\n\n\n2.21\n\n\nXie et al. (2018); Xie et al. (2020); Allaire et al. (2023)\n\n\n\n\nTAM\n\n\n4.1.4\n\n\n@\n\n\n\n\ntidyverse\n\n\n2.0.0\n\n\nWickham et al. (2019)"
  },
  {
    "objectID": "parameterizedQ.html",
    "href": "parameterizedQ.html",
    "title": "Automating reports with Quarto",
    "section": "",
    "text": "Let’s say you have survey data from a group of 28 municipalities. You have worked out a Quarto file to generate nice tables and figures and want to produce 28 different reports that all use the same Quarto file for each of the municipalities. Additionally, you want one collective report using the complete dataset.\nInstead of creating 28+1 different .qmd files and running them manually, this can be easily automated with parameterization. This will save huge amounts of time, for instance when you find that typo in one figure and need to re-render all 29 reports. Or, even better, when you get next years survey results and can re-use the whole setup and instantly generate your new reports!"
  },
  {
    "objectID": "parameterizedQ.html#setting-up",
    "href": "parameterizedQ.html#setting-up",
    "title": "Automating reports with Quarto",
    "section": "2 Setting up",
    "text": "2 Setting up\nIn our simple case, we will only use one parameter, the name of the municipality. Of course there could be any number of parameters that you may want to customize, which you are likely to easily be able to do based on this example.\nWe need to add two rows to the qmd-file YAML:\n---\nparams:\n  municipality: \"All municipalities\"\n---\nThis creates the object params$municipality and gives it a default value.\nNext, we create our little script, in a file called render.R, starting with a vector of municipalities. This could of course be read from a file, and our example will only contain four.\nmunicipalities <- c(\"All municipalities\",\"Vallentuna\",\"Vaxholm\",\"Södertälje\",\"Botkyrka\")\nlibrary(glue)\nlibrary(quarto)\nlibrary(purrr)\n\nwalk(1:length(municipalities), function(i) {\n  muni <- municipalities[i]\n  \n  outfile <- glue(\"{Sys.Date()}_{muni}.html\") # gives the filename a date and the municipality name\n  \n  quarto_render(input = \"yourQuartoTemplate.qmd\", \n                execute_params = list(\"grupp\" = muni), \n                output_file = outfile,\n                output_format = \"html\")\n})\n\nAs you can see, we make use of purrr::walk, which means you may be able to use furrr::future_walk to enable parallel processing?! I have only tried this briefly, but it didn’t work. Could be worth looking into if you need to generate a lot of reports often.\n\n\n2.1 Final settings\nNow, we just need to make sure that our Quarto file uses the params. For simplicity, I expect that you read your data from a file into a dataframe. We will make use of a simple if and else combined with dplyr::filter() from the tidyverse.\n# read data\ndf <- read_csv(\"yourDataFile.csv\")\n\nif (params$municipality == \"All municipalities\") {\n  df <- df\n} else {\n  df <- df %>% \n  filter(municipality == params$municipality)\n}\nSave your files and run the render.R script! Files will be output to the same directory as your .qmd file.\nIf you’d like to use the municipality in the first headline of the report, you can add a line like this to the Quarto file:\n\n\nCode\n## `r params$municipality` {.unnumbered}\n\n\n\n\n\n\n\n\nNote\n\n\n\nA far more complex example can be found here (and some of my code was adapted from there): https://github.com/Pecners/sra_pullout/blob/main/render.R"
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#sec-rasch",
    "href": "raschrvignette/RaschRvign.html#sec-rasch",
    "title": "RISEkbmRasch vignette",
    "section": "\n3 Rasch analysis 1",
    "text": "3 Rasch analysis 1\nThe eRm package and Conditional Maximum Likelihood (CML) estimation will be used primarily, with the Partial Credit Model since this is polytomous data.\nThis is also where the five basic psychometric aspects are good to recall.\n\nUnidimensionality\nResponse categories\nInvariance\nTargeting\nMeasurement uncertainties (reliability)\n\nWe will begin by looking at unidimensionality, response categories, and targeting in parallel below. For unidimensionality, we are mostly interested in item fit and residual correlations, as well as PCA of residuals and loadings on the first residual contrast. At the same time, disordered response categories can influence item fit, and targeting can be useful if it is necessary to remove items due to residual correlations.\nWhen unidimensionality and response categories are found to work adequately, we will move on to invariance testing. And when/if invariance looks good, we can investigate reliability/measurement uncertainties.\nIn the tabset-panel below, each tab will have some explanatory text.\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_15\n\n\nScared\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_18\n\n\nGuilty\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fit\nPCA\nResidual correlations\n1st contrast loadings\nAnalysis of response categories\nTargeting\nItem hierarchy\n\n\n\n\nCodeRIitemfitPCM2(df, 300, 32, cpu = 8)\n\n\n\n\n   \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n\n\n PANAS_11 \n    1.147 \n    1.106 \n    1.32 \n    1.106 \n  \n\n PANAS_12 \n    0.776 \n    0.776 \n    -2.063 \n    -2.537 \n  \n\n PANAS_13 \n    1.238 \n    1.093 \n    1.511 \n    1.106 \n  \n\n PANAS_14 \n    1.009 \n    0.978 \n    0.263 \n    -0.159 \n  \n\n PANAS_15 \n    0.663 \n    0.724 \n    -2.629 \n    -3.176 \n  \n\n PANAS_16 \n    0.709 \n    0.735 \n    -2.477 \n    -2.869 \n  \n\n PANAS_17 \n    0.84 \n    0.873 \n    -1.184 \n    -1.363 \n  \n\n PANAS_18 \n    1.06 \n    0.999 \n    0.262 \n    -0.185 \n  \n\n PANAS_19 \n    0.842 \n    0.842 \n    -1.618 \n    -1.958 \n  \n\n PANAS_20 \n    1.161 \n    1.123 \n    1.553 \n    1.19 \n  \n\n\n\n\nSince we have a sample size over 500, ZSTD item fit values would be inflated if we use the whole sample. To better estimate accurate ZSTD values the RIitemfitPCM() function allows for multiple subsampling. It is recommended to use a sample size between 250 and 500 (Hagell & Westergren, 2016). We will set the sample size to 300 and run 32 subsamples. If you just want to test things out, I highly recommend lowering the number 32 to 4 to enable faster rendering.\nFor faster processing, RIitemfitPCM2() enables parallel processing with multiple CPUs/cores. You can check how many available cores you have by running parallel::detectCores(). It is recommended to not use all of them (leave 1 or 2 free). There may be issues with multicore parallel processing, especially when having few responses in some response categories. If you run in to errors, try increasing the sample size, or just use the single cpu/core function RIitemfitPCM() instead.\n“Outfit” refers to item fit when person location is relatively far away from the item location, while “infit” provides estimates for when person and item locations are close together. MSQ should be close to 1, with lower and upper cutoffs set to 0.7 and 1.3 as default values, while ZSTD should be around 0, with default cutoffs set to +/- 2.0. Infit is usually more important. You can change the cutoff values by using options in the function, see ?RIitemfitPCM for details.\nA low item fit indicates that responses are too predictable and provide little information. A high item fit can indicate several things, most often multidimensionality or, for questionnaires, a question that is difficult to interpret. This could for instance be a question that asks about two things at the same time.\n\n\n\nCodeRIpcmPCA(df)\n\n\n\nPCA of Rasch model residuals\n \n Eigenvalues \n  \n\n\n 1.79 \n  \n\n 1.47 \n  \n\n 1.28 \n  \n\n 1.14 \n  \n\n 1.06 \n  \n\n\n\n\nThe first eigenvalue should be below 2.0 to support unidimensionality.\n\n\n\nCodeRIresidcorr(df, cutoff = 0.2)\n\n\n\n\n   \n    PANAS_11 \n    PANAS_12 \n    PANAS_13 \n    PANAS_14 \n    PANAS_15 \n    PANAS_16 \n    PANAS_17 \n    PANAS_18 \n    PANAS_19 \n    PANAS_20 \n  \n\n\n PANAS_11 \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n  \n\n PANAS_12 \n    -0.1 \n     \n     \n     \n     \n     \n     \n     \n     \n     \n  \n\n PANAS_13 \n    -0.05 \n    -0.01 \n     \n     \n     \n     \n     \n     \n     \n     \n  \n\n PANAS_14 \n    -0.11 \n    0.09 \n    0.07 \n     \n     \n     \n     \n     \n     \n     \n  \n\n PANAS_15 \n    -0.14 \n    -0.13 \n    -0.22 \n    -0.29 \n     \n     \n     \n     \n     \n     \n  \n\n PANAS_16 \n    -0.17 \n    -0.1 \n    -0.25 \n    -0.27 \n    0.38 \n     \n     \n     \n     \n     \n  \n\n PANAS_17 \n    -0.18 \n    -0.09 \n    -0.09 \n    -0.19 \n    -0.13 \n    -0.08 \n     \n     \n     \n     \n  \n\n PANAS_18 \n    -0.19 \n    -0.15 \n    -0.16 \n    -0.18 \n    -0.15 \n    -0.13 \n    0.32 \n     \n     \n     \n  \n\n PANAS_19 \n    -0.13 \n    -0.13 \n    -0.25 \n    -0.14 \n    0.1 \n    0.08 \n    -0.21 \n    -0.12 \n     \n     \n  \n\n PANAS_20 \n    -0.06 \n    -0.22 \n    -0.07 \n    -0.05 \n    -0.13 \n    -0.19 \n    -0.16 \n    -0.15 \n    -0.07 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.098, which is 0.2 above the average correlation.\n\n\n\n\nThe matrix above shows item-pair correlations of item residuals, with highlights in red showing correlations 0.2 or more above the average item-pair correlation (for all item-pairs) (Christensen et al., 2017). Rasch model residual correlations are calculated using the mirt package. Again, you can set the cutoff value you desire in the function call, which will affect the values highlighted in the correlation matrix table and the caption text.\n\n\n\nCodeRIloadLoc(df)\n\n\n\n\nHere we see item locations and their loadings on the first residual contrast. This figure can be helpful to identify clusters in data or multidimensionality.\n\n\nThe xlims setting changes the x-axis limits for the ICC plots. The default values usually make sense, and we mostly add this option to point out the possibility of doing so. You can also choose to only show the ICC plots for specific items.\n\nCodeRIitemCats(df, xlims = c(-5,5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEach response category for each item should have a curve that indicates it to be the most probably response at some point on the latent variable (x axis in the figure).\n\n\n\nCode# increase fig-height in the chunk option above if you have many items\nRItargeting(df, xlim = c(-5,4)) # xlim defaults to c(-5,6) if you omit this option\n\n\n\n\nThis figure shows how well the items fit the respondents/persons. It is a sort of Wright Map that shows person locations and item threshold locations on the same logit scale.\nThe top part shows person location histogram, the middle part an inverted histogram of item threshold locations, and the bottom part shows individual item threshold locations. The histograms also show means and standard deviations.\n\n\n\nCodeRIitemHierarchy(df)\n\n\n\n\n\n\n\n\nItem 18 has issues with the second lowest category being disordered.\nItem 15 shows low item fit.\nTwo item-pairs show residual correlations above the cutoff value:\n\n15 and 16 (scared and afraid)\n17 and 18 (ashamed and guilty)\n\nSince item 15 also had low item fit, we will remove it. In the second pair, item 18 will be removed since it also had problems with disordered response categories.\n\nCoderemoved.items <- c(\"PANAS_15\",\"PANAS_18\")\n\ndf2 <- df %>% \n  select(!any_of(removed.items))\n\n\nAs seen in the code above, I chose to create a copy of the dataframe with the removed items omitted. This can be useful if, at a later stage in the analysis, I want to be able to quickly “go back” and reinstate an item."
  },
  {
    "objectID": "latentResp/LatentResponse.html",
    "href": "latentResp/LatentResponse.html",
    "title": "What’s in a latent trait score?",
    "section": "",
    "text": "We frequently use questionnaires to measure latent variables based on multiple items/indicators, but the connection between item responses and a latent trait score is often unclear. Here, I will present a way to visualize item responses and their corresponding latent score and measurement uncertainty that hopefully makes what lies behind the latent score much easier to understand.\nIt should be noted that the term “latent trait score” is not entirely established. The intent is to refer to what in Item Response Theory and Rasch modeling is labelled “theta” - 𝜃 (also known as “person ability”, “person location”, or “person score”). For each participant, IRT/Rasch models make it possible to both estimate a latent trait score on an interval scale and a measurement error specific for each participant’s score. The measurement error depends on the item properties and is not a constant value that is the same for all participants/scores.\nIn classical test theory, latent trait scores may be estimated using factor analysis and used in structural equation models. However, I have never seen anyone “export” the actual latent trait scores for each participant in a dataset, based on a confirmatory factor analysis (CFA). What is usually done, based on classical test theory/CFA, is to use the raw ordinal sum score as a representation of the latent variable.\nJump ahead to Section 5 to see the visualization and skip the psychometric background."
  },
  {
    "objectID": "latentResp/LatentResponse.html#background",
    "href": "latentResp/LatentResponse.html#background",
    "title": "What’s in a latent trait score?",
    "section": "1 Background",
    "text": "1 Background\nThe Mental Health Continuum Short Form (Ryff, 1989; Ryff, 2014) will be used as an example. I have conducted a Rasch analysis and preliminary results indicate that some modifications are needed for the response categories, and some items need to be removed. This will be reported elsewhere in greater detail. Here, only a summary of the changes and the measurement properties of the final set of items will be reported.\nThe analysis makes use of my R package for Rasch psychometric analysis, which in turn depends on (and automatically loads) a lot of packages. See the RISEkbmRasch vignette and GitHub package repository for more details.\n\n\nCode\nlibrary(RISEkbmRasch)\nlibrary(arrow)\nlibrary(ggdist)\nlibrary(ggpp)\n\n### some commands exist in multiple packages, here we define preferred ones that are frequently used\nselect <- dplyr::select\ncount <- dplyr::count\nrecode <- car::recode\nrename <- dplyr::rename\n\n# import item information\nitemlabels <- read_excel(\"/Volumes/magnuspjo/RegionUppsala/data/RegUaItemlabelsEng.xls\", sheet = 1) %>% \n  filter(str_detect(itemnr,\"mhc\"))\nitemresponses <- read_excel(\"/Volumes/magnuspjo/RegionUppsala/data/RegUaItemlabelsEng.xls\", sheet = 3) %>% \n  rename(`How often during the past month did you feel...` = item)\n\n# import recoded data\ndf.all <- read_parquet(\"/Volumes/magnuspjo/RegionUppsala/data/RegUaLHUdata.parquet\")\ndf <- df.all\n\n# recode response categories to numerics\ndf <- df %>% \n  mutate(across(starts_with(\"I1_\"), ~ recode(.x,\"'Aldrig'=0;\n                    'En eller två gånger'=1;\n                    '1 gång/vecka'=2;\n                    '2-3 gånger/vecka'=3;\n                    'Nästan dagligen'=4;\n                    'Dagligen'=5\",\n                    as.factor = FALSE)\n  ))\n\ndf <- df %>% \n  filter(inars %in% c(2019,2021)) %>% \n  mutate(Age = recode(arskurs,\"1='13 yo';2='15 yo';3=' 17 yo';9=NA;99=NA\", as.factor = TRUE),\n         Gender = recode(kon,\"99=NA;9=NA;2='Girls';1='Boys'\", as.factor = T),\n         ) %>% \n  filter(Age %in% c(\"15 yo\",\"17 yo\")) %>% \n  select(starts_with(\"I1_\"),Age,Gender) %>% \n  na.omit()\n\n# create variables for analysis of Differential Item Functioning\ndif.age <- df$Age\ndif.gender <- df$Gender\ndf$Age <- NULL\ndf$Gender <- NULL\n\n# set variable names to match\nnames(df) <- itemlabels$itemnr\n\n\nQuestions in the MHC-SF are prefixed with How often during the past month did you feel…, and the items are listed below in Section 2 in the right-hand side margin.\nSix response categories were used, as specified in the original MHC-SF: every day, almost every day, about 2 or 3 times a week, about once a week, once or twice, never and the Rasch analysis found them disordered for all items. This means that some response categories do not contribute meaningful differential information to the latent score, compared to an adjacent response category - the categories are too similar to the respondents. After merging never with once or twice, and about once a week with about 2 or 3 times a week, the disordering was resolved. However, there are still quite small distances between item category thresholds, as shown in the ICC plots. This leaves us with 4 response categories for each item.\nThe sample consists of 4243 respondents.\n\n\nCode\nfor (i in itemlabels$itemnr) {\n  df[[i]] <- recode(df[[i]],\"1=0;2=1;3=1;4=2;5=3\",\n                    as.factor = FALSE)\n}\n\n\n\nTileplotICC plots\n\n\n\n\nCode\nRItileplot(df)\n\n\n\n\n\n\n\n\n\nCode\nermOut <- PCM(df)\nplotICC(ermOut)"
  },
  {
    "objectID": "latentResp/LatentResponse.html#rasch-analysis-summary",
    "href": "latentResp/LatentResponse.html#rasch-analysis-summary",
    "title": "What’s in a latent score?",
    "section": "2 Rasch analysis summary",
    "text": "2 Rasch analysis summary\nFive items were removed, mostly due to issues of multidimensionality and large residual correlations. Here, the analysis of remaining items is presented.\n\n\nCode\nremoved.items <- c(\"mhc2\",\"mhc3\",\"mhc4\",\"mhc8\",\"mhc7\")\ndf <- df %>% \n  select(!any_of(removed.items))\n\n\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nmhc1 \n\n\nhappy\n\n\n\n\nmhc5 \n\n\nhat you belonged to a community\n\n\n\n\nmhc6 \n\n\nthat our society is becoming a better place for people like you\n\n\n\n\nmhc9 \n\n\nthat you liked most parts of your personality\n\n\n\n\nmhc10\n\n\ngood at managing the responsibilities of your daily life\n\n\n\n\nmhc11\n\n\nthat you had warm and trusting relationships with others\n\n\n\n\nmhc12\n\n\nthat you had experiences that challenged you to grow and become a better person\n\n\n\n\nmhc13\n\n\nconfident to think or express your own ideas and opinions\n\n\n\n\nmhc14\n\n\nthat your life has a sense of direction or meaning to it\n\n\n\n\n\n\n\nItem fitPCAResidual correlations1st contrast loadingsTargetingItem hierarchyDIFReliability\n\n\n\n\nCode\nRIitemfitPCM2(df, 350, 32, 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    mhc1 \n    1.025 \n    0.996 \n    0.32 \n    -0.146 \n  \n  \n    mhc5 \n    1.192 \n    1.125 \n    1.58 \n    1.834 \n  \n  \n    mhc6 \n    1.336 \n    1.228 \n    2.185 \n    2.32 \n  \n  \n    mhc9 \n    0.727 \n    0.746 \n    -3.59 \n    -3.87 \n  \n  \n    mhc10 \n    0.974 \n    0.95 \n    -0.322 \n    -0.801 \n  \n  \n    mhc11 \n    0.779 \n    0.794 \n    -2.601 \n    -2.924 \n  \n  \n    mhc12 \n    0.947 \n    0.927 \n    -0.515 \n    -1.179 \n  \n  \n    mhc13 \n    0.882 \n    0.876 \n    -1.389 \n    -1.559 \n  \n  \n    mhc14 \n    0.693 \n    0.704 \n    -3.757 \n    -4.414 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIpcmPCA(df)\n\n\n\nPCA of Rasch model residuals\n \n  \n    Eigenvalues \n  \n \n\n  \n    1.51 \n  \n  \n    1.27 \n  \n  \n    1.20 \n  \n  \n    1.13 \n  \n  \n    1.09 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIresidcorr(df, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    mhc1 \n    mhc5 \n    mhc6 \n    mhc9 \n    mhc10 \n    mhc11 \n    mhc12 \n    mhc13 \n    mhc14 \n  \n \n\n  \n    mhc1 \n     \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    mhc5 \n    -0.02 \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    mhc6 \n    -0.11 \n    -0.05 \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    mhc9 \n    -0.07 \n    -0.23 \n    -0.11 \n     \n     \n     \n     \n     \n     \n  \n  \n    mhc10 \n    -0.19 \n    -0.22 \n    -0.12 \n    -0.07 \n     \n     \n     \n     \n     \n  \n  \n    mhc11 \n    -0.04 \n    0.01 \n    -0.19 \n    -0.13 \n    -0.07 \n     \n     \n     \n     \n  \n  \n    mhc12 \n    -0.24 \n    -0.26 \n    -0.11 \n    -0.15 \n    -0.04 \n    -0.08 \n     \n     \n     \n  \n  \n    mhc13 \n    -0.16 \n    -0.18 \n    -0.17 \n    0.01 \n    -0.15 \n    -0.21 \n    -0.04 \n     \n     \n  \n  \n    mhc14 \n    -0.07 \n    -0.24 \n    -0.14 \n    -0.04 \n    -0.09 \n    -0.16 \n    -0.02 \n    -0.04 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.084, which is 0.2 above the average correlation.\n\n\n\n\n\n\n\n\n\nCode\nRIloadLoc(df)\n\n\n\n\n\n\n\n\n\nCode\n# increase fig-height above as needed, if you have many items\nRItargeting(df)\n\n\n\n\n\n\n\n\n\nCode\nRIitemHierarchy(df)\n\n\n\n\n\n\n\nInteraction between age and gender.\n\n\nCode\ndf.tree <- data.frame(matrix(ncol = 0, nrow = nrow(df)))\ndf.tree$difdata <- as.matrix(df)\ndf.tree$dif.gender <- dif.gender\ndf.tree$dif.age<- dif.age\n\npctree.out <- pctree(difdata ~ dif.gender + dif.age, data = df.tree)\nplot(pctree.out)\n\n\n\n\n\n\n\n\n\nCode\nRItif(df)\n\n\n\n\n\n\n\n\nItem fit shows some minor issues, but we’ll leave them as good enough for the primary goal of visualization. Do have a look at the item hierarchy and give it some thought?"
  },
  {
    "objectID": "latentResp/LatentResponse.html#estimating-latent-scores",
    "href": "latentResp/LatentResponse.html#estimating-latent-scores",
    "title": "What’s in a latent trait score?",
    "section": "3 Estimating latent scores",
    "text": "3 Estimating latent scores\nFirst, we need the item threshold locations to later estimate person scores.\n\n\nCode\nRIitemparams(df, \"mhcItemParams.csv\")\n\n\n\n\n \n  \n      \n    Threshold 1 \n    Threshold 2 \n    Threshold 3 \n    Item location \n  \n \n\n  \n    mhc1 \n    -2.17 \n    -0.38 \n    1.19 \n    -0.45 \n  \n  \n    mhc5 \n    -0.60 \n    -0.01 \n    0.66 \n    0.02 \n  \n  \n    mhc6 \n    1.17 \n    2.34 \n    3.14 \n    2.22 \n  \n  \n    mhc9 \n    -0.78 \n    0.55 \n    1.25 \n    0.34 \n  \n  \n    mhc10 \n    -1.16 \n    0.49 \n    1.30 \n    0.21 \n  \n  \n    mhc11 \n    -1.49 \n    0.11 \n    0.82 \n    -0.19 \n  \n  \n    mhc12 \n    -0.81 \n    1.06 \n    1.32 \n    0.52 \n  \n  \n    mhc13 \n    -1.00 \n    0.53 \n    0.91 \n    0.15 \n  \n  \n    mhc14 \n    -0.57 \n    0.64 \n    0.92 \n    0.33 \n  \n\n\n\n\n\nCode\nMHCitemParameters <- as.matrix(read.csv(\"mhcItemParams.csv\"))\n\n\nActually, the function used to estimate person scores can automatically estimate the item parameters. But since this is just a practical use case, and you might be interested in applying the item parameters on your own dataset (since I cannot share this data), I thought it worth mentioning and displaying the parameters.\n\n\nCode\ndf$MHCscore <- RIestThetas2(df, itemParams = MHCitemParameters, cpu = 8)\n\n\n\n3.1 Plotting the distribution\n\n\nCode\n# for visualization, we add Gender back to the df\ndf$Gender <- dif.gender\n\nggplot(df,aes(x = MHCscore, y = Gender, fill = Gender)) +\n  stat_slab(\n    side = \"right\", show.legend = F,\n    scale = 0.7, \n    aes(fill_ramp = after_stat(level)),\n    .width = c(.50, .75, 1)\n  ) +\n  stat_summary(fun.data = \"mean_cl_normal\",show.legend = F, size = .4,\n               position = position_dodge2nudge(x=.05,width = .8)) +\nscale_fill_ramp_discrete(from='black', aesthetics = \"fill_ramp\") +\n      scale_fill_viridis_d(begin = 0.4, direction = -1) +\n\n  xlab(\"MHC-SF latent scores\") +\n  ylab(\"\") +\n  theme_minimal() +\n  theme_rise() +\n  theme(axis.text.y = element_text(size = 13))"
  },
  {
    "objectID": "latentResp/LatentResponse.html#preparing-visualization",
    "href": "latentResp/LatentResponse.html#preparing-visualization",
    "title": "What’s in a latent trait score?",
    "section": "4 Preparing visualization",
    "text": "4 Preparing visualization\nLet’s use some sample values, based on distribution quintiles, as a starting point.\n\n\nCode\nquintiles <- quantile(df$MHCscore, probs = c(0.2,0.4,0.6,0.8))\nquintiles\n\n\n       20%        40%        60%        80% \n-0.5148720  0.1545279  0.7598396  1.6389371 \n\n\nNow we find the mode responses for each item based on the respondents in each quintile.\nFirst, lets make groupings based on the quintile cutoff values.\n\n\nCode\ndf <- df %>% \n  mutate(Q_group = case_when(MHCscore < quintiles[1] ~ \"0-20\",\n                             MHCscore >= quintiles[1] & MHCscore < quintiles[2] ~ \"20-40\",\n                             MHCscore >= quintiles[2] & MHCscore < quintiles[3] ~ \"40-60\",\n                             MHCscore >= quintiles[3] & MHCscore < quintiles[4] ~ \"60-80\",\n                             MHCscore >= quintiles[4] ~ \"80-100\",\n                             TRUE ~ NA)\n         )\n\ndf %>% \n  count(Q_group) %>% \n  ggplot(aes(x = Q_group, y = n, fill = Q_group)) +\n  geom_col() +\n  scale_fill_viridis_d(begin = 0.4, direction = -1) +\n  theme_minimal() +\n  theme_rise()\n\n\n\n\n\nIdentifying mode response categories for each item for each group is the next step\n\n\nCode\nMode <- function(x) {\n  ux <- unique(x)\n  ux[which.max(tabulate(match(x, ux)))]\n}\n\n# a df with one row per group and one column per item\nmodeResponses <- data.frame(matrix(ncol = 9, nrow = 5))\nnames(modeResponses) <- df %>% \n  select(starts_with(\"mhc\")) %>% \n  select(!MHCscore) %>% \n  names()\n\nfor (i in names(modeResponses)) {\n  q0 <- Mode(df %>% filter(Q_group == \"0-20\") %>% select(i) %>% na.omit() %>% pull())\n  q1 <- Mode(df %>% filter(Q_group == \"20-40\") %>% select(i) %>% na.omit() %>% pull())\n  q2 <- Mode(df %>% filter(Q_group == \"40-60\") %>% select(i) %>% na.omit() %>% pull())\n  q3 <- Mode(df %>% filter(Q_group == \"60-80\") %>% select(i) %>% na.omit() %>% pull())\n  q4 <- Mode(df %>% filter(Q_group == \"80-100\") %>% select(i) %>% na.omit() %>% pull())\n  modeResponses[[i]] <- rbind(q0,q1,q2,q3,q4)\n}\n\n# transform to dataframe with numeric variables for later extraction as vectors\nmodeResponses <- modeResponses %>% \n  t() %>% \n  as.data.frame()\n\n\nEstimating the latent score and SEM for each group’s mode response pattern.\n\n\nCode\n# sorry for the copy+paste code here...\navg1 <- thetaEst(MHCitemParameters, modeResponses$V1, model = \"PCM\", method = \"WL\")\nsem1 <- semTheta(thEst = avg1, it = MHCitemParameters, x = modeResponses$V1, model = \"PCM\", method = \"WL\")\navg2 <- thetaEst(MHCitemParameters, modeResponses$V2, model = \"PCM\", method = \"WL\")\nsem2 <- semTheta(thEst = avg2, it = MHCitemParameters, x = modeResponses$V2, model = \"PCM\", method = \"WL\")\navg3 <- thetaEst(MHCitemParameters, modeResponses$V3, model = \"PCM\", method = \"WL\")\nsem3 <- semTheta(thEst = avg3, it = MHCitemParameters, x = modeResponses$V3, model = \"PCM\", method = \"WL\")\navg4 <- thetaEst(MHCitemParameters, modeResponses$V4, model = \"PCM\", method = \"WL\")\nsem4 <- semTheta(thEst = avg4, it = MHCitemParameters, x = modeResponses$V4, model = \"PCM\", method = \"WL\")\navg5 <- thetaEst(MHCitemParameters, modeResponses$V5, model = \"PCM\", method = \"WL\")\nsem5 <- semTheta(thEst = avg5, it = MHCitemParameters, x = modeResponses$V5, model = \"PCM\", method = \"WL\")"
  },
  {
    "objectID": "latentResp/LatentResponse.html#sec-visualization",
    "href": "latentResp/LatentResponse.html#sec-visualization",
    "title": "What’s in a latent trait score?",
    "section": "5 Visualization",
    "text": "5 Visualization\n\n\nCode\nrespTable <- function(qLevel) {\n    # typical response patterns for different risk levels\n    if (qLevel == \"0-20\") {\n      p.resp <- modeResponses$V1 \n    } else if (qLevel == \"20-40\") {\n      p.resp <- modeResponses$V2 \n    } else if (qLevel == \"40-60\") {\n      p.resp <- modeResponses$V3 \n    } else if (qLevel == \"60-80\") {\n      p.resp <- modeResponses$V4 \n    } else if (qLevel == \"80-100\") {\n      p.resp <- modeResponses$V5 \n    }\n\n    itemresponses %>%\n      formattable(.,\n        align = c(\"r\", \"l\", \"c\", \"c\", \"c\", \"c\", \"c\"), list(\n          formattable::area(row = 1, col = 3 + p.resp[1]) ~ color_tile(\"lightblue\", \"lightpink\"),\n          formattable::area(row = 2, col = 3 + p.resp[2]) ~ color_tile(\"lightblue\", \"lightpink\"),\n          formattable::area(row = 3, col = 3 + p.resp[3]) ~ color_tile(\"lightblue\", \"lightpink\"),\n          formattable::area(row = 4, col = 3 + p.resp[4]) ~ color_tile(\"lightblue\", \"lightpink\"),\n          formattable::area(row = 5, col = 3 + p.resp[5]) ~ color_tile(\"lightblue\", \"lightpink\"),\n          formattable::area(row = 6, col = 3 + p.resp[6]) ~ color_tile(\"lightblue\", \"lightpink\"),\n          formattable::area(row = 7, col = 3 + p.resp[7]) ~ color_tile(\"lightblue\", \"lightpink\"),\n          formattable::area(row = 8, col = 3 + p.resp[8]) ~ color_tile(\"lightblue\", \"lightpink\"),\n          formattable::area(row = 9, col = 3 + p.resp[9]) ~ color_tile(\"lightblue\", \"lightpink\")\n        ),\n        table.attr = 'class=\\\"table table-striped\\\" style=\"font-size: 15px; font-family: Lato\"'\n      )\n}\n\nrespDist <- function(qLevel) {\n  if (qLevel == \"0-20\") {\n      score <- avg1\n      sem <- sem1\n    } else if (qLevel == \"20-40\") {\n      score <- avg2\n      sem <- sem2\n    } else if (qLevel == \"40-60\") {\n      score <- avg3\n      sem <- sem3\n    } else if (qLevel == \"60-80\") {\n      score <- avg4\n      sem <- sem4\n    } else if (qLevel == \"80-100\") {\n      score <- avg5\n      sem <- sem5\n    }\n\n  qlabel <- qLevel\n  ggplot(df, aes(x = MHCscore, y = Gender, fill = Gender)) +\n  stat_slab(\n    side = \"right\", show.legend = F,\n    scale = 0.8, justification = 0,\n    aes(fill_ramp = after_stat(level)),\n    .width = c(.50, .75, 1)\n    \n  ) +\n  stat_summary(\n    fun.data = \"mean_cl_normal\", show.legend = F, size = .4,\n    position = position_dodge2nudge(x = .05, width = .8)\n  ) +\n  scale_fill_ramp_discrete(from = \"black\", aesthetics = \"fill_ramp\") +\n  scale_fill_viridis_d(begin = 0.4, direction = -1) +\n  geom_vline(xintercept = score, color = \"red\", linetype = 2) +\n  annotate(\"rect\", ymin = 0, ymax = Inf, xmin = score - sem, xmax = score + sem, alpha = .15) +\n  #annotate(\"text\", label = qlabel, x = score-0.12, y = 1.5, \n  #         angle = 90, size = 4, family = \"Lato\") +\n  xlab(\"MHC-SF latent scores\") +\n  ylab(\"\") +\n  theme_minimal() +\n  theme_rise(axissize = 11) +\n  theme(axis.text.y = element_text(size = 11)) +\n  scale_y_discrete(expand = c(0,0))\n}\n\n\n\n0-2020-4040-6060-8080-100All together\n\n\n\n\nCode\nrespTable(\"0-20\")\n\n\n\n\n\n\n\nitemnr\n\n\nHow often during the past month did you feel…\n\n\nCategory0\n\n\nCategory1\n\n\nCategory2\n\n\nCategory3\n\n\n\n\n\n\nmhc1\n\n\nhappy\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc5\n\n\nthat you belonged to a community\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc6\n\n\nthat our society is becoming a better place for people like you\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc9\n\n\nthat you liked most parts of your personality\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc10\n\n\ngood at managing the responsibilities of your daily life\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc11\n\n\nthat you had warm and trusting relationships with others\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc12\n\n\nthat you had experiences that challenged you to grow and become a better person\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc13\n\n\nconfident to think or express your own ideas and opinions\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc14\n\n\nthat your life has a sense of direction or meaning to it\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\n\n\n\nCode\nrespDist(\"0-20\")\n\n\n\n\n\n\n\n\n\nCode\nrespTable(\"20-40\")\n\n\n\n\n\n\n\nitemnr\n\n\nHow often during the past month did you feel…\n\n\nCategory0\n\n\nCategory1\n\n\nCategory2\n\n\nCategory3\n\n\n\n\n\n\nmhc1\n\n\nhappy\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc5\n\n\nthat you belonged to a community\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc6\n\n\nthat our society is becoming a better place for people like you\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc9\n\n\nthat you liked most parts of your personality\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc10\n\n\ngood at managing the responsibilities of your daily life\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc11\n\n\nthat you had warm and trusting relationships with others\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc12\n\n\nthat you had experiences that challenged you to grow and become a better person\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc13\n\n\nconfident to think or express your own ideas and opinions\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc14\n\n\nthat your life has a sense of direction or meaning to it\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\n\n\n\nCode\nrespDist(\"20-40\")\n\n\n\n\n\n\n\n\n\nCode\nrespTable(\"40-60\")\n\n\n\n\n\n\n\nitemnr\n\n\nHow often during the past month did you feel…\n\n\nCategory0\n\n\nCategory1\n\n\nCategory2\n\n\nCategory3\n\n\n\n\n\n\nmhc1\n\n\nhappy\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc5\n\n\nthat you belonged to a community\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc6\n\n\nthat our society is becoming a better place for people like you\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc9\n\n\nthat you liked most parts of your personality\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc10\n\n\ngood at managing the responsibilities of your daily life\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc11\n\n\nthat you had warm and trusting relationships with others\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc12\n\n\nthat you had experiences that challenged you to grow and become a better person\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc13\n\n\nconfident to think or express your own ideas and opinions\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc14\n\n\nthat your life has a sense of direction or meaning to it\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\n\n\n\nCode\nrespDist(\"40-60\")\n\n\n\n\n\n\n\n\n\nCode\nrespTable(\"60-80\")\n\n\n\n\n\n\n\nitemnr\n\n\nHow often during the past month did you feel…\n\n\nCategory0\n\n\nCategory1\n\n\nCategory2\n\n\nCategory3\n\n\n\n\n\n\nmhc1\n\n\nhappy\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc5\n\n\nthat you belonged to a community\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc6\n\n\nthat our society is becoming a better place for people like you\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc9\n\n\nthat you liked most parts of your personality\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc10\n\n\ngood at managing the responsibilities of your daily life\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc11\n\n\nthat you had warm and trusting relationships with others\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc12\n\n\nthat you had experiences that challenged you to grow and become a better person\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc13\n\n\nconfident to think or express your own ideas and opinions\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc14\n\n\nthat your life has a sense of direction or meaning to it\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\n\n\n\nCode\nrespDist(\"60-80\")\n\n\n\n\n\n\n\n\n\nCode\nrespTable(\"80-100\")\n\n\n\n\n\n\n\nitemnr\n\n\nHow often during the past month did you feel…\n\n\nCategory0\n\n\nCategory1\n\n\nCategory2\n\n\nCategory3\n\n\n\n\n\n\nmhc1\n\n\nhappy\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc5\n\n\nthat you belonged to a community\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc6\n\n\nthat our society is becoming a better place for people like you\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc9\n\n\nthat you liked most parts of your personality\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc10\n\n\ngood at managing the responsibilities of your daily life\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc11\n\n\nthat you had warm and trusting relationships with others\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc12\n\n\nthat you had experiences that challenged you to grow and become a better person\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc13\n\n\nconfident to think or express your own ideas and opinions\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc14\n\n\nthat your life has a sense of direction or meaning to it\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\n\n\n\nCode\nrespDist(\"80-100\")\n\n\n\n\n\n\n\n\n\nCode\nggplot(df, aes(x = MHCscore, y = Gender, fill = Gender)) +\n  stat_slab(\n    side = \"right\", show.legend = F,\n    scale = 0.7,\n    aes(fill_ramp = after_stat(level)),\n    .width = c(.50, .75, 1)\n  ) +\n  stat_summary(\n    fun.data = \"mean_cl_normal\", show.legend = F, size = .4,\n    position = position_dodge2nudge(x = .05, width = .8)\n  ) +\n  scale_fill_ramp_discrete(from = \"black\", aesthetics = \"fill_ramp\") +\n  scale_fill_viridis_d(begin = 0.4, direction = -1) +\n  geom_vline(xintercept = avg1, color = \"orange\", linetype = 2) +\n  annotate(\"rect\", ymin = 0, ymax = Inf, xmin = avg1 - sem1, xmax = avg1 + sem1, alpha = .1) +\n  annotate(\"text\", label = \"0-20\", x = avg1-0.1, y = 1.5, angle = 90, size = 3) +\n  geom_vline(xintercept = avg2, color = \"orange\", linetype = 2) +\n  annotate(\"rect\", ymin = 0, ymax = Inf, xmin = avg2 - sem2, xmax = avg2 + sem2, alpha = .1) +\n  annotate(\"text\", label = \"20-40\", x = avg2-0.1, y = 1.5, angle = 90, size = 3) +\n  geom_vline(xintercept = avg3, color = \"orange\", linetype = 2) +\n  annotate(\"rect\", ymin = 0, ymax = Inf, xmin = avg3 - sem3, xmax = avg3 + sem3, alpha = .1) +\n  annotate(\"text\", label = \"40-60\", x = avg3-0.1, y = 1.5, angle = 90, size = 3) +\n  geom_vline(xintercept = avg4, color = \"orange\", linetype = 2) +\n  annotate(\"text\", label = \"60-80\", x = avg4-0.1, y = 1.5, angle = 90, size = 3) +\n  annotate(\"rect\", ymin = 0, ymax = Inf, xmin = avg4 - sem4, xmax = avg4 + sem4, alpha = .1) +\n  geom_vline(xintercept = avg5, color = \"orange\", linetype = 2) +\n  annotate(\"text\", label = \"80-100\", x = avg5-0.1, y = 1.5, angle = 90, size = 3) +\n  annotate(\"rect\", ymin = 0, ymax = Inf, xmin = avg5 - sem5, xmax = avg5 + sem5, alpha = .1) +\n  xlab(\"MHC-SF latent scores\") +\n  ylab(\"\") +\n  theme_minimal() +\n  theme_rise() +\n  theme(axis.text.y = element_text(size = 12))"
  },
  {
    "objectID": "latentResp/LatentResponse.html#software-used",
    "href": "latentResp/LatentResponse.html#software-used",
    "title": "What’s in a latent trait score?",
    "section": "7 Software used",
    "text": "7 Software used\n\n\nCode\nlibrary(grateful)\npkgs <- cite_packages(cite.tidyverse = TRUE, \n                      output = \"table\",\n                      bib.file = \"grateful-refs.bib\",\n                      include.RStudio = TRUE)\nformattable(pkgs, \n            table.attr = 'class=\\\"table table-striped\\\" style=\"font-size: 14px; font-family: Lato; width: 80%\"')\n\n\n\n\n\n\n\nPackage\n\n\nVersion\n\n\nCitation\n\n\n\n\n\n\narrow\n\n\n10.0.0\n\n\nRichardson et al. (2022)\n\n\n\n\nbase\n\n\n4.2.2\n\n\nR Core Team (2022)\n\n\n\n\ncar\n\n\n3.1.1\n\n\nFox & Weisberg (2019)\n\n\n\n\nformattable\n\n\n0.2.1\n\n\nRen & Russell (2021)\n\n\n\n\nggdist\n\n\n3.2.0\n\n\nKay (2022)\n\n\n\n\nggpp\n\n\n0.4.5\n\n\nAphalo (2022)\n\n\n\n\ngrateful\n\n\n0.1.11\n\n\nRodríguez-Sánchez et al. (2022)\n\n\n\n\nRISEkbmRasch\n\n\n0.1.9\n\n\nJohansson (2023)\n\n\n\n\nrmarkdown\n\n\n2.20\n\n\nXie et al. (2018); Xie et al. (2020); Allaire et al. (2023)\n\n\n\n\ntidyverse\n\n\n1.3.2\n\n\nWickham et al. (2019)"
  },
  {
    "objectID": "latentResp/LatentResponse.html#sec-rasch",
    "href": "latentResp/LatentResponse.html#sec-rasch",
    "title": "What’s in a latent trait score?",
    "section": "2 Rasch analysis summary",
    "text": "2 Rasch analysis summary\nFive items were removed, mostly due to issues of multidimensionality and large residual correlations. Here, the analysis of remaining items is presented.\n\n\nCode\nremoved.items <- c(\"mhc2\",\"mhc3\",\"mhc4\",\"mhc8\",\"mhc7\")\ndf <- df %>% \n  select(!any_of(removed.items))\n\n\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nmhc1 \n\n\nhappy\n\n\n\n\nmhc5 \n\n\nhat you belonged to a community\n\n\n\n\nmhc6 \n\n\nthat our society is becoming a better place for people like you\n\n\n\n\nmhc9 \n\n\nthat you liked most parts of your personality\n\n\n\n\nmhc10\n\n\ngood at managing the responsibilities of your daily life\n\n\n\n\nmhc11\n\n\nthat you had warm and trusting relationships with others\n\n\n\n\nmhc12\n\n\nthat you had experiences that challenged you to grow and become a better person\n\n\n\n\nmhc13\n\n\nconfident to think or express your own ideas and opinions\n\n\n\n\nmhc14\n\n\nthat your life has a sense of direction or meaning to it\n\n\n\n\n\n\n\nItem fitPCAResidual correlations1st contrast loadingsTargetingItem hierarchyDIFReliability\n\n\n\n\nCode\nRIitemfitPCM2(df, 300, 32, 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    mhc1 \n    1.025 \n    0.996 \n    0.416 \n    0.069 \n  \n  \n    mhc5 \n    1.192 \n    1.125 \n    1.889 \n    1.604 \n  \n  \n    mhc6 \n    1.336 \n    1.228 \n    1.757 \n    2.222 \n  \n  \n    mhc9 \n    0.727 \n    0.746 \n    -3.542 \n    -3.697 \n  \n  \n    mhc10 \n    0.974 \n    0.95 \n    -0.092 \n    -0.562 \n  \n  \n    mhc11 \n    0.779 \n    0.794 \n    -2.439 \n    -2.94 \n  \n  \n    mhc12 \n    0.947 \n    0.927 \n    -0.805 \n    -1.026 \n  \n  \n    mhc13 \n    0.882 \n    0.876 \n    -1.466 \n    -1.678 \n  \n  \n    mhc14 \n    0.693 \n    0.704 \n    -3.497 \n    -3.964 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIpcmPCA(df)\n\n\n\nPCA of Rasch model residuals\n \n  \n    Eigenvalues \n  \n \n\n  \n    1.51 \n  \n  \n    1.27 \n  \n  \n    1.20 \n  \n  \n    1.13 \n  \n  \n    1.09 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIresidcorr(df, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    mhc1 \n    mhc5 \n    mhc6 \n    mhc9 \n    mhc10 \n    mhc11 \n    mhc12 \n    mhc13 \n    mhc14 \n  \n \n\n  \n    mhc1 \n     \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    mhc5 \n    -0.02 \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    mhc6 \n    -0.11 \n    -0.05 \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    mhc9 \n    -0.07 \n    -0.23 \n    -0.11 \n     \n     \n     \n     \n     \n     \n  \n  \n    mhc10 \n    -0.19 \n    -0.22 \n    -0.12 \n    -0.07 \n     \n     \n     \n     \n     \n  \n  \n    mhc11 \n    -0.04 \n    0.01 \n    -0.19 \n    -0.13 \n    -0.07 \n     \n     \n     \n     \n  \n  \n    mhc12 \n    -0.24 \n    -0.26 \n    -0.11 \n    -0.15 \n    -0.04 \n    -0.08 \n     \n     \n     \n  \n  \n    mhc13 \n    -0.16 \n    -0.18 \n    -0.17 \n    0.01 \n    -0.15 \n    -0.21 \n    -0.04 \n     \n     \n  \n  \n    mhc14 \n    -0.07 \n    -0.24 \n    -0.14 \n    -0.04 \n    -0.09 \n    -0.16 \n    -0.02 \n    -0.04 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.084, which is 0.2 above the average correlation.\n\n\n\n\n\n\n\n\n\nCode\nRIloadLoc(df)\n\n\n\n\n\n\n\n\n\nCode\n# increase fig-height above as needed, if you have many items\nRItargeting(df)\n\n\n\n\n\n\n\n\n\nCode\nRIitemHierarchy(df)\n\n\n\n\n\n\n\nInteraction between age and gender.\n\n\nCode\ndf.tree <- data.frame(matrix(ncol = 0, nrow = nrow(df)))\ndf.tree$difdata <- as.matrix(df)\ndf.tree$dif.gender <- dif.gender\ndf.tree$dif.age<- dif.age\n\npctree.out <- pctree(difdata ~ dif.gender + dif.age, data = df.tree)\nplot(pctree.out)\n\n\n\n\n\n\n\nCode\ncutoff <- 0.5\ndiffig <- itempar(pctree.out) %>%\n  as.data.frame() %>%\n  t() %>%\n  as.data.frame() %>%\n  mutate(\n    `Mean location` = rowMeans(.),\n    StDev = rowSds(as.matrix(.))\n  ) %>%\n  rowwise() %>%\n  mutate(MaxDiff = (max(c_across(c(1:(ncol(.) - 2))))) -\n    min(c_across(c(1:(ncol(.) - 2))))) %>%\n  ungroup() %>%\n  mutate(across(where(is.numeric), round, 3)) %>%\n  rownames_to_column(var = \"Item\") %>%\n  mutate(Item = names(df)) %>%\n  relocate(MaxDiff, .after = last_col())\n\n  formattable(diffig,\n    list(MaxDiff = formatter(\"span\",\n      style = ~ style(color = ifelse(MaxDiff < -cutoff,\n        \"red\", ifelse(MaxDiff > cutoff, \"red\", \"black\")\n      ))\n    )\n    ),\n    table.attr = \"class=\\\"table table-striped\\\" style=\\\"font-size: 15px; font-family: Lato\\\"\"\n  )\n\n\n\n\n\n\n\nItem\n\n\n2\n\n\n3\n\n\nMean location\n\n\nStDev\n\n\nMaxDiff\n\n\n\n\n\n\nmhc1\n\n\n-0.836\n\n\n-0.770\n\n\n-0.803\n\n\n0.047\n\n\n0.067\n\n\n\n\nmhc5\n\n\n-0.276\n\n\n-0.390\n\n\n-0.333\n\n\n0.081\n\n\n0.114\n\n\n\n\nmhc6\n\n\n1.774\n\n\n2.021\n\n\n1.897\n\n\n0.175\n\n\n0.247\n\n\n\n\nmhc9\n\n\n-0.148\n\n\n0.109\n\n\n-0.019\n\n\n0.182\n\n\n0.257\n\n\n\n\nmhc10\n\n\n-0.010\n\n\n-0.275\n\n\n-0.143\n\n\n0.187\n\n\n0.265\n\n\n\n\nmhc11\n\n\n-0.356\n\n\n-0.718\n\n\n-0.537\n\n\n0.256\n\n\n0.362\n\n\n\n\nmhc12\n\n\n0.238\n\n\n0.103\n\n\n0.170\n\n\n0.096\n\n\n0.135\n\n\n\n\nmhc13\n\n\n-0.299\n\n\n-0.127\n\n\n-0.213\n\n\n0.122\n\n\n0.172\n\n\n\n\nmhc14\n\n\n-0.086\n\n\n0.047\n\n\n-0.020\n\n\n0.094\n\n\n0.133\n\n\n\n\n\n\n\nOnly DIF between genders found, and none large enough to cause problems.\n\n\n\n\nCode\nRItif(df)\n\n\n\n\n\n\n\n\nItem fit shows some minor issues, but we’ll leave them as good enough for the primary goal of visualization. Do have a look at the item hierarchy and give it some thought?"
  },
  {
    "objectID": "latentResp/LatentResponse.html#other-visualizations",
    "href": "latentResp/LatentResponse.html#other-visualizations",
    "title": "What’s in a latent trait score?",
    "section": "6 Other visualizations",
    "text": "6 Other visualizations\nWe can use the same set of scores and combine them with the previously reported figure for item hierarchy.\n\n6.1 Targeting example\n\n\nCode\nRIitemHierarchy(df[,c(1:9)]) +\n  geom_hline(aes(yintercept = avg4), linetype = 2, color = \"red\") +\n  annotate(\"rect\", xmin = 0, xmax = Inf, ymin = avg4 - sem4, ymax = avg4 + sem4, alpha = .1) +\n  annotate(\"text\", label = \"60-80\", y = avg4-0.1, x = 9, angle = 90, size = 3, color = \"darkorange\") +\n  geom_hline(aes(yintercept = avg2), linetype = 2, color = \"red\") +\n  annotate(\"rect\", xmin = 0, xmax = Inf, ymin = avg2 - sem2, ymax = avg2 + sem2, alpha = .1) +\n  annotate(\"text\", label = \"20-40\", y = avg2-0.1, x = 9, angle = 90, size = 3, color = \"darkorange\")"
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#additional-credits",
    "href": "raschrvignette/RaschRvign.html#additional-credits",
    "title": "RISEkbmRasch vignette",
    "section": "\n13 Additional credits",
    "text": "13 Additional credits\nThanks to my colleagues at RISE for providing feedback and testing the package on Windows and MacOS platforms. Also, thanks to Mike Linacre and Jeanette Melin for providing useful feedback to improve this vignette."
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#fonts-and-themes",
    "href": "raschrvignette/RaschRvign.html#fonts-and-themes",
    "title": "RISEkbmRasch vignette",
    "section": "\n11 Fonts and themes",
    "text": "11 Fonts and themes\nMost of the figures created by the functions can be styled by adding theme settings to them. You can use the standard ggplot function theme() and related theme-functions. As usual it is possible to “stack” theme functions, as seen in the example below.\nA custom theme function, theme_rise(), is included in the RISEkbmRasch package. It might be easier to use if you are not familiar with theme().\nFor instance, you might like to change the font to “Lato” for the item hierarchy figure, and make the background transparent.\n\nCode# first we need to remove the `PersonScores` variable from the `df2` dataframe, to ensure that `df2` contains only item data before using it with the item hierarchy function.\ndf2$PersonScores <- NULL\n\nRIitemHierarchy(df2) +\n  theme_minimal() + # first apply the minimal theme to make the background transparent\n  theme_rise(fontfamily = \"Lato\") # then apply theme_rise, which simplifies making changes to all plot elements\n\n\n\n\nIn order to change font for text inside plots you will need to add an additional line of code.\nupdate_geom_defaults(\"text\", list(family = \"Lato))\nPlease note that this updates the default settings for geom_text() for the whole session. Also, some functions, such as RIloadLoc() make use of geom_text_repel(), for which you would need to change the function above from “text” to “text_repel”.\nA simple way to only change font family and font size would be to use theme_minimal(base_family = \"Calibri\", base_size = 14). Please see the reference page for default ggplot themes for alternatives to theme_minimal()."
  },
  {
    "objectID": "parameterizedQ.html#a-slightly-more-complex-example",
    "href": "parameterizedQ.html#a-slightly-more-complex-example",
    "title": "Automating reports with Quarto",
    "section": "3 A slightly more complex example",
    "text": "3 A slightly more complex example\nThe earlier example only used a single vector of municipalities as a parameter. In a current project I’m working on the municipalities also want to specify who they want to compare themselves with, and the timespan in years that they want displayed in the report. We keep this information in a MS Excel file with three variables: focusMuni, compMuni, yearsMuni, which is read into a dataframe called DIDparams in the script below. To avoid issues with blank spaces in the cells, we’ll remove them when importing. This is done with the gsub() function.\nlibrary(readxl)\nlibrary(dplyr)\n\nDIDparams <- read_excel(\"DIDreportParameters.xls\") %>%\n  mutate(across(everything(), ~ gsub(\" \",\"\",.x)))\nThen we loop through each row in the DIDparams dataframe. Each cell in the variables compMuni and YearsMuni will contain multiple values. We use strsplit() and unlist() in a pipe to convert these into vectors. Finally, we want to make sure that the variable containing years is coded as numeric.\nwalk(1:nrow(DIDparams), function(i) {\n  this <- DIDparams[i,]\n\n  outfile <- glue(\"{Sys.Date()}_DIDrapport_{this$fokusKommun}.html\")\n\n  quarto_render(input = \"DIDreport.qmd\",\n                execute_params = list(\"focusMuni\" = this$focusMuni, # only contains one value\n                                      \"compMuni\" = this$compMuni %>% strsplit(\",\") %>% unlist(),\n                                      \"yearsMuni\" = this$yearsMuni %>% strsplit(\",\") %>% unlist() %>% as.numeric()\n                                      ),\n                output_file = outfile,\n                output_format = \"html\")\n})"
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#dif---differential-item-functioning",
    "href": "raschrvignette/RaschRvign.html#dif---differential-item-functioning",
    "title": "RISEkbmRasch vignette",
    "section": "\n5 DIF - differential item functioning",
    "text": "5 DIF - differential item functioning\nWe’ll be looking at how/if item (threshold) locations are stable between demographic subgroups.\n\n5.1 Sex\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\nTable\nFigure items\nFigure thresholds\n\n\n\n\nCodeRIdifTable(df2, dif.sex)\n\n\n\n\n\n\n\n\nItem\n\n\n2\n\n\n3\n\n\nMean location\n\n\nStDev\n\n\nMaxDiff\n\n\n\n\n\nPANAS_11\n\n\n-0.314\n\n\n-0.196\n\n\n-0.255\n\n\n0.083\n\n\n0.117\n\n\n\n\nPANAS_12\n\n\n0.028\n\n\n-0.044\n\n\n-0.008\n\n\n0.051\n\n\n0.073\n\n\n\n\nPANAS_13\n\n\n0.553\n\n\n0.402\n\n\n0.478\n\n\n0.107\n\n\n0.151\n\n\n\n\nPANAS_14\n\n\n-0.328\n\n\n-0.183\n\n\n-0.255\n\n\n0.103\n\n\n0.146\n\n\n\n\nPANAS_16\n\n\n0.004\n\n\n0.114\n\n\n0.059\n\n\n0.078\n\n\n0.111\n\n\n\n\nPANAS_17\n\n\n0.520\n\n\n0.290\n\n\n0.405\n\n\n0.163\n\n\n0.230\n\n\n\n\nPANAS_19\n\n\n-0.495\n\n\n-0.355\n\n\n-0.425\n\n\n0.099\n\n\n0.140\n\n\n\n\nPANAS_20\n\n\n0.032\n\n\n-0.028\n\n\n0.002\n\n\n0.042\n\n\n0.059\n\n\n\n\n\n\n\n\n\nCodeRIdifFigure(df2, dif.sex)\n\n\n\n\n\n\n\nCodeRIdifFigThresh(df2, dif.sex)\n\n\n\n\n\n\n\nWhile no item shows problematic levels of DIF regarding item location, as shown by the table, there is an interesting pattern in the thresholds figure. The lowest threshold seems to be slightly lower for node 3 (Male) for all items.\nThe results do not require any action since the difference is small.\n\n5.2 Age\nThe psychotree package uses a model-based recursive partitioning that is particularly useful when you have a continuous variable such as age in years and a large enough sample. It will test different ways to partition the age variable to determine potential group differences (Strobl et al., 2015a, 2021).\n\nCodeRIdifTable(df2, dif.age)\n\n[1] \"No significant DIF found.\"\n\n\nNo DIF found for age.\n\n5.3 Group\n\nCodeRIdifTable(df2, dif.group)\n\n[1] \"No significant DIF found.\"\n\n\nAnd no DIF for group.\n\n5.4 Sex and age\nThe psychotree package also allows for DIF interaction analysis with multiple DIF variables. We can use RIdifTable2() to input two DIF variables.\n\nCodeRIdifTable2(df2, dif.sex, dif.age)\n\n\n\n\n\n\n\n\nItem\n\n\n2\n\n\n3\n\n\nMean location\n\n\nStDev\n\n\nMaxDiff\n\n\n\n\n\nPANAS_11\n\n\n-0.314\n\n\n-0.196\n\n\n-0.255\n\n\n0.083\n\n\n0.117\n\n\n\n\nPANAS_12\n\n\n0.028\n\n\n-0.044\n\n\n-0.008\n\n\n0.051\n\n\n0.073\n\n\n\n\nPANAS_13\n\n\n0.553\n\n\n0.402\n\n\n0.478\n\n\n0.107\n\n\n0.151\n\n\n\n\nPANAS_14\n\n\n-0.328\n\n\n-0.183\n\n\n-0.255\n\n\n0.103\n\n\n0.146\n\n\n\n\nPANAS_16\n\n\n0.004\n\n\n0.114\n\n\n0.059\n\n\n0.078\n\n\n0.111\n\n\n\n\nPANAS_17\n\n\n0.520\n\n\n0.290\n\n\n0.405\n\n\n0.163\n\n\n0.230\n\n\n\n\nPANAS_19\n\n\n-0.495\n\n\n-0.355\n\n\n-0.425\n\n\n0.099\n\n\n0.140\n\n\n\n\nPANAS_20\n\n\n0.032\n\n\n-0.028\n\n\n0.002\n\n\n0.042\n\n\n0.059\n\n\n\n\n\n\nNo interaction effect found for sex and age. The analysis only shows the previously identified DIF for sex.\n\n5.5 LRT-based DIF example\nAs of package version 0.1.16 there are four new functions for analyzing item location DIF. These are all making use of the function LRtest() from the eRm package. These functions have not yet been extensively tested and may have issues depending on the dataset. It seems that the DIF size indicated by this function may be inflated.\nWe’ll use the group variable as an example. First, we can simply run the test to get the overall result.\n\nCodeerm.out <- PCM(df2)\nLRtest(erm.out, splitcr = dif.group)\n\n\nAndersen LR-test: \nLR-value: 46.864 \nChi-square df: 31 \np-value:  0.034 \n\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\nItem location table\nItem location figure\nItem threshold table\nItem threshold figure\n\n\n\n\nCodeRIdifTableLR(df2, dif.group)\n\n\n\n\n\n\nItem locations\nStandard errors\n\n\n Item \n    Earlier Start \n    Later Start \n    MaxDiff \n    All \n    SE_Earlier Start \n    SE_Later Start \n    SE_All \n  \n\n\n\n PANAS_11 \n    -0.977 \n    -0.944 \n    0.033 \n    -0.953 \n    0.145 \n    0.130 \n    0.097 \n  \n\n PANAS_12 \n    0.208 \n    0.09 \n    0.118 \n    0.143 \n    0.149 \n    0.132 \n    0.098 \n  \n\n PANAS_13 \n    1.064 \n    1.457 \n    0.393 \n    1.266 \n    0.175 \n    0.180 \n    0.123 \n  \n\n PANAS_14 \n    -0.597 \n    -0.787 \n    0.19 \n    -0.701 \n    0.143 \n    0.126 \n    0.094 \n  \n\n PANAS_16 \n    0.415 \n    0.218 \n    0.197 \n    0.312 \n    0.154 \n    0.131 \n    0.100 \n  \n\n PANAS_17 \n    1.253 \n    1.547 \n    0.294 \n    1.423 \n    0.171 \n    0.161 \n    0.117 \n  \n\n PANAS_19 \n    -1.202 \n    -1.288 \n    0.086 \n    -1.254 \n    0.142 \n    0.125 \n    0.093 \n  \n\n PANAS_20 \n    -0.163 \n    -0.292 \n    0.129 \n    -0.235 \n    0.158 \n    0.139 \n    0.104 \n  \n\n\nNote: \n\n Values highlighted in red are above the chosen cutoff 0.5 logits. Background color brown and blue indicate the lowest and highest values among the DIF groups.\n\n\n\n\n\n\n\nCodeRIdifFigureLR(df2, dif.group) + theme_rise()\n\n\n\n\n\n\n\nCodeRIdifThreshTblLR(df2, dif.group)\n\n\n\n\n\n\nTreshold locations\nStandard errors\n\n\n Item threshold \n    Earlier Start \n    Later Start \n    MaxDiff \n    All \n    SE_Earlier Start \n    SE_Later Start \n    SE_All \n  \n\n\nPANAS_11\n\n c1 \n    -1.245 \n    -1.241 \n    0.004 \n    -1.240 \n    0.098 \n    0.094 \n    0.068 \n  \n\n c2 \n    -1.61 \n    -1.461 \n    0.149 \n    -1.524 \n    0.117 \n    0.111 \n    0.080 \n  \n\n c3 \n    -1.329 \n    -1.365 \n    0.036 \n    -1.343 \n    0.140 \n    0.123 \n    0.092 \n  \n\n c4 \n    0.275 \n    0.29 \n    0.015 \n    0.294 \n    0.224 \n    0.193 \n    0.146 \n  \nPANAS_12\n\n c1 \n    -0.484 \n    -0.362 \n    0.122 \n    -0.418 \n    0.092 \n    0.091 \n    0.065 \n  \n\n c2 \n    -0.243 \n    -0.56 \n    0.317 \n    -0.423 \n    0.125 \n    0.105 \n    0.080 \n  \n\n c3 \n    0.236 \n    -0.104 \n    0.34 \n    0.044 \n    0.159 \n    0.129 \n    0.100 \n  \n\n c4 \n    1.322 \n    1.385 \n    0.063 \n    1.367 \n    0.220 \n    0.201 \n    0.148 \n  \nPANAS_13\n\n c1 \n    -0.067 \n    0.23 \n    0.297 \n    0.093 \n    0.092 \n    0.089 \n    0.064 \n  \n\n c2 \n    0.336 \n    0.345 \n    0.009 \n    0.341 \n    0.129 \n    0.109 \n    0.083 \n  \n\n c3 \n    1.225 \n    1.388 \n    0.163 \n    1.325 \n    0.183 \n    0.158 \n    0.119 \n  \n\n c4 \n    2.761 \n    3.864 \n    1.103 \n    3.304 \n    0.294 \n    0.365 \n    0.225 \n  \nPANAS_14\n\n c1 \n    -1.017 \n    -0.972 \n    0.045 \n    -0.990 \n    0.095 \n    0.094 \n    0.066 \n  \n\n c2 \n    -1.151 \n    -1.244 \n    0.093 \n    -1.195 \n    0.118 \n    0.109 \n    0.080 \n  \n\n c3 \n    -0.694 \n    -1.149 \n    0.455 \n    -0.956 \n    0.148 \n    0.123 \n    0.094 \n  \n\n c4 \n    0.473 \n    0.217 \n    0.256 \n    0.338 \n    0.210 \n    0.178 \n    0.135 \n  \nPANAS_16\n\n c1 \n    -0.156 \n    -0.25 \n    0.094 \n    -0.202 \n    0.097 \n    0.091 \n    0.066 \n  \n\n c2 \n    -0.147 \n    -0.34 \n    0.193 \n    -0.248 \n    0.123 \n    0.108 \n    0.081 \n  \n\n c3 \n    0.177 \n    0.013 \n    0.164 \n    0.095 \n    0.149 \n    0.129 \n    0.098 \n  \n\n c4 \n    1.787 \n    1.449 \n    0.338 \n    1.604 \n    0.245 \n    0.197 \n    0.153 \n  \nPANAS_17\n\n c1 \n    0.264 \n    0.368 \n    0.104 \n    0.324 \n    0.097 \n    0.089 \n    0.066 \n  \n\n c2 \n    0.653 \n    0.789 \n    0.136 \n    0.736 \n    0.136 \n    0.119 \n    0.089 \n  \n\n c3 \n    1.457 \n    1.744 \n    0.287 \n    1.630 \n    0.187 \n    0.168 \n    0.125 \n  \n\n c4 \n    2.639 \n    3.289 \n    0.65 \n    3.003 \n    0.264 \n    0.269 \n    0.188 \n  \nPANAS_19\n\n c1 \n    -1.339 \n    -1.263 \n    0.076 \n    -1.297 \n    0.100 \n    0.098 \n    0.070 \n  \n\n c2 \n    -1.727 \n    -1.533 \n    0.194 \n    -1.621 \n    0.120 \n    0.116 \n    0.083 \n  \n\n c3 \n    -1.626 \n    -1.866 \n    0.24 \n    -1.763 \n    0.137 \n    0.120 \n    0.090 \n  \n\n c4 \n    -0.115 \n    -0.489 \n    0.374 \n    -0.334 \n    0.211 \n    0.168 \n    0.131 \n  \nPANAS_20\n\n c1 \n    -0.906 \n    -0.877 \n    0.029 \n    -0.887 \n    0.093 \n    0.090 \n    0.065 \n  \n\n c2 \n    -1.095 \n    -1.134 \n    0.039 \n    -1.110 \n    0.113 \n    0.104 \n    0.076 \n  \n\n c3 \n    -0.058 \n    -0.55 \n    0.492 \n    -0.350 \n    0.165 \n    0.130 \n    0.101 \n  \n\n c4 \n    1.405 \n    1.391 \n    0.014 \n    1.406 \n    0.260 \n    0.234 \n    0.174 \n  \n\n\nNote: \n\n Values highlighted in red are above the chosen cutoff 0.5 logits. Background color brown and blue indicate the lowest and highest values among the DIF groups.\n\n\n\n\n\n\n\nCodeRIdifThreshFigLR(df2, dif.group) + theme_rise()\n\n\n\n\n\n\n\nThe item threshold table shows that the highest thresholds for items 13 and 17 differ more than 0.5 logits between groups. In this set of 8 items with 4 thresholds each, it is unlikely to result in problematic differences in estimated person scores."
  },
  {
    "objectID": "SkolverketAPI/skolverketapi.html",
    "href": "SkolverketAPI/skolverketapi.html",
    "title": "Data retrieval with R using API calls",
    "section": "",
    "text": "This is a post documenting explorative work to retrieve data using the database API maintained Swedish National Agency for Education. The conditions for using the API and database are described in the CC0 1.0 license. The API is documented here: https://api.skolverket.se/skolenhetsregistret/swagger-ui/index.html.\n\n\n\n\n\n\nNote\n\n\n\nPlease note that this is just documentation of our work, not a guide. There will be mistakes and suboptimal routes taken. But in the end I hope we will produce something that may be useful to others. Not everyone will be interested in using the API for the same purpose as we had, so hopefully our troubleshooting will make the potential use wider.\n\n\nA lot of the output will be in Swedish, but you will probably be able to follow along even if your Swedish knowledge is limited. Basic word list:\n\nschool = skola\nschool unit code = Skolenhetskod\n\nThe purpose of this is two-fold. First, various kinds of data on school and municipality levels are of interest in the project “Data in dialogue”. Second, in order to conduct analysis of missing data and selection bias we need demographic data about students at the schools participating in school surveys that are used to assess risk and protective factors.\n\n\n\n\n\n\nNote\n\n\n\nWhile this blog post is written by me (Magnus), a lot of the initial trial and error work was done by my colleague Jens Mattsson."
  },
  {
    "objectID": "SkolverketAPI/skolverketapi.html#setting-up",
    "href": "SkolverketAPI/skolverketapi.html#setting-up",
    "title": "Data retrieval with R using API calls",
    "section": "\n2 Setting up",
    "text": "2 Setting up\n\nCodelibrary(httr)\nlibrary(arrow)\nlibrary(tidyverse)\nlibrary(rjson)\nlibrary(jsonlite)\nlibrary(glue)\nlibrary(readxl)\n\n\nFirst, let’s get a list of municipalities and their codes. The first two numbers in the four number code denotes the region. Sweden has 290 municipalities and 21 regions. For this project, we are interested in the regions of Stockholm and Uppsala, which have codes 01 and 03.\n\nCodemunicipalities <- read_parquet(\"2023-03-28_KOLADA_Municipality_list.parquet\") %>% \n  filter(str_detect(id, \"^01|^03\")) %>% \n  select(!type)\n\nglimpse(municipalities)\n\nRows: 34\nColumns: 2\n$ id    <chr> \"0127\", \"0162\", \"0125\", \"0381\", \"0136\", \"0331\", \"0126\", \"0305\", …\n$ title <chr> \"Botkyrka\", \"Danderyd\", \"Ekerö\", \"Enköping\", \"Haninge\", \"Heby\", …"
  },
  {
    "objectID": "SkolverketAPI/skolverketapi.html#getting-data-for-one-municipality",
    "href": "SkolverketAPI/skolverketapi.html#getting-data-for-one-municipality",
    "title": "Data retrieval with R using API calls",
    "section": "\n3 Getting data for one municipality",
    "text": "3 Getting data for one municipality\nLooking at the specifications of the API, we should be able to get all schools in a municipality by doing a call according to /v1/kommun/{municipalityCode}. Unfortunately, the API does not seem to allow making one call for multiple municipalities. The base URL is https://api.skolverket.se/skolenhetsregistret.\nWe’ll start by getting data from one municipality.\n\nCodedata <- GET(\"https://api.skolverket.se/skolenhetsregistret/v1/kommun/0127\") %>% \n  content(\"text\") %>% \n  fromJSON()\n\nglimpse(data)\n\nList of 3\n $ Uttagsdatum: chr \"2023-07-17T10:06:08.3666049+02:00\"\n $ Fotnot     : NULL\n $ Skolenheter:'data.frame':    66 obs. of  5 variables:\n  ..$ Skolenhetskod : chr [1:66] \"98152284\" \"84411355\" \"82464552\" \"16762245\" ...\n  ..$ Kommunkod     : chr [1:66] \"0127\" \"0127\" \"0127\" \"0127\" ...\n  ..$ PeOrgNr       : chr [1:66] \"2120002882\" \"5565661815\" \"5562575786\" \"8024242391\" ...\n  ..$ Skolenhetsnamn: chr [1:66] \"Blåklintskolan särskola\" \"Kunskapsskolan Tumba\" \"Praktiska Tumba\" \"Edessaskolan\" ...\n  ..$ Status        : chr [1:66] \"Vilande\" \"Aktiv\" \"Vilande\" \"Aktiv\" ...\n\n\nWe get a list of 3, where the data of interest seems to be within the nested dataframe $Skolenheter. Let’s subset that into its own dataframe object.\n\nCodeschools <- data$Skolenheter\nglimpse(schools)\n\nRows: 66\nColumns: 5\n$ Skolenhetskod  <chr> \"98152284\", \"84411355\", \"82464552\", \"16762245\", \"751689…\n$ Kommunkod      <chr> \"0127\", \"0127\", \"0127\", \"0127\", \"0127\", \"0127\", \"0127\",…\n$ PeOrgNr        <chr> \"2120002882\", \"5565661815\", \"5562575786\", \"8024242391\",…\n$ Skolenhetsnamn <chr> \"Blåklintskolan särskola\", \"Kunskapsskolan Tumba\", \"Pra…\n$ Status         <chr> \"Vilande\", \"Aktiv\", \"Vilande\", \"Aktiv\", \"Vilande\", \"Akt…\n\n\nNow, this is just a list of schools and their unit codes (schools$Skolenhetskod), it contains no data. But we need this list to know which school unit codes to retrieve data for. There is also a Status variable which seems to have the options of active or not.\n\nCodeschools %>% \n  count(Status)\n\n    Status  n\n1    Aktiv 47\n2 Planerad  2\n3  Vilande 17\n\n\nThere was also a third option for “planned”. Not sure how to use this information at this point.\n\n3.1 Data from one school\nWe’ll retrieve data for one school first.\n\nCodesdata <- GET(\"https://api.skolverket.se/skolenhetsregistret/v1/skolenhet/84411355\") %>% \n  content(\"text\") %>% \n  fromJSON()\n\nglimpse(sdata)\n\nList of 3\n $ Uttagsdatum  : chr \"2023-07-17T02:15:09.2287954+02:00\"\n $ Fotnot       : NULL\n $ SkolenhetInfo:List of 19\n  ..$ Namn               : chr \"Kunskapsskolan Tumba\"\n  ..$ Rektorsnamn        : chr \"Henrik von Knorring\"\n  ..$ Skolenhetskod      : chr \"84411355\"\n  ..$ Epost              : chr \"info.tumba@kunskapsskolan.se\"\n  ..$ Telefon            : chr \"0733-173445\"\n  ..$ Webbadress         : chr \"https://www.kunskapsskolan.se\"\n  ..$ Besoksadress       :List of 4\n  .. ..$ Adress : chr \"Hans Stahles väg 17\"\n  .. ..$ Postnr : chr \"14741\"\n  .. ..$ Ort    : chr \"Tumba\"\n  .. ..$ GeoData:List of 5\n  ..$ Leveransadress     :List of 3\n  .. ..$ Adress: chr \"Hans Stahles väg 17\"\n  .. ..$ Postnr: chr \"14741\"\n  .. ..$ Ort   : chr \"Tumba\"\n  ..$ Utdelningsadress   :List of 3\n  .. ..$ Adress: chr \"Hans Stahles väg 17\"\n  .. ..$ Postnr: chr \"14741\"\n  .. ..$ Ort   : chr \"Tumba\"\n  ..$ Inriktningstyp     : chr \"Allmän\"\n  ..$ Skolenhetstyp      : chr \"Skolenhet\"\n  ..$ SkolaNamn          : chr \"Kunskapsskolan Tumba\"\n  ..$ Skolformer         :'data.frame': 1 obs. of  15 variables:\n  .. ..$ type        : chr \"Grundskola\"\n  .. ..$ Benamning   : chr \"Grundskola\"\n  .. ..$ SkolformID  : int 5\n  .. ..$ SkolformKod : chr \"11\"\n  .. ..$ Ak1         : logi FALSE\n  .. ..$ Ak2         : logi FALSE\n  .. ..$ Ak3         : logi FALSE\n  .. ..$ Ak4         : logi TRUE\n  .. ..$ Ak5         : logi TRUE\n  .. ..$ Ak6         : logi TRUE\n  .. ..$ Ak7         : logi TRUE\n  .. ..$ Ak8         : logi TRUE\n  .. ..$ Ak9         : logi TRUE\n  .. ..$ Resursskola : logi FALSE\n  .. ..$ Sjukhusskola: logi FALSE\n  ..$ Kommun             :List of 2\n  .. ..$ Kommunkod: chr \"0127\"\n  .. ..$ Namn     : chr \"Botkyrka\"\n  ..$ Huvudman           :List of 3\n  .. ..$ PeOrgNr: chr \"5565661815\"\n  .. ..$ Namn   : chr \"Kunskapsskolan i Sverige Aktiebolag\"\n  .. ..$ Typ    : chr \"Enskild\"\n  ..$ Skolenhet_ValidFrom: chr \"2022-09-07T00:00:00\"\n  ..$ Status             : chr \"Aktiv\"\n  ..$ Startdatum         : chr \"2013-10-01\"\n  ..$ Nedlaggningsdatum  : NULL\n\n\nThis provides a lot of information about the school itself, which can be useful. There is also a version 3 of the API, which contains more information:\n\nCodesdataV3 <- GET(\"https://api.skolverket.se/planned-educations/v3/school-units/84411355\") %>% \n  content(\"text\") %>% \n  fromJSON()\n\nglimpse(sdataV3)\n\nList of 3\n $ status : chr \"OK\"\n $ message: chr \"\"\n $ body   :List of 16\n  ..$ code                      : chr \"84411355\"\n  ..$ name                      : chr \"Kunskapsskolan Tumba\"\n  ..$ contactInfo               :List of 4\n  .. ..$ email    : NULL\n  .. ..$ web      : chr \"https://www.kunskapsskolan.se\"\n  .. ..$ telephone: chr \"0733-173445\"\n  .. ..$ addresses:'data.frame':    2 obs. of  4 variables:\n  ..$ geographicalAreaCode      : chr \"0127\"\n  ..$ wgs84_Lat                 : chr \"59.20011169538554\"\n  ..$ wgs84_Long                : chr \"17.846722627859616\"\n  ..$ sweRef_N                  : chr \"6565805\"\n  ..$ sweRef_E                  : chr \"662569\"\n  ..$ organisationRegistryNumber: chr \"5565661815\"\n  ..$ principalOrganizerType    : chr \"Fristående\"\n  ..$ corporationName           : chr \"Kunskapsskolan i Sverige Aktiebolag\"\n  ..$ companyForm               : chr \"Övriga aktiebolag\"\n  ..$ schoolOrientation         : chr \"Allmän\"\n  ..$ typeOfSchooling           :'data.frame':  1 obs. of  3 variables:\n  .. ..$ code       : chr \"gr\"\n  .. ..$ displayName: chr \"Grundskolan\"\n  .. ..$ schoolYears:List of 1\n  ..$ abroadSchool              : logi FALSE\n  ..$ _links                    :List of 2\n  .. ..$ self      :List of 1\n  .. ..$ statistics:List of 1\n\n\nCan we find statistics for the school?\n\nCodetest <- GET(\"https://api.skolverket.se/planned-educations/v3/school-units/84411355/statistics\") %>% \n  content(\"text\") %>% \n  fromJSON()\n\nglimpse(test)\n\nList of 3\n $ status : chr \"OK\"\n $ message: chr \"\"\n $ body   :List of 1\n  ..$ _links:List of 2\n  .. ..$ gr-statistics:List of 1\n  .. ..$ self         :List of 1\n\n\nNo data, but some clues:\n\nCodetest$body$`_links`$`gr-statistics`\n\n$href\n[1] \"https://api.skolverket.se/planned-educations/v3/school-units/84411355/statistics/gr\"\n\n\nWe’ll try that URL.\n\nCodetest <- GET(\"https://api.skolverket.se/planned-educations/v3/school-units/84411355/statistics/gr\") %>% \n  content(\"text\") %>% \n  fromJSON()\n\nglimpse(test)\n\nList of 3\n $ status : chr \"OK\"\n $ message: chr \"\"\n $ body   :List of 24\n  ..$ schoolUnit                                           : chr \"84411355\"\n  ..$ specialTeacherPositions                              :'data.frame':   5 obs. of  3 variables:\n  .. ..$ value     : chr [1:5] \".\" \".\" \".\" \".\" ...\n  .. ..$ valueType : chr [1:5] \"MISSING\" \"MISSING\" \"MISSING\" \"MISSING\" ...\n  .. ..$ timePeriod: chr [1:5] \"2022/23\" \"2021/22\" \"2020/21\" \"2019/20\" ...\n  ..$ studentsPerTeacherQuota                              :'data.frame':   5 obs. of  3 variables:\n  .. ..$ value     : chr [1:5] \"15,5\" \"14,8\" \"16,6\" \"16,3\" ...\n  .. ..$ valueType : chr [1:5] \"EXISTS\" \"EXISTS\" \"EXISTS\" \"EXISTS\" ...\n  .. ..$ timePeriod: chr [1:5] \"2022/23\" \"2021/22\" \"2020/21\" \"2019/20\" ...\n  ..$ certifiedTeachersQuota                               :'data.frame':   5 obs. of  3 variables:\n  .. ..$ value     : chr [1:5] \"67,4\" \"60,9\" \"56,2\" \"47,0\" ...\n  .. ..$ valueType : chr [1:5] \"EXISTS\" \"EXISTS\" \"EXISTS\" \"EXISTS\" ...\n  .. ..$ timePeriod: chr [1:5] \"2022/23\" \"2021/22\" \"2020/21\" \"2019/20\" ...\n  ..$ docLinks                                             : NULL\n  ..$ hasLibrary                                           : logi FALSE\n  ..$ specialEducatorsQuota                                :'data.frame':   5 obs. of  3 variables:\n  .. ..$ value     : chr [1:5] \".\" \".\" \".\" \".\" ...\n  .. ..$ valueType : chr [1:5] \"MISSING\" \"MISSING\" \"MISSING\" \"MISSING\" ...\n  .. ..$ timePeriod: chr [1:5] \"2022/23\" \"2021/22\" \"2020/21\" \"2019/20\" ...\n  ..$ totalNumberOfPupils                                  :'data.frame':   1 obs. of  3 variables:\n  .. ..$ value     : chr \"cirka 370\"\n  .. ..$ valueType : chr \"EXISTS\"\n  .. ..$ timePeriod: chr \"2022/23\"\n  ..$ ratioOfPupilsIn6thGradeWithAllSubjectsPassed         :'data.frame':   1 obs. of  3 variables:\n  .. ..$ value     : chr \"61,0\"\n  .. ..$ valueType : chr \"EXISTS\"\n  .. ..$ timePeriod: chr \"2021/22\"\n  ..$ averageResultNationalTestsSubjectSVE6thGrade         :'data.frame':   3 obs. of  3 variables:\n  .. ..$ value     : chr [1:3] \"13,4\" \"14,4\" \"13,6\"\n  .. ..$ valueType : chr [1:3] \"EXISTS\" \"EXISTS\" \"EXISTS\"\n  .. ..$ timePeriod: chr [1:3] \"2021/22\" \"2018/19\" \"2017/18\"\n  ..$ averageResultNationalTestsSubjectENG6thGrade         :'data.frame':   3 obs. of  3 variables:\n  .. ..$ value     : chr [1:3] \"16,0\" \"15,8\" \"15,4\"\n  .. ..$ valueType : chr [1:3] \"EXISTS\" \"EXISTS\" \"EXISTS\"\n  .. ..$ timePeriod: chr [1:3] \"2021/22\" \"2018/19\" \"2017/18\"\n  ..$ averageResultNationalTestsSubjectMA6thGrade          :'data.frame':   3 obs. of  3 variables:\n  .. ..$ value     : chr [1:3] \"9,5\" \"10,9\" \"12,4\"\n  .. ..$ valueType : chr [1:3] \"EXISTS\" \"EXISTS\" \"EXISTS\"\n  .. ..$ timePeriod: chr [1:3] \"2021/22\" \"2018/19\" \"2017/18\"\n  ..$ averageResultNationalTestsSubjectSVA6thGrade         :'data.frame':   3 obs. of  3 variables:\n  .. ..$ value     : chr [1:3] \"10,2\" \"..\" \"..\"\n  .. ..$ valueType : chr [1:3] \"EXISTS\" \"OMITTED_DUE_TO_BASED_ON_FEW_PUPILS\" \"OMITTED_DUE_TO_BASED_ON_FEW_PUPILS\"\n  .. ..$ timePeriod: chr [1:3] \"2021/22\" \"2018/19\" \"2017/18\"\n  ..$ averageResultNationalTestsSubjectSVE9thGrade         :'data.frame':   3 obs. of  3 variables:\n  .. ..$ value     : chr [1:3] \"14,4\" \"15,4\" \"14,5\"\n  .. ..$ valueType : chr [1:3] \"EXISTS\" \"EXISTS\" \"EXISTS\"\n  .. ..$ timePeriod: chr [1:3] \"2021/22\" \"2018/19\" \"2017/18\"\n  ..$ averageResultNationalTestsSubjectENG9thGrade         :'data.frame':   3 obs. of  3 variables:\n  .. ..$ value     : chr [1:3] \"17,1\" \"16,1\" \"15,1\"\n  .. ..$ valueType : chr [1:3] \"EXISTS\" \"EXISTS\" \"EXISTS\"\n  .. ..$ timePeriod: chr [1:3] \"2021/22\" \"2018/19\" \"2017/18\"\n  ..$ averageResultNationalTestsSubjectMA9thGrade          :'data.frame':   3 obs. of  3 variables:\n  .. ..$ value     : chr [1:3] \"12,1\" \"11,9\" \".\"\n  .. ..$ valueType : chr [1:3] \"EXISTS\" \"EXISTS\" \"MISSING\"\n  .. ..$ timePeriod: chr [1:3] \"2021/22\" \"2018/19\" \"2017/18\"\n  ..$ averageResultNationalTestsSubjectSVA9thGrade         :'data.frame':   3 obs. of  3 variables:\n  .. ..$ value     : chr [1:3] \"14,6\" \"15,3\" \"13,6\"\n  .. ..$ valueType : chr [1:3] \"EXISTS\" \"EXISTS\" \"EXISTS\"\n  .. ..$ timePeriod: chr [1:3] \"2021/22\" \"2018/19\" \"2017/18\"\n  ..$ ratioOfPupilsIn9thGradeWithAllSubjectsPassed         :'data.frame':   5 obs. of  3 variables:\n  .. ..$ value     : chr [1:5] \"85,2\" \"89,5\" \"90,2\" \"75,0\" ...\n  .. ..$ valueType : chr [1:5] \"EXISTS\" \"EXISTS\" \"EXISTS\" \"EXISTS\" ...\n  .. ..$ timePeriod: chr [1:5] \"2021/22\" \"2020/21\" \"2019/20\" \"2018/19\" ...\n  ..$ averageGradesMeritRating9thGrade                     :'data.frame':   5 obs. of  3 variables:\n  .. ..$ value     : chr [1:5] \"254,8\" \"261,5\" \"272,3\" \"249,0\" ...\n  .. ..$ valueType : chr [1:5] \"EXISTS\" \"EXISTS\" \"EXISTS\" \"EXISTS\" ...\n  .. ..$ timePeriod: chr [1:5] \"2021/22\" \"2020/21\" \"2019/20\" \"2018/19\" ...\n  ..$ ratioOfPupils9thGradeEligibleForNationalProgramYR    :'data.frame':   5 obs. of  3 variables:\n  .. ..$ value     : chr [1:5] \"93,8\" \"~100\" \"~100\" \"91,7\" ...\n  .. ..$ valueType : chr [1:5] \"EXISTS\" \"ROUNDED_OFF_DUE_TO_FEW_PUPILS_NOT_ELIGIBLE\" \"ROUNDED_OFF_DUE_TO_FEW_PUPILS_NOT_ELIGIBLE\" \"EXISTS\" ...\n  .. ..$ timePeriod: chr [1:5] \"2021/22\" \"2020/21\" \"2019/20\" \"2018/19\" ...\n  ..$ ratioOfPupils9thGradeEligibleForNationalProgramES    :'data.frame':   5 obs. of  3 variables:\n  .. ..$ value     : chr [1:5] \"92,6\" \"94,7\" \"~100\" \"90,5\" ...\n  .. ..$ valueType : chr [1:5] \"EXISTS\" \"EXISTS\" \"ROUNDED_OFF_DUE_TO_FEW_PUPILS_NOT_ELIGIBLE\" \"EXISTS\" ...\n  .. ..$ timePeriod: chr [1:5] \"2021/22\" \"2020/21\" \"2019/20\" \"2018/19\" ...\n  ..$ ratioOfPupils9thGradeEligibleForNationalProgramSAEKHU:'data.frame':   5 obs. of  3 variables:\n  .. ..$ value     : chr [1:5] \"91,4\" \"93,7\" \"~100\" \"82,1\" ...\n  .. ..$ valueType : chr [1:5] \"EXISTS\" \"EXISTS\" \"ROUNDED_OFF_DUE_TO_FEW_PUPILS_NOT_ELIGIBLE\" \"EXISTS\" ...\n  .. ..$ timePeriod: chr [1:5] \"2021/22\" \"2020/21\" \"2019/20\" \"2018/19\" ...\n  ..$ ratioOfPupils9thGradeEligibleForNationalProgramNATE  :'data.frame':   5 obs. of  3 variables:\n  .. ..$ value     : chr [1:5] \"88,9\" \"94,7\" \"91,8\" \"86,9\" ...\n  .. ..$ valueType : chr [1:5] \"EXISTS\" \"EXISTS\" \"EXISTS\" \"EXISTS\" ...\n  .. ..$ timePeriod: chr [1:5] \"2021/22\" \"2020/21\" \"2019/20\" \"2018/19\" ...\n  ..$ _links                                               :List of 1\n  .. ..$ self:List of 1\n\n\nIt seems like we need to specify the type of school to retrieve the stats. In this case, “gr” for “grundskola”, which corresponds to classes 1-9 in Sweden (ages ~ 7-15).\n\n3.2 Data wrangling\nSome data wrangling will be needed to get the list() format data into a dataframe that can be used as a template for downloading and merging data for all schools we are interested in.\n\nCodestats <- test$body %>% \n  pluck(\"ratioOfPupils9thGradeEligibleForNationalProgramNATE\")\n\n\nSo that works to get one list out. Now let’s do all that contain a variable named value and get them in a single dataframe. A relatively simple way to do this (in the current data) is to filter the list elements that contain more than one value.\n\nCodevars <- which(sapply(test$body, function(x) length(x) > 1))\nnames(vars)\n\n [1] \"specialTeacherPositions\"                              \n [2] \"studentsPerTeacherQuota\"                              \n [3] \"certifiedTeachersQuota\"                               \n [4] \"specialEducatorsQuota\"                                \n [5] \"totalNumberOfPupils\"                                  \n [6] \"ratioOfPupilsIn6thGradeWithAllSubjectsPassed\"         \n [7] \"averageResultNationalTestsSubjectSVE6thGrade\"         \n [8] \"averageResultNationalTestsSubjectENG6thGrade\"         \n [9] \"averageResultNationalTestsSubjectMA6thGrade\"          \n[10] \"averageResultNationalTestsSubjectSVA6thGrade\"         \n[11] \"averageResultNationalTestsSubjectSVE9thGrade\"         \n[12] \"averageResultNationalTestsSubjectENG9thGrade\"         \n[13] \"averageResultNationalTestsSubjectMA9thGrade\"          \n[14] \"averageResultNationalTestsSubjectSVA9thGrade\"         \n[15] \"ratioOfPupilsIn9thGradeWithAllSubjectsPassed\"         \n[16] \"averageGradesMeritRating9thGrade\"                     \n[17] \"ratioOfPupils9thGradeEligibleForNationalProgramYR\"    \n[18] \"ratioOfPupils9thGradeEligibleForNationalProgramES\"    \n[19] \"ratioOfPupils9thGradeEligibleForNationalProgramSAEKHU\"\n[20] \"ratioOfPupils9thGradeEligibleForNationalProgramNATE\"  \n\n\nThen we can bind them together.\n\nCode# create empty dataframe to store output of loop in\ndf_total <- data.frame()\n\nfor (i in names(vars)){\n  tmp <- test$body %>% \n    pluck(i) %>% \n    add_column(variable = i)\n  df_total <- rbind(df_total,tmp)\n}\n\nglimpse(df_total)\n\nRows: 76\nColumns: 4\n$ value      <chr> \".\", \".\", \".\", \".\", \".\", \"15,5\", \"14,8\", \"16,6\", \"16,3\", \"1…\n$ valueType  <chr> \"MISSING\", \"MISSING\", \"MISSING\", \"MISSING\", \"MISSING\", \"EXI…\n$ timePeriod <chr> \"2022/23\", \"2021/22\", \"2020/21\", \"2019/20\", \"2018/19\", \"202…\n$ variable   <chr> \"specialTeacherPositions\", \"specialTeacherPositions\", \"spec…\n\n\nLooks good, although there will probably be a lot of recoding needed later.\n\n3.3 Getting data from multiple schools\nSince the API demands that we specify the type of school in the API call, we need to add this information to the list of schools. This means that we first need to retrieve the basic information for each school.\n\nCodesdataV3 <- GET(\"https://api.skolverket.se/planned-educations/v3/school-units/84411355\") %>% \n  content(\"text\") %>% \n  fromJSON()\n\nsdataV3$body$typeOfSchooling$code\n\n[1] \"gr\"\n\n\nSo that is where we find the type code for each school.\n\n3.3.1 Check if all schools have data in the database.\n\nCodeschoolsAvailable <- data.frame()\nfor (i in schools$Skolenhetskod) {\n  tmp <- http_status(GET(paste0(\"https://api.skolverket.se/planned-educations/v3/school-units/\", i))) %>%\n    pluck(\"reason\") %>%\n    as.data.frame(nm = \"status\") %>%\n    add_column(Skolenhetskod = i)\n  schoolsAvailable <- rbind(schoolsAvailable, tmp)\n}\n\nschoolsAvailable %>% \n  count(status)\n\n     status  n\n1 Not Found 14\n2        OK 52\n\n\n14 schools are not in the database and need to be removed from the list of schools before we retrieve data. Maybe they match up with the Status variable?\n\nCodeschools %>% \n  left_join(.,schoolsAvailable, by = \"Skolenhetskod\") %>% \n  filter(!status == \"OK\")\n\n   Skolenhetskod Kommunkod    PeOrgNr                       Skolenhetsnamn\n1       98152284      0127 2120002882              Blåklintskolan särskola\n2       82464552      0127 5562575786                      Praktiska Tumba\n3       75168956      0127 2120002882                      Borggruppen 1GR\n4       34165541      0127 8020170026              Stockholms Folkhögskola\n5       30755074      0127 2120002882                  Björkhaga Skola 1GR\n6       66301878      0127 2120002882         Enheten för språk och kultur\n7       96827136      0127 5566446224                       Gryningeskolan\n8       58395177      0127 2120002882 S:t Botvids gymnasiums mottagarenhet\n9       60492213      0127 2120002882                         Språkcentrum\n10      43096141      0127 8024030119            Botkyrka Folkhögskola SFI\n11      20171551      0127 2120002882          Tallidsskolan träningsskola\n12      75727919      0127 5590247374                 Lumiaskolan Botkyrka\n13      26480061      0127 5566139290              Thoren Framtid Botkyrka\n14      81020581      0127 2120002882           Borgskolan F-klass Gul 1GR\n     Status    status\n1   Vilande Not Found\n2   Vilande Not Found\n3   Vilande Not Found\n4   Vilande Not Found\n5   Vilande Not Found\n6   Vilande Not Found\n7   Vilande Not Found\n8   Vilande Not Found\n9   Vilande Not Found\n10  Vilande Not Found\n11  Vilande Not Found\n12 Planerad Not Found\n13 Planerad Not Found\n14  Vilande Not Found\n\n\nIndeed, but not a perfect match, since the numbers don’t add up when compared to this:\n\nCodeschools %>% \n  count(Status)\n\n    Status  n\n1    Aktiv 47\n2 Planerad  2\n3  Vilande 17\n\n\nProceeding to remove schools unavailable in database.\n\nCodeschoolsFiltered <- schools %>% \n  left_join(.,schoolsAvailable, by = \"Skolenhetskod\") %>% \n  filter(status == \"OK\") %>% \n  select(!status)\n\nschoolTypes <- data.frame()\n\nfor (i in schoolsFiltered$Skolenhetskod) {\n  \n  tmp <- GET(paste0(\"https://api.skolverket.se/planned-educations/v3/school-units/\", i)) %>% \n    content(\"text\") %>% \n    fromJSON()\n  tmp2 <- data.frame(\n    type = tmp$body$typeOfSchooling$code,\n    Skolenhetskod = i)\n                     \n  schoolTypes <- rbind(schoolTypes,tmp2)\n}\n  \nglimpse(schoolTypes)\n\nRows: 82\nColumns: 2\n$ type          <chr> \"gr\", \"fsk\", \"gr\", \"fsk\", \"gr\", \"gy\", \"gy\", \"gy\", \"fsk\",…\n$ Skolenhetskod <chr> \"84411355\", \"16762245\", \"16762245\", \"29524966\", \"2952496…\n\n\nHmm. We have 82 schools now, rather than 52. Maybe some schools have multiple types?\n\nCodeschoolTypes %>% \n  count(Skolenhetskod) %>% \n  filter(n > 1)\n\n   Skolenhetskod n\n1       10495223 2\n2       10657244 2\n3       15620768 2\n4       16762245 2\n5       18534178 2\n6       25506439 2\n7       25918983 2\n8       29524966 2\n9       36350546 2\n10      38661388 2\n11      40631085 2\n12      43238662 2\n13      45757947 2\n14      51863294 2\n15      53426548 2\n16      56417100 2\n17      57228484 2\n18      57850353 2\n19      58310322 2\n20      67742754 2\n21      71048800 2\n22      75580959 2\n23      80378022 3\n24      80731562 2\n25      84891659 2\n26      86192571 2\n27      86985859 2\n28      96113241 3\n\n\n\n3.3.2 Data retrieval\nSince we have two variables to loop over, we could use a nested for() loop, but we could also use map2() to retrieve data for all schools.\n\nCodeschoolData <- map2(\n  .x = schoolTypes$Skolenhetskod,\n  .y = schoolTypes$type,\n  ~ GET(paste0(\"https://api.skolverket.se/planned-educations/v3/school-units/\", .x,\"/statistics/\", .y)) %>%\n    content(\"text\") %>%\n    fromJSON()\n)\n\n\n\n3.4 Unnesting multiple lists\nNext step is to get each schools data from a list element to a dataframe, and then combine all of them. We already did the first part for one school, so let’s expand on that.\nWe’ll define a function to get the data from one school.\n\nCodeoneSchool <- function(listN) {\n  schoolUnit <- schoolData[[listN]]$body$schoolUnit\n  df_total <- data.frame()\n\n  for (i in names(vars)) {\n    tmp <- schoolData[[listN]]$body %>%\n      pluck(i) %>%\n      add_column(variable = i,\n                 Skolenhetskod = schoolUnit)\n    df_total <- rbind(df_total, tmp)\n  }\n  return(df_total)\n}\n\n\nTest the function.\n\nCodeoneSchool(1) %>% \n  head(10)\n\n   value valueType timePeriod                variable Skolenhetskod\n1      .   MISSING    2022/23 specialTeacherPositions      84411355\n2      .   MISSING    2021/22 specialTeacherPositions      84411355\n3      .   MISSING    2020/21 specialTeacherPositions      84411355\n4      .   MISSING    2019/20 specialTeacherPositions      84411355\n5      .   MISSING    2018/19 specialTeacherPositions      84411355\n6   15,5    EXISTS    2022/23 studentsPerTeacherQuota      84411355\n7   14,8    EXISTS    2021/22 studentsPerTeacherQuota      84411355\n8   16,6    EXISTS    2020/21 studentsPerTeacherQuota      84411355\n9   16,3    EXISTS    2019/20 studentsPerTeacherQuota      84411355\n10  15,3    EXISTS    2018/19 studentsPerTeacherQuota      84411355\n\n\nLooks good.\n\nCodenestedOutput <- map(c(1:length(schoolData)), ~ oneSchool(.x))\n\n\nThis fails at index 2. (Code is not run since it won’t allow the output to be rendered)\n\n3.5 Troubleshooting\n\nCodeschoolData[[2]]$body\n\n$schoolUnit\n[1] \"16762245\"\n\n$specialTeacherPositions\n  value valueType timePeriod\n1     .   MISSING    2022/23\n2     .   MISSING    2021/22\n3     .   MISSING    2020/21\n4     .   MISSING    2019/20\n5     .   MISSING    2018/19\n\n$studentsPerTeacherQuota\n  value valueType timePeriod\n1  13,0    EXISTS    2022/23\n2  11,0    EXISTS    2021/22\n3  12,0    EXISTS    2020/21\n4  12,0    EXISTS    2019/20\n5  13,7    EXISTS    2018/19\n\n$certifiedTeachersQuota\n  value valueType timePeriod\n1   0,0    EXISTS    2022/23\n2   0,0    EXISTS    2021/22\n3  50,0    EXISTS    2020/21\n4  50,0    EXISTS    2019/20\n5  57,1    EXISTS    2018/19\n\n$docLinks\nNULL\n\n$hasLibrary\n[1] FALSE\n\n$totalNumberOfPupils\n     value valueType timePeriod\n1 cirka 30    EXISTS    2022/23\n\n$`_links`\n$`_links`$self\n$`_links`$self$href\n[1] \"https://api.skolverket.se/planned-educations/v3/school-units/16762245/statistics/fsk\"\n\n\nLooks like not all schools have the same data variables. We’ll have to work that into the function\n\nCodeoneSchool <- function(listN) {\n  schoolUnit <- schoolData[[listN]]$body$schoolUnit\n  vars <- which(sapply(schoolData[[listN]]$body, function(x) length(x) > 1))\n  df_total <- data.frame()\n\n  for (i in names(vars)) {\n    tmp <- schoolData[[listN]]$body %>%\n      pluck(i) %>%\n      add_column(variable = i,\n                 Skolenhetskod = schoolUnit)\n    df_total <- rbind(df_total, tmp)\n  }\n  return(df_total)\n}\n\n\n\nCodenestedOutput <- map(c(1:length(schoolData)), ~ oneSchool(.x))\n\n\nFailing at index 6… (Code is not run since it won’t allow the output to be rendered)\n\nCodeschoolData[[6]]$body$programMetrics %>% \n  head(5)\n\n  programCode averageResultNationalTestsSubjectSVE sveSubjectTest\n1          EK                   13,1, EXISTS, VT22      Svenska 3\n2         IMV                      NA, MISSING, NA           <NA>\n3          NA                   15,5, EXISTS, VT22      Svenska 3\n4          SA                   12,7, EXISTS, VT22      Svenska 3\n5          TE                   15,7, EXISTS, VT22      Svenska 3\n          averageResultNationalTestsSubjectSVA           svaSubjectTest\n1 .., OMITTED_DUE_TO_BASED_ON_FEW_PUPILS, VT22 Svenska som andraspråk 3\n2                              NA, MISSING, NA                     <NA>\n3                           15,9, EXISTS, VT22 Svenska som andraspråk 3\n4                           14,0, EXISTS, VT22 Svenska som andraspråk 3\n5 .., OMITTED_DUE_TO_BASED_ON_FEW_PUPILS, VT22 Svenska som andraspråk 3\n  averageResultNationalTestsSubjectMA1 ma1SubjectTest\n1                   11,8, EXISTS, VT22   Matematik 2B\n2                      NA, MISSING, NA           <NA>\n3                      NA, MISSING, NA           <NA>\n4                   10,4, EXISTS, VT22   Matematik 2B\n5                      NA, MISSING, NA           <NA>\n  averageResultNationalTestsSubjectMA2 ma2SubjectTest\n1                   10,3, EXISTS, VT22   Matematik 3B\n2                      NA, MISSING, NA           <NA>\n3                   13,5, EXISTS, VT22    Matematik 4\n4                      NA, MISSING, NA           <NA>\n5                   11,3, EXISTS, VT22    Matematik 4\n  averageResultNationalTestsSubjectENG engSubjectTest schoolUnit\n1                   15,8, EXISTS, VT22     Engelska 6   26334561\n2                      NA, MISSING, NA           <NA>   26334561\n3                   16,4, EXISTS, VT22     Engelska 6   26334561\n4                   14,9, EXISTS, VT22     Engelska 6   26334561\n5                   16,6, EXISTS, VT22     Engelska 6   26334561\n  specialTeacherPositions studentsPerTeacherQuota certifiedTeachersQuota\n1    NA, MISSING, 2022/23   16,5, EXISTS, 2022/23  88,7, EXISTS, 2022/23\n2    NA, MISSING, 2022/23   16,5, EXISTS, 2022/23  88,7, EXISTS, 2022/23\n3    NA, MISSING, 2022/23   16,5, EXISTS, 2022/23  88,7, EXISTS, 2022/23\n4    NA, MISSING, 2022/23   16,5, EXISTS, 2022/23  88,7, EXISTS, 2022/23\n5    NA, MISSING, 2022/23   16,5, EXISTS, 2022/23  88,7, EXISTS, 2022/23\n  docLinks hasLibrary        totalNumberOfPupils\n1       NA       TRUE cirka 180, EXISTS, 2022/23\n2       NA       TRUE  cirka 10, EXISTS, 2022/23\n3       NA       TRUE cirka 210, EXISTS, 2022/23\n4       NA       TRUE cirka 180, EXISTS, 2022/23\n5       NA       TRUE  cirka 90, EXISTS, 2022/23\n                                                                     ratioOfStudentsEligibleForUndergraduateEducation\n1 98,4, 100,0, 90,7, 94,7, 100,0, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19, 2017/18\n2                                                                                                                NULL\n3   96,7, 94,4, 94,4, 94,3, 86,6, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19, 2017/18\n4   93,1, 92,7, 87,3, 96,4, 89,4, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19, 2017/18\n5                         96,7, 88,9, 100,0, 87,5, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19\n                                                                                            gradesPointsForStudents\n1 14,2, 14,7, 14,1, 15,0, 14,2, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19, 2017/18\n2                                                                                                              NULL\n3 15,6, 15,0, 16,5, 15,4, 14,3, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19, 2017/18\n4 14,2, 14,6, 14,2, 13,5, 13,6, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19, 2017/18\n5                        15,6, 14,9, 15,4, 14,0, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19\n                                                                                    gradesPointsForStudentsWithExam\n1 14,3, 14,7, 14,4, 15,2, 14,2, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19, 2017/18\n2                                                                                                              NULL\n3 15,8, 15,3, 16,9, 15,6, 15,1, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19, 2017/18\n4 14,6, 15,0, 15,0, 13,8, 14,1, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19, 2017/18\n5                        15,7, 15,7, 15,4, 14,9, EXISTS, EXISTS, EXISTS, EXISTS, 2021/22, 2020/21, 2019/20, 2018/19\n                                                                                   ratioOfPupilsWithExamWithin3Years\n1 96,8, 100,0, 86,0, 91,2, 89,7, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2019/20, 2018/19, 2017/18, 2016/17, 2015/16\n2                                                                                                               NULL\n3  93,4, 86,9, 86,7, 90,1, 77,8, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2019/20, 2018/19, 2017/18, 2016/17, 2015/16\n4  86,4, 83,6, 78,6, 85,7, 74,3, EXISTS, EXISTS, EXISTS, EXISTS, EXISTS, 2019/20, 2018/19, 2017/18, 2016/17, 2015/16\n5                        93,8, 83,3, 100,0, 82,4, EXISTS, EXISTS, EXISTS, EXISTS, 2019/20, 2018/19, 2017/18, 2016/17\n   admissionPointsMin admissionPointsAverage admissionPointsSemester\n1 260,0, EXISTS, 2022    280,0, EXISTS, 2022                      NA\n2     NA, MISSING, NA        NA, MISSING, NA                      NA\n3 267,5, EXISTS, 2022    305,9, EXISTS, 2022                      NA\n4 247,5, EXISTS, 2022    278,8, EXISTS, 2022                      NA\n5 270,0, EXISTS, 2022    290,2, EXISTS, 2022                      NA\n  specialEducatorsQuota\n1   ., MISSING, 2022/23\n2   ., MISSING, 2022/23\n3   ., MISSING, 2022/23\n4   ., MISSING, 2022/23\n5   ., MISSING, 2022/23\n                                                                                 href\n1 https://api.skolverket.se/planned-educations/v3/school-units/26334561/statistics/gy\n2 https://api.skolverket.se/planned-educations/v3/school-units/26334561/statistics/gy\n3 https://api.skolverket.se/planned-educations/v3/school-units/26334561/statistics/gy\n4 https://api.skolverket.se/planned-educations/v3/school-units/26334561/statistics/gy\n5 https://api.skolverket.se/planned-educations/v3/school-units/26334561/statistics/gy\n\n\nThere is a variable that has more than 3 columns.\n\nCodeschoolData[[6]]$body$schoolUnit\n\nNULL\n\n\nNo unit code in the data.\n\nCodeschoolTypes %>% \n  slice(6)\n\n  type Skolenhetskod\n1   gy      26334561\n\n\nThis is a Gymnasieskola.\n\nCodeschoolTypes %>% \n  rownames_to_column() %>% \n  filter(type == \"gy\")\n\n  rowname type Skolenhetskod\n1       6   gy      26334561\n2       7   gy      40386043\n3       8   gy      97758137\n4      18   gy      53400472\n5      74   gy      60096875\n\n\nLooks like we have 5 of those. Maybe they all share the same structure?\n\nCodemap(c(6,9,10,16,74), ~ names(schoolData[[.x]]$body))\n\n[[1]]\n[1] \"programMetrics\"          \"specialTeacherPositions\"\n[3] \"studentsPerTeacherQuota\" \"certifiedTeachersQuota\" \n[5] \"specialEducatorsQuota\"   \"totalNumberOfPupils\"    \n\n[[2]]\n[1] \"schoolUnit\"              \"specialTeacherPositions\"\n[3] \"studentsPerTeacherQuota\" \"certifiedTeachersQuota\" \n[5] \"docLinks\"                \"hasLibrary\"             \n[7] \"totalNumberOfPupils\"     \"_links\"                 \n\n[[3]]\n [1] \"schoolUnit\"                                           \n [2] \"specialTeacherPositions\"                              \n [3] \"studentsPerTeacherQuota\"                              \n [4] \"certifiedTeachersQuota\"                               \n [5] \"docLinks\"                                             \n [6] \"hasLibrary\"                                           \n [7] \"specialEducatorsQuota\"                                \n [8] \"totalNumberOfPupils\"                                  \n [9] \"ratioOfPupilsIn6thGradeWithAllSubjectsPassed\"         \n[10] \"averageResultNationalTestsSubjectSVE6thGrade\"         \n[11] \"averageResultNationalTestsSubjectENG6thGrade\"         \n[12] \"averageResultNationalTestsSubjectMA6thGrade\"          \n[13] \"averageResultNationalTestsSubjectSVA6thGrade\"         \n[14] \"averageResultNationalTestsSubjectSVE9thGrade\"         \n[15] \"averageResultNationalTestsSubjectENG9thGrade\"         \n[16] \"averageResultNationalTestsSubjectMA9thGrade\"          \n[17] \"averageResultNationalTestsSubjectSVA9thGrade\"         \n[18] \"ratioOfPupilsIn9thGradeWithAllSubjectsPassed\"         \n[19] \"averageGradesMeritRating9thGrade\"                     \n[20] \"ratioOfPupils9thGradeEligibleForNationalProgramYR\"    \n[21] \"ratioOfPupils9thGradeEligibleForNationalProgramES\"    \n[22] \"ratioOfPupils9thGradeEligibleForNationalProgramSAEKHU\"\n[23] \"ratioOfPupils9thGradeEligibleForNationalProgramNATE\"  \n[24] \"_links\"                                               \n\n[[4]]\n[1] \"schoolUnit\"              \"specialTeacherPositions\"\n[3] \"studentsPerTeacherQuota\" \"certifiedTeachersQuota\" \n[5] \"docLinks\"                \"hasLibrary\"             \n[7] \"totalNumberOfPupils\"     \"_links\"                 \n\n[[5]]\n[1] \"programMetrics\"          \"specialTeacherPositions\"\n[3] \"studentsPerTeacherQuota\" \"certifiedTeachersQuota\" \n[5] \"specialEducatorsQuota\"   \"totalNumberOfPupils\"    \n\n\nIndeed. We’ll just filter those schools out for now.\n\nCodemapSchoolUnits <- schoolTypes %>% \n  rownames_to_column() %>% \n  filter(!type == \"gy\") %>% \n  pull(rowname) %>% \n  as.numeric()\n\n\n\nCodenestedOutput <- map(mapSchoolUnits, ~ oneSchool(.x))\n\n\nIndex 19 error.\n\nCodeschoolData[[mapSchoolUnits[19]]]\n\n$status\n[1] \"OK\"\n\n$message\n[1] \"\"\n\n$body\n$body$schoolUnit\n[1] \"40631085\"\n\n$body$specialTeacherPositions\n  value valueType timePeriod\n1   1,0    EXISTS    2022/23\n2   4,0    EXISTS    2021/22\n3   4,0    EXISTS    2020/21\n4   3,0    EXISTS    2019/20\n5   1,0    EXISTS    2018/19\n\n$body$studentsPerTeacherQuota\n  value valueType timePeriod\n1  13,1    EXISTS    2022/23\n2  12,7    EXISTS    2021/22\n3  11,2    EXISTS    2020/21\n4  11,5    EXISTS    2019/20\n5  11,9    EXISTS    2018/19\n\n$body$certifiedTeachersQuota\n  value valueType timePeriod\n1  58,9    EXISTS    2022/23\n2  53,8    EXISTS    2021/22\n3  50,4    EXISTS    2020/21\n4  47,5    EXISTS    2019/20\n5  48,6    EXISTS    2018/19\n\n$body$docLinks\nNULL\n\n$body$hasLibrary\n[1] TRUE\n\n$body$specialEducatorsQuota\n  value valueType timePeriod\n1   5,3    EXISTS    2022/23\n2   2,5    EXISTS    2021/22\n3   2,4    EXISTS    2020/21\n4   2,4    EXISTS    2019/20\n5     .   MISSING    2018/19\n\n$body$totalNumberOfPupils\n      value valueType timePeriod\n1 cirka 500    EXISTS    2022/23\n\n$body$ratioOfPupilsIn6thGradeWithAllSubjectsPassed\n  value valueType timePeriod\n1  36,8    EXISTS    2021/22\n\n$body$averageResultNationalTestsSubjectSVE6thGrade\n  value                          valueType timePeriod\n1    .. OMITTED_DUE_TO_BASED_ON_FEW_PUPILS    2021/22\n2     .                            MISSING    2018/19\n3    .. OMITTED_DUE_TO_BASED_ON_FEW_PUPILS    2017/18\n\n$body$averageResultNationalTestsSubjectENG6thGrade\n  value valueType timePeriod\n1  14,0    EXISTS    2021/22\n2  11,1    EXISTS    2018/19\n3  12,4    EXISTS    2017/18\n\n$body$averageResultNationalTestsSubjectMA6thGrade\n  value valueType timePeriod\n1   9,6    EXISTS    2021/22\n2   9,4    EXISTS    2018/19\n3   8,8    EXISTS    2017/18\n\n$body$averageResultNationalTestsSubjectSVA6thGrade\n  value valueType timePeriod\n1   6,9    EXISTS    2021/22\n2   9,6    EXISTS    2018/19\n3   7,7    EXISTS    2017/18\n\n$body$averageResultNationalTestsSubjectSVE9thGrade\n  value                          valueType timePeriod\n1    .. OMITTED_DUE_TO_BASED_ON_FEW_PUPILS    2021/22\n2    .. OMITTED_DUE_TO_BASED_ON_FEW_PUPILS    2018/19\n3     .                            MISSING    2017/18\n\n$body$averageResultNationalTestsSubjectENG9thGrade\n  value valueType timePeriod\n1  11,9    EXISTS    2021/22\n2  12,6    EXISTS    2018/19\n3  12,1    EXISTS    2017/18\n\n$body$averageResultNationalTestsSubjectMA9thGrade\n  value valueType timePeriod\n1  11,7    EXISTS    2021/22\n2   8,2    EXISTS    2018/19\n3     .   MISSING    2017/18\n\n$body$averageResultNationalTestsSubjectSVA9thGrade\n  value valueType timePeriod\n1  10,0    EXISTS    2021/22\n2  10,9    EXISTS    2018/19\n3  12,3    EXISTS    2017/18\n\n$body$ratioOfPupilsIn9thGradeWithAllSubjectsPassed\n  value valueType timePeriod\n1  57,3    EXISTS    2021/22\n2  51,6    EXISTS    2020/21\n3  49,4    EXISTS    2019/20\n4  50,0    EXISTS    2018/19\n5  43,5    EXISTS    2017/18\n\n$body$averageGradesMeritRating9thGrade\n  value valueType timePeriod\n1 199,8    EXISTS    2021/22\n2 194,5    EXISTS    2020/21\n3 194,9    EXISTS    2019/20\n4 168,6    EXISTS    2018/19\n5 168,4    EXISTS    2017/18\n\n$body$ratioOfPupils9thGradeEligibleForNationalProgramYR\n  value valueType timePeriod\n1  68,8    EXISTS    2021/22\n2  73,4    EXISTS    2020/21\n3  82,4    EXISTS    2019/20\n4  63,2    EXISTS    2018/19\n5  65,2    EXISTS    2017/18\n\n$body$ratioOfPupils9thGradeEligibleForNationalProgramES\n  value valueType timePeriod\n1  67,7    EXISTS    2021/22\n2  71,9    EXISTS    2020/21\n3  74,1    EXISTS    2019/20\n4  63,2    EXISTS    2018/19\n5  63,8    EXISTS    2017/18\n\n$body$ratioOfPupils9thGradeEligibleForNationalProgramSAEKHU\n  value valueType timePeriod\n1  64,6    EXISTS    2021/22\n2  70,3    EXISTS    2020/21\n3  69,4    EXISTS    2019/20\n4  55,3    EXISTS    2018/19\n5  50,7    EXISTS    2017/18\n\n$body$ratioOfPupils9thGradeEligibleForNationalProgramNATE\n  value valueType timePeriod\n1  67,7    EXISTS    2021/22\n2  57,8    EXISTS    2020/21\n3  55,3    EXISTS    2019/20\n4  57,9    EXISTS    2018/19\n5  56,5    EXISTS    2017/18\n\n$body$`_links`\n$body$`_links`$self\n$body$`_links`$self$href\n[1] \"https://api.skolverket.se/planned-educations/v3/school-units/40631085/statistics/gr\"\n\n\nStrange that this school has no data when we tested that earlier. But alas, we’ll just have to remove it. Note that the type is “vux”. We should have filtered on types of interest earlier. This is not really a relevant type for our purposes.\n\nCodeschoolTypes %>% \n  count(type)\n\n    type  n\n1    fsk 27\n2     gr 34\n3   gran 10\n4     gy  5\n5   gyan  2\n6    sfi  1\n7    vux  2\n8 vuxgys  1\n\n\nLet’s get the full descriptions of these abbreviations.\n\nCodeschoolTypes <- data.frame()\n\nfor (i in schoolsFiltered$Skolenhetskod) {\n  \n  tmp <- GET(paste0(\"https://api.skolverket.se/planned-educations/v3/school-units/\", i)) %>% \n    content(\"text\") %>% \n    fromJSON()\n  tmp2 <- data.frame(\n    type = tmp$body$typeOfSchooling$code,\n    typeDesc = tmp$body$typeOfSchooling$displayName,\n    Skolenhetskod = i)\n                     \n  schoolTypes <- rbind(schoolTypes,tmp2)\n}\n\nschoolTypes %>% \n  count(typeDesc,type)\n\n                                           typeDesc   type  n\n1                               Anpassad grundskola   gran 10\n2                            Anpassad gymnasieskola   gyan  2\n3                                   Förskoleklassen    fsk 27\n4                                       Grundskolan     gr 34\n5                                    Gymnasieskolan     gy  5\n6 Kommunal vuxenutbildning i svenska för invandrare    sfi  1\n7        Kommunal vuxenutbildning på gymnasial nivå    vux  2\n8   Särskild utbildning för vuxna på gymnasial nivå vuxgys  1\n\n\nFor our purposes, we are primarily interested in gr and gy, and some stats from fsk, but not the rest. This filtering should of course have been done earlier, but the first part of this post was written on a Saturday after 2 weeks of vacation and my brain was not quite up to speed…\n\n3.6 Data retrieval with filtering on school types\nWe’ll do them separately this time, starting with “gr” only.\n\nCodemapSchoolUnits <- schoolTypes %>% \n  rownames_to_column() %>% \n  filter(type == \"gr\") %>% \n  pull(rowname) %>% \n  as.numeric()\n         \nnestedOutputGR <- map(mapSchoolUnits, ~ oneSchool(.x))\n\nglimpse(nestedOutputGR[[1]])\n\nRows: 76\nColumns: 5\n$ value         <chr> \".\", \".\", \".\", \".\", \".\", \"15,5\", \"14,8\", \"16,6\", \"16,3\",…\n$ valueType     <chr> \"MISSING\", \"MISSING\", \"MISSING\", \"MISSING\", \"MISSING\", \"…\n$ timePeriod    <chr> \"2022/23\", \"2021/22\", \"2020/21\", \"2019/20\", \"2018/19\", \"…\n$ variable      <chr> \"specialTeacherPositions\", \"specialTeacherPositions\", \"s…\n$ Skolenhetskod <chr> \"84411355\", \"84411355\", \"84411355\", \"84411355\", \"8441135…\n\n\nNow each school has its own dataframe, stored within the list object nestedOutputGR. Next step is to combine them into one dataframe.\n\n3.7 Combining dataframes\n\nCodeunnestedOutputGR <- map_dfr(c(1:length(nestedOutputGR)), ~ do.call(bind_rows, nestedOutputGR[[.x]]))\nglimpse(unnestedOutputGR)\n\nRows: 1,962\nColumns: 5\n$ value         <chr> \".\", \".\", \".\", \".\", \".\", \"15,5\", \"14,8\", \"16,6\", \"16,3\",…\n$ valueType     <chr> \"MISSING\", \"MISSING\", \"MISSING\", \"MISSING\", \"MISSING\", \"…\n$ timePeriod    <chr> \"2022/23\", \"2021/22\", \"2020/21\", \"2019/20\", \"2018/19\", \"…\n$ variable      <chr> \"specialTeacherPositions\", \"specialTeacherPositions\", \"s…\n$ Skolenhetskod <chr> \"84411355\", \"84411355\", \"84411355\", \"84411355\", \"8441135…\n\n\nData is now in long format, which will be useful for some uses, and we can use pivot_wider() to change format when needed.\nAll variables are class “character”, which is fine for some, but timePeriod is a date variable, and value has “.” for missing and “,” as decimal sign. This needs to be modified."
  },
  {
    "objectID": "SkolverketAPI/skolverketapi.html#variables",
    "href": "SkolverketAPI/skolverketapi.html#variables",
    "title": "Data retrieval with R using API calls",
    "section": "\n4 Variables",
    "text": "4 Variables\nLet’s have a look at the variables available in the data.\n\nCodeunnestedOutputGR %>% \n  count(variable)\n\n# A tibble: 20 × 2\n   variable                                                  n\n   <chr>                                                 <int>\n 1 averageGradesMeritRating9thGrade                        109\n 2 averageResultNationalTestsSubjectENG6thGrade             78\n 3 averageResultNationalTestsSubjectENG9thGrade             66\n 4 averageResultNationalTestsSubjectMA6thGrade              78\n 5 averageResultNationalTestsSubjectMA9thGrade              66\n 6 averageResultNationalTestsSubjectSVA6thGrade             78\n 7 averageResultNationalTestsSubjectSVA9thGrade             66\n 8 averageResultNationalTestsSubjectSVE6thGrade             78\n 9 averageResultNationalTestsSubjectSVE9thGrade             66\n10 certifiedTeachersQuota                                  166\n11 ratioOfPupils9thGradeEligibleForNationalProgramES       109\n12 ratioOfPupils9thGradeEligibleForNationalProgramNATE     109\n13 ratioOfPupils9thGradeEligibleForNationalProgramSAEKHU   109\n14 ratioOfPupils9thGradeEligibleForNationalProgramYR       109\n15 ratioOfPupilsIn6thGradeWithAllSubjectsPassed             34\n16 ratioOfPupilsIn9thGradeWithAllSubjectsPassed            109\n17 specialEducatorsQuota                                   166\n18 specialTeacherPositions                                 166\n19 studentsPerTeacherQuota                                 166\n20 totalNumberOfPupils                                      34\n\n\n\n4.1 Types\n\nCodeunnestedOutputGR %>% \n  count(valueType)\n\n# A tibble: 5 × 2\n  valueType                                             n\n  <chr>                                             <int>\n1 EXISTS                                             1358\n2 MISSING                                             300\n3 OMITTED_DUE_TO_BASED_ON_FEW_PUPILS                  216\n4 ROUNDED_OFF_DUE_TO_FEW_PUPILS_NOT_ELIGIBLE           73\n5 TEACHERS_EXCLUDED_DUE_TO_NO_REQUIRED_LEGITIMATION    15\n\n\nLet’s look at the value variable for the different valueTypes (except EXISTS).\n\nCodeunnestedOutputGR %>% \n  filter(!valueType == \"EXISTS\") %>% \n  group_by(valueType) %>% \n  distinct(value)\n\n# A tibble: 5 × 2\n# Groups:   valueType [4]\n  valueType                                         value\n  <chr>                                             <chr>\n1 MISSING                                           .    \n2 OMITTED_DUE_TO_BASED_ON_FEW_PUPILS                ..   \n3 ROUNDED_OFF_DUE_TO_FEW_PUPILS_NOT_ELIGIBLE        ~100 \n4 TEACHERS_EXCLUDED_DUE_TO_NO_REQUIRED_LEGITIMATION *    \n5 MISSING                                           <NA> \n\n\nWe need the value variable to be of class numeric, which means only numerics and NA values are allowed.\n\n4.2 Recoding\n\nCode# create copy of dataframe prior to recoding\ndf.gr <- unnestedOutputGR\n\n# recode . to NA\ndf.gr$value <- car::recode(df.gr$value,\"'.'=NA\")\n# change decimal comma to decimal point\ndf.gr$value <- gsub(pattern = \",\",\n                    replacement = \".\",\n                    df.gr$value)\n\n\n\nCode# remaining cleanup\ndf.gr$value <- car::recode(df.gr$value,\"'..'=NA\") # too few pupils\ndf.gr$value <- car::recode(df.gr$value,\"'*'=NA\") # no req for teacher license\ndf.gr$value <- gsub(\"cirka \", \"\", df.gr$value)\ndf.gr$value <- gsub(\"~\", \"\", df.gr$value)\n\ndf.gr$value <- as.numeric(df.gr$value)\n\n\n\n4.2.1 Date variable\nFirst remove the second part of the school year designation (extract the first 4 digits).\n\nCode# date variable\ndf.gr$timePeriod <- str_extract(df.gr$timePeriod, \"\\\\d{4}\")\ndf.gr$timePeriod <- as.integer(df.gr$timePeriod)\n\ndf.gr %>% \n  count(timePeriod)\n\n# A tibble: 7 × 2\n  timePeriod     n\n       <int> <int>\n1       2017   314\n2       2018   456\n3       2019   260\n4       2020   262\n5       2021   496\n6       2022   166\n7         NA     8\n\n\nWe could transform this to a date format variable, but having dates as year numerics is fine for our intended use."
  },
  {
    "objectID": "SkolverketAPI/skolverketapi.html#visualizing-data",
    "href": "SkolverketAPI/skolverketapi.html#visualizing-data",
    "title": "Data retrieval with R using API calls",
    "section": "\n5 Visualizing data",
    "text": "5 Visualizing data\n\nCode# we like to use school names instead of codes when creating figures\ndf.gr <- left_join(df.gr,schools, by = \"Skolenhetskod\")\n\n\n\n5.1 Variable check\n\nCodelibrary(gtsummary)\n\ndf.gr %>% \n  select(timePeriod,variable) %>% \n  group_by(variable) %>% \n  tbl_summary(timePeriod)\n\n\n\n\n\n\nCharacteristic\n      \n2017, N = 3141\n\n      \n2018, N = 4561\n\n      \n2019, N = 2601\n\n      \n2020, N = 2621\n\n      \n2021, N = 4961\n\n      \n2022, N = 1661\n\n    \n\n\nvariable\n\n\n\n\n\n\n\n\n    averageGradesMeritRating9thGrade\n21 (6.7%)\n22 (4.8%)\n22 (8.5%)\n21 (8.0%)\n23 (4.6%)\n0 (0%)\n\n\n    averageResultNationalTestsSubjectENG6thGrade\n26 (8.3%)\n26 (5.7%)\n0 (0%)\n0 (0%)\n26 (5.2%)\n0 (0%)\n\n\n    averageResultNationalTestsSubjectENG9thGrade\n21 (6.7%)\n22 (4.8%)\n0 (0%)\n0 (0%)\n23 (4.6%)\n0 (0%)\n\n\n    averageResultNationalTestsSubjectMA6thGrade\n26 (8.3%)\n26 (5.7%)\n0 (0%)\n0 (0%)\n26 (5.2%)\n0 (0%)\n\n\n    averageResultNationalTestsSubjectMA9thGrade\n21 (6.7%)\n22 (4.8%)\n0 (0%)\n0 (0%)\n23 (4.6%)\n0 (0%)\n\n\n    averageResultNationalTestsSubjectSVA6thGrade\n26 (8.3%)\n26 (5.7%)\n0 (0%)\n0 (0%)\n26 (5.2%)\n0 (0%)\n\n\n    averageResultNationalTestsSubjectSVA9thGrade\n21 (6.7%)\n22 (4.8%)\n0 (0%)\n0 (0%)\n23 (4.6%)\n0 (0%)\n\n\n    averageResultNationalTestsSubjectSVE6thGrade\n26 (8.3%)\n26 (5.7%)\n0 (0%)\n0 (0%)\n26 (5.2%)\n0 (0%)\n\n\n    averageResultNationalTestsSubjectSVE9thGrade\n21 (6.7%)\n22 (4.8%)\n0 (0%)\n0 (0%)\n23 (4.6%)\n0 (0%)\n\n\n    certifiedTeachersQuota\n0 (0%)\n33 (7.2%)\n32 (12%)\n34 (13%)\n34 (6.9%)\n33 (20%)\n\n\n    ratioOfPupils9thGradeEligibleForNationalProgramES\n21 (6.7%)\n22 (4.8%)\n22 (8.5%)\n21 (8.0%)\n23 (4.6%)\n0 (0%)\n\n\n    ratioOfPupils9thGradeEligibleForNationalProgramNATE\n21 (6.7%)\n22 (4.8%)\n22 (8.5%)\n21 (8.0%)\n23 (4.6%)\n0 (0%)\n\n\n    ratioOfPupils9thGradeEligibleForNationalProgramSAEKHU\n21 (6.7%)\n22 (4.8%)\n22 (8.5%)\n21 (8.0%)\n23 (4.6%)\n0 (0%)\n\n\n    ratioOfPupils9thGradeEligibleForNationalProgramYR\n21 (6.7%)\n22 (4.8%)\n22 (8.5%)\n21 (8.0%)\n23 (4.6%)\n0 (0%)\n\n\n    ratioOfPupilsIn6thGradeWithAllSubjectsPassed\n0 (0%)\n0 (0%)\n0 (0%)\n0 (0%)\n26 (5.2%)\n0 (0%)\n\n\n    ratioOfPupilsIn9thGradeWithAllSubjectsPassed\n21 (6.7%)\n22 (4.8%)\n22 (8.5%)\n21 (8.0%)\n23 (4.6%)\n0 (0%)\n\n\n    specialEducatorsQuota\n0 (0%)\n33 (7.2%)\n32 (12%)\n34 (13%)\n34 (6.9%)\n33 (20%)\n\n\n    specialTeacherPositions\n0 (0%)\n33 (7.2%)\n32 (12%)\n34 (13%)\n34 (6.9%)\n33 (20%)\n\n\n    studentsPerTeacherQuota\n0 (0%)\n33 (7.2%)\n32 (12%)\n34 (13%)\n34 (6.9%)\n33 (20%)\n\n\n    totalNumberOfPupils\n0 (0%)\n0 (0%)\n0 (0%)\n0 (0%)\n0 (0%)\n34 (20%)\n\n\n\n\n1 n (%)\n    \n\n\n\n\n\n5.2 Number of pupils per school\n\nCodedf.gr %>% \n  filter(variable == \"totalNumberOfPupils\") %>% \n  ggplot(aes(x = factor(timePeriod), \n             y = value, \n             color = Skolenhetsnamn,\n             group = Skolenhetsnamn)) +\n  geom_point() +\n  geom_line() +\n  theme_bw()\n\n\n\n\nOnly data from 2022 for that variable. We need to look elsewhere for historical data, it seems. It would also be useful to have the number of pupils per class, since we want to make comparisons to survey data responses. However, the documentation of this variable indicates that number of pupils is rounded to nearest 10th:\n\n“Antal elever på skolenheten, avrundat till tiotal. 1-14 elever ger 10, 15-24 elever ger 20, 25-34 elever ger 30, enkelprick förekommer om elever saknas. Uppgiften samlas in 15 oktober varje år och uppdatering sker i mars året efter insamling.”\n\nAlso, we can see that there are several school units that have very similar names, or represent parts of the same schools. This data is clearly quite complex in its structure.\nAs a bonus item, here is a more suitable type of figure to illustrate data from a single year,\n\nCodedf.gr %>% \n  filter(variable == \"totalNumberOfPupils\") %>% \n  mutate(Skolenhetsnamn = factor(Skolenhetsnamn)) %>% \n  ggplot(aes(x = fct_reorder(Skolenhetsnamn, desc(value)), \n             y = value,\n             fill = value)) +\n  geom_col() +\n  theme_minimal() +\n  labs(x = \"\",\n       y = \"Number of pupils\") +\n  scale_fill_viridis_c(guide = \"none\") +\n  coord_flip()\n\n\n\n\n\n5.3 studentsPerTeacherQuota\nHere we have data from multiple school years.\n\nCodedf.gr %>% \n  filter(variable == \"studentsPerTeacherQuota\") %>% \n  ggplot(aes(x = factor(timePeriod), \n             y = value, \n             color = Skolenhetsnamn,\n             group = Skolenhetsnamn)) +\n  geom_point() +\n  geom_line() +\n  theme_bw()\n\n\n\n\nHuge variation, probably since there are schools in the data that seem to represent special education groups. Let’s look at the average numbers across years and sort out the 10 with the lowest number of pupils per teacher.\n\nCodedf.gr %>% \n  filter(variable == \"studentsPerTeacherQuota\") %>% \n  group_by(Skolenhetsnamn) %>% \n  reframe(Average = mean(value)) %>% \n  arrange(Average) %>% \n  slice(1:10)\n\n# A tibble: 10 × 2\n   Skolenhetsnamn                  Average\n   <chr>                             <dbl>\n 1 Rikstens skola Trampolinen 1GR     3.88\n 2 Storvretskolan 1GR                 5.34\n 3 Borgsskolan Borggruppen 1GR        5.78\n 4 Hammerstaskolan Språkenhet 1GR     5.82\n 5 Fittjaskolan Lilla Aspen 1GR       6   \n 6 Falkbergsskolan klass 6-9 A 1GR    7.08\n 7 Freinetskolan Kastanjen            9.66\n 8 Sverigefinska skolan, Botkyrka    10   \n 9 Storvretskolan                    11.3 \n10 Hammerstaskolan                   11.5 \n\n\nWe’ll remove the ones with “1GR” at the end of the school name.\n\nCodedf.gr %>% \n  filter(variable == \"studentsPerTeacherQuota\",\n         !str_detect(Skolenhetsnamn,\"1GR\")) %>% \n  ggplot(aes(x = factor(timePeriod), \n             y = value, \n             color = Skolenhetsnamn\n             )) +\n  geom_point() +\n  geom_line(aes(group = Skolenhetsnamn)) +\n  theme_bw()\n\n\n\n\nLet’s update our information about the schools with some more variables.\n\nCodeschoolUnitCodes <- schoolTypes %>% \n  filter(type == \"gr\") %>% \n  pull(Skolenhetskod)\n\nschoolTypes2 <- data.frame()\n\nfor (i in schoolUnitCodes) {\n  \n  tmp <- GET(paste0(\"https://api.skolverket.se/planned-educations/v3/school-units/\", i)) %>% \n    content(\"text\") %>% \n    fromJSON()\n  \n  if (length(tmp$body$typeOfSchooling$code) > 1){ # if both fsk and gr\n  \n    tmp2 <- data.frame(\n    type = tmp$body$typeOfSchooling$code[2],\n    principalOrganizerType = tmp$body$principalOrganizerType,\n    companyForm = tmp$body$companyForm,\n    schoolYears = paste0(tmp$body$typeOfSchooling$schoolYears[2][[1]][1],\"-\",tmp$body$typeOfSchooling$schoolYears[2][[1]][length(tmp$body$typeOfSchooling$schoolYears[2][[1]])]),\n    corporationName = tmp$body$corporationName,\n    latitude = tmp$body$wgs84_Lat,\n    longitude = tmp$body$wgs84_Long,\n    zipCode = tmp$body$contactInfo$addresses$zipCode[2],\n    Skolenhetskod = i)\n                     \n  schoolTypes2 <- bind_rows(schoolTypes2,tmp2)\n  } else { # when schoolType only \"gr\"\n    tmp2 <- data.frame(\n    type = tmp$body$typeOfSchooling$code,\n    principalOrganizerType = tmp$body$principalOrganizerType,\n    companyForm = tmp$body$companyForm,\n    schoolYears = paste0(tmp$body$typeOfSchooling$schoolYears[1][[1]][1],\"-\",tmp$body$typeOfSchooling$schoolYears[1][[1]][length(tmp$body$typeOfSchooling$schoolYears[1][[1]])]),\n    corporationName = tmp$body$corporationName,\n    latitude = tmp$body$wgs84_Lat,\n    longitude = tmp$body$wgs84_Long,\n    zipCode = tmp$body$contactInfo$addresses$zipCode,\n    Skolenhetskod = i)\n                     \n  schoolTypes2 <- bind_rows(schoolTypes2,tmp2)\n    }\n}\n\nschoolTypes2 <- left_join(schoolTypes2,schools, by = \"Skolenhetskod\")\n\nglimpse(schoolTypes2)\n\nRows: 41\nColumns: 13\n$ type                   <chr> \"gr\", \"gr\", \"gr\", \"gr\", \"gr\", \"gr\", \"gr\", \"gr\",…\n$ principalOrganizerType <chr> \"Fristående\", \"Fristående\", \"Fristående\", \"Fris…\n$ companyForm            <chr> \"Övriga aktiebolag\", \"Övriga aktiebolag\", \"Övri…\n$ schoolYears            <chr> \"4-9\", \"4-9\", \"1-6\", \"1-9\", \"1-9\", \"6-9\", \"6-9\"…\n$ corporationName        <chr> \"Kunskapsskolan i Sverige Aktiebolag\", \"Kunskap…\n$ latitude               <chr> \"59.20011169538554\", \"59.20011169538554\", \"59.2…\n$ longitude              <chr> \"17.846722627859616\", \"17.846722627859616\", \"17…\n$ zipCode                <chr> \"14741\", \"14741\", \"14568\", \"14574\", \"14740\", \"1…\n$ Skolenhetskod          <chr> \"84411355\", \"84411355\", \"16762245\", \"29524966\",…\n$ Kommunkod              <chr> \"0127\", \"0127\", \"0127\", \"0127\", \"0127\", \"0127\",…\n$ PeOrgNr                <chr> \"5565661815\", \"5565661815\", \"8024242391\", \"7696…\n$ Skolenhetsnamn         <chr> \"Kunskapsskolan Tumba\", \"Kunskapsskolan Tumba\",…\n$ Status                 <chr> \"Aktiv\", \"Aktiv\", \"Aktiv\", \"Aktiv\", \"Aktiv\", \"A…\n\n\nWell, that was a handful to work out. And we only get “gr” schools, so a similar process will be necessary if we want to get the other school types."
  }
]