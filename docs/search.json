[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "When you work with open source tools such as R it comes with a community of users asking and answering questions, as well as many making helpful tutorials or blog posts freely available.\nI constantly learn from others and like to give something back from my own journey of learning, exploring and hopefully innovating and contributing a bit of my own. I have the opportunity to work with a lot of different data scenarios. Most often psychometrics is involved, as well as data analysis and visualization.\nMy goal is to get better at documenting my own learning process and sharing it through this website. Content will be added intermittently under the Blog headline.\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Magnus Johansson is a licensed psychologist with a PhD in behavior analysis. I work as a scientist at RISE Research Institutes of Sweden, primarily with psychometrics, measurement, prevention and public health.\nYou can also find me on:\n\nTwitter: @pgmjoh\nORCID: 0000-0003-1669-592X\nMastodon: @pgmj\nOSF: Open Science Framework\n\nand of course on GitHub\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "raschrvignette/index.html",
    "href": "raschrvignette/index.html",
    "title": "RISEkbmRasch",
    "section": "",
    "text": "This is a work-in-progress to create a proper vignette to introduce how to make use of the RISEkbmRasch R package.\nDetails on installation is at the package link above. This vignette will walk through a sample analysis using an open dataset with questionnaire data. This will include some data wrangling to structure the item data and itemlabels, then provide examples of the different functions.\nOne of the aims with this package is to simplify psychometric analysis to shed light on the measurement properties of a scale. In a forthcoming paper (preprint should be out in January 2023 and the link will be added here), our research group propose that the basic aspects of a psychometric analysis should include information about:\nWe’ll include several ways to investigate these measurement properties, using Rasch Measurement Theory."
  },
  {
    "objectID": "raschrvignette/index.html#getting-started",
    "href": "raschrvignette/index.html#getting-started",
    "title": "RISEkbmRasch",
    "section": "1 Getting started",
    "text": "1 Getting started\nSince the package is intended for use with Quarto, this vignette has also been created with Quarto. A “template” .qmd file is available (insert link later) that is suggested to have at hand for copy&paste when running a new analysis.\nLoading the package should also get all the dependencies loaded. You may need to make sure that ggplot2 is updated to version 3.4.0 or later.\n\n\nCode\nlibrary(RISEkbmRasch) # devtools::install_github(\"pgmj/RISEkbmRasch\")\n\n### some commands exist in multiple packages, here we define preferred ones that are frequently used\nselect <- dplyr::select\ncount <- dplyr::count\nrecode <- car::recode\nrename <- dplyr::rename\n\n### set up color palette based on RISE guidelines\nRISEprimGreen <- \"#009ca6\"\nRISEprimRed <- \"#e83c63\"\nRISEprimYellow <- \"#ffe500\"\nRISEprimGreenMid <- \"#8dc8c7\"\nRISEprimRedMid <- \"#f5a9ab\"\nRISEprimYellowMid <- \"#ffee8d\"\nRISEprimGreenLight <- \"#ebf5f0\"\nRISEprimRedLight <- \"#fde8df\"\nRISEprimYellowLight <- \"#fff7dd\"\nRISEcompPurple <- \"#482d55\"\nRISEcompGreenDark <- \"#0e4e65\"\nRISEgrey1 <- \"#f0f0f0\"\nRISEgrey2 <- \"#c8c8c8\"\nRISEgrey3 <- \"#828282\"\nRISEgrey4 <- \"#555555\"\n\n\n\n1.1 Loading data\nWe will use data from a recent paper investigating the “initial elevation effect” (Anvari et al. 2022), and focus on the 10 negative items from the PANAS. The data is available at the OSF website.\n\n\n\n\n\n1.2 Itemlabels\nThen we set up the itemlabels dataframe. This could also be done using the free LibreOffice Calc or MS Excel. Just make sure the file has the same structure, with two variables named itemnr and item that contain the item names and item description. The item names have to match the variable names in the item dataframe.\n\n\nCode\nitemlabels <- df %>% \n  select(starts_with(\"PAN\")) %>% \n  names() %>% \n  as_tibble() %>% \n  separate(value, c(NA, \"item\"), sep =\"_[0-9][0-9]_\") %>% \n  mutate(itemnr = paste0(\"PANAS_\",c(11:20)), .before = \"item\")\n\n\n\n\n1.3 Demographics and invariance\nVariables for invariance tests such as Differential Item Functioning need to be separated into vectors (ideally as factors with specified labels and levels) with the same length as the number of rows in the dataset. This means that any kind of removal of respondents with missing data needs to be done before separating the DIF variables.\nLet’s first see whether any data is missing.\n\n\nCode\ndf %>%\n  select(starts_with(\"PAN\")) %>% \n  t() %>% \n  as.data.frame() %>% \n  mutate(Missing = rowSums(is.na(.))) %>% \n  select(Missing) %>% \n  arrange(desc(Missing)) %>% \n  rownames_to_column(var = \"Item\") %>% \n  mutate(Percentage = Missing/nrow(df)*100) %>% \n  mutate(Item = factor(Item, levels = rev(Item))) %>%\n  ggplot(aes(x = Item, y = Percentage)) +\n  geom_col() +\n  coord_flip() +\n  ggtitle(\"Missing data per item\") +\n  xlab(\"Items\") +\n  ylab(\"Percentage of responses missing\")\n\n\n\n\n\nNo missing data, which makes this easier. We also need to check how the Sex variable has been coded and which responses are present in the data.\n\n\nCode\ndf %>% \n  distinct(Sex)\n\n\n# A tibble: 5 × 1\n  Sex              \n  <chr>            \n1 Male             \n2 Female           \n3 CONSENT REVOKED  \n4 Prefer not to say\n5 DATA EXPIRED     \n\n\nWe’ll recode all responses apart from Male/Female as missing (NA).\n\n\nCode\ndf$Sex <- car::recode(df$Sex,\"'CONSENT REVOKED'=NA;\n                      'Prefer not to say'=NA;\n                      'DATA EXPIRED'=NA\")\n\ndif.sex <- factor(df$Sex)\n\n\nNow we can make use of a very simple function included in this package!\n\n\nCode\nRIdemographics(dif.sex, \"Sex\")\n\n\n\n\n \n  \n    Sex \n    n \n    Percent \n  \n \n\n  \n    Female \n    896 \n    48.4 \n  \n  \n    Male \n    955 \n    51.6 \n  \n\n\n\n\n\nAnd remove the DIF variable from the item dataset.\n\n\nCode\ndf$Sex <- NULL\n\n\nLet’s move on to the age variable.\n\n\nCode\nglimpse(df$age)\n\n\n num [1:1856] 27 32 21 27 20 22 23 25 21 26 ...\n\n\nSometimes age is provided in categories, but here we have a numeric variable with age in years. Let’s have a quick look at the age distribution using a histogram, and calculate mean, sd and range.\n\n\nCode\n### simpler version of the ggplot below\n# hist(df$age, col = \"#009ca6\")\n# \n# df %>% \n#   summarise(Mean = round(mean(age, na.rm = T),1),\n#             StDev = round(sd(age, na.rm = T),1)\n#             )\n\nggplot(df) +\n  geom_histogram(aes(x = age), \n                 fill = \"#009ca6\",\n                 col = \"black\") +\n  geom_vline(xintercept = mean(df$age), \n             linewidth = 1.5,\n             linetype = 2,\n             col = \"#ffe500\") +\n  annotate(\"rect\", ymin = 0, ymax = Inf, \n           xmin = (mean(df$age) - sd(df$age)), xmax = (mean(df$age) + sd(df$age)), \n           alpha = .3) +\n  labs(title = \"\",\n       x = \"Age in years\",\n       y = \"Number of respondents\",\n       caption = glue(\"Note. Mean age is {round(mean(df$age, na.rm = T),1)} years with a standard deviation of {round(sd(df$age, na.rm = T),1)}. Age range is {min(df$age)} to {max(df$age)}.\")\n       ) +\n  theme(plot.caption = element_text(hjust = 0, face = \"italic\"))\n\n\n\n\n\nAge also needs to be a separate vector, and removed from the item dataframe.\n\n\nCode\ndif.age <- df$age\ndf$age <- NULL\n\n\nThere is also a grouping variable which needs to be converted to a factor.\n\n\nCode\ndif.group <- factor(df$Group)\ndf$Group <- NULL\nRIdemographics(dif.group, \"Group\")\n\n\n\n\n \n  \n    Group \n    n \n    Percent \n  \n \n\n  \n    Earlier Start \n    903 \n    48.7 \n  \n  \n    Later Start \n    953 \n    51.3 \n  \n\n\n\n\n\nWith only item data remaining in the dataframe, we can easily rename the items in the item dataframe. These names match the itemlabels variable itemnr.\n\n\nCode\nnames(df) <- itemlabels$itemnr\n\n\nNow we are all set for the psychometric analysis!"
  },
  {
    "objectID": "raschrvignette/index.html#descriptives",
    "href": "raschrvignette/index.html#descriptives",
    "title": "RISEkbmRasch",
    "section": "2 Descriptives",
    "text": "2 Descriptives\nFirst, let’s familiarize ourselves with the data.\n\n2.1 Overall responses\n\n\nCode\nRIallresp(df)\n\n\n\n\n\n\n\nResponse category\n\n\nNumber of responses\n\n\nPercent\n\n\n\n\n\n\n1\n\n\n9444\n\n\n50.9\n\n\n\n\n2\n\n\n4147\n\n\n22.3\n\n\n\n\n3\n\n\n2689\n\n\n14.5\n\n\n\n\n4\n\n\n1732\n\n\n9.3\n\n\n\n\n5\n\n\n548\n\n\n3.0\n\n\n\n\n\n\n\nThe Rasch model requires the lowest response category to be zero, which makes it necessary for us to recode our data from 1-5 to 0-4.\n\n\nCode\ndf <- df %>% \n  mutate(across(everything(), ~ car::recode(.x, \"1=0;2=1;3=2;4=3;5=4\", as.factor = F)))\n\nRIallresp(df)\n\n\n\n\n\n\n\nResponse category\n\n\nNumber of responses\n\n\nPercent\n\n\n\n\n\n\n0\n\n\n9444\n\n\n50.9\n\n\n\n\n1\n\n\n4147\n\n\n22.3\n\n\n\n\n2\n\n\n2689\n\n\n14.5\n\n\n\n\n3\n\n\n1732\n\n\n9.3\n\n\n\n\n4\n\n\n548\n\n\n3.0\n\n\n\n\n\n\n\n\n2.1.1 Floor/ceiling effects\nNow, we can also look at the raw distribution of sum scores. The RIrawdist() function is a bit crude, since it requires responses in all response categories to accurately calculate max and min scores.\n\n\nCode\nRIrawdist(df)\n\n\n\n\n\nWe can see a floor effect with 11.8% of participants responding in the lowest category for all items.\n\n\n2.1.2 Guttman structure\nWhile not really necessary, it could be interesting to see whether the response patterns follow a Guttman-like structure. Items and persons are sorted based on lower->higher responses, and we should see the color move from yellow in the lower left corner to blue in the upper right corner.\n\n\nCode\nRIheatmap(df)\n\n\n\n\n\nIn this data, we see the floor effect on the left, with 11.8% of respondents all yellow, and a rather weak Guttman structure. This could also be due to a low variation in item locations/difficulties.\n\n\n\n2.2 Item level descriptives\nThere are many ways to look at the item level data, and we’ll get them all together in the tab-panel below. The RItileplot() is probably most informative, since it provides the number of responses in each response category for each item. It is usually recommended to have at least ~10 responses in each category for psychometric analysis, no matter which methodology is used.\nMost people will be familiar with the barplot, and this is probably most intuitive to understand the response distribution within each item. However, if there are many items it will take a while to review, and does not provide the same overview as a tileplot or stacked bars.\n\n\nCode\n# this code chunk creates a small table in the margin beside the panel-tabset output below,\n# showing all items currently in the df dataframe\n# the chunk option \"#| column: margin\" is necessary for the layout to work as intended\nRIlistItemsMargin(df, fontsize = 13)\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_15\n\n\nScared\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_18\n\n\nGuilty\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nTile plotStacked barsBarplots\n\n\n\n\nCode\nRItileplot(df)\n\n\n\n\n\n\n\n\n\nCode\nRIbarstack(df)\n\n\n\n\n\n\n\n\n\nCode\nRIbarplot(df)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhile response patterns are skewed for all items, there are more than 10 responses in each category for all items."
  },
  {
    "objectID": "raschrvignette/index.html#rasch-analysis-1",
    "href": "raschrvignette/index.html#rasch-analysis-1",
    "title": "RISEkbmRasch",
    "section": "3 Rasch analysis 1",
    "text": "3 Rasch analysis 1\nThe eRm package and Conditional Maximum Likelihood (CML) estimation will be used primarily, with the Partial Credit Model.\nThis is also where the five basic psychometric aspects are good to recall.\n\nUnidimensionality\nResponse categories\nInvariance\nTargeting\nMeasurement uncertainties (reliability)\n\nWe will look at all except invariance and reliability in parallel below. For unidimensionality, we are mostly interested in item fit and residual correlations, as well as PCA of residuals and loadings on the first residual contrast. At the same time, disordered response categories can influence item fit, and targeting can be useful if it is necessary to remove items due to residual correlations.\nWhen unidimensionality and response categories are found to work adequately, we will move on to invariance testing. And when/if invariance looks good, we can investigate reliability/measurement uncertainties.\nIn the tabset-panel below, each tab will have some explanatory text.\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_15\n\n\nScared\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_18\n\n\nGuilty\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fitPCAResidual correlations1st contrast loadingsAnalysis of response categoriesTargetingItem hierarchy\n\n\n\n\nCode\nRIitemfitPCM2(df, 300, 32, cpu = 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    PANAS_11 \n    1.146 \n    1.105 \n    1.449 \n    1.541 \n  \n  \n    PANAS_12 \n    0.776 \n    0.776 \n    -1.98 \n    -2.618 \n  \n  \n    PANAS_13 \n    1.237 \n    1.091 \n    1.43 \n    0.814 \n  \n  \n    PANAS_14 \n    1.01 \n    0.979 \n    0.22 \n    -0.191 \n  \n  \n    PANAS_15 \n    0.664 \n    0.724 \n    -2.844 \n    -3.181 \n  \n  \n    PANAS_16 \n    0.71 \n    0.736 \n    -2.392 \n    -3.241 \n  \n  \n    PANAS_17 \n    0.839 \n    0.872 \n    -0.908 \n    -1.09 \n  \n  \n    PANAS_18 \n    1.061 \n    1 \n    0.313 \n    -0.123 \n  \n  \n    PANAS_19 \n    0.844 \n    0.844 \n    -1.865 \n    -1.982 \n  \n  \n    PANAS_20 \n    1.16 \n    1.121 \n    1.535 \n    1.27 \n  \n\n\n\n\n\nSince we have a sample size over 500, ZSTD item fit values would be inflated if we use the whole sample. To better estimate accurate ZSTD values the RIitemfitPCM() function allows for multiple subsampling. It is recommended to use a sample size between 250 and 500 (Hagell and Westergren 2016). We will set the sample size to 300 and run 32 subsamples. For faster processing, RIitemfitPCM2() enables parallel processing with multiple CPUs/cores.\n“Outfit” refers to item fit when person location is relatively far away from the item location, while “infit” provides estimates for when person and item locations are close together. MSQ should be close to 1, with lower and upper cutoffs set to 0.7 and 1.3, while ZSTD should be around 0, with cutoffs set to +/- 2.0. Infit is usually more important.\nA low item fit indicates that responses are too predictable and provide little information. A high item fit can indicate several things, most often multidimensionality or, for questionnaires, a question that is difficult to interpret. This could for instance be a question that asks about two things at the same time.\n\n\n\n\nCode\nRIpcmPCA(df)\n\n\n\nPCA of Rasch model residuals\n \n  \n    Eigenvalues \n  \n \n\n  \n    1.79 \n  \n  \n    1.46 \n  \n  \n    1.28 \n  \n  \n    1.14 \n  \n  \n    1.06 \n  \n\n\n\n\n\nThe first eigenvalue should be below 2.0.\n\n\n\n\nCode\nRIresidcorr(df, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    PANAS_11 \n    PANAS_12 \n    PANAS_13 \n    PANAS_14 \n    PANAS_15 \n    PANAS_16 \n    PANAS_17 \n    PANAS_18 \n    PANAS_19 \n    PANAS_20 \n  \n \n\n  \n    PANAS_11 \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_12 \n    -0.1 \n     \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_13 \n    -0.05 \n    -0.01 \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_14 \n    -0.11 \n    0.09 \n    0.07 \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_15 \n    -0.14 \n    -0.13 \n    -0.22 \n    -0.29 \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_16 \n    -0.17 \n    -0.1 \n    -0.25 \n    -0.27 \n    0.39 \n     \n     \n     \n     \n     \n  \n  \n    PANAS_17 \n    -0.18 \n    -0.09 \n    -0.09 \n    -0.19 \n    -0.13 \n    -0.08 \n     \n     \n     \n     \n  \n  \n    PANAS_18 \n    -0.19 \n    -0.15 \n    -0.16 \n    -0.18 \n    -0.15 \n    -0.13 \n    0.32 \n     \n     \n     \n  \n  \n    PANAS_19 \n    -0.12 \n    -0.13 \n    -0.25 \n    -0.14 \n    0.1 \n    0.08 \n    -0.21 \n    -0.12 \n     \n     \n  \n  \n    PANAS_20 \n    -0.06 \n    -0.22 \n    -0.07 \n    -0.05 \n    -0.13 \n    -0.19 \n    -0.16 \n    -0.15 \n    -0.08 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.098, which is 0.2 above the average correlation.\n\n\n\n\n\nThe matrix above shows item-pair correlations of item residuals, with highlights in red showing correlations 0.2 or more above the average item-pair correlation (for all item-pairs) (Christensen, Makransky, and Horton 2017).\n\n\n\n\nCode\nRIloadLoc(df)\n\n\n\n\n\nThis figure can be helpful to identify clusters in data or multidimensionality.\n\n\n\n\nCode\nmirt.rasch <- mirt(df, model=1, itemtype='Rasch') # unidimensional Rasch model\n\n\n\nIteration: 1, Log-Lik: -21806.700, Max-Change: 1.28210\nIteration: 2, Log-Lik: -20090.274, Max-Change: 0.41468\nIteration: 3, Log-Lik: -20001.995, Max-Change: 0.22853\nIteration: 4, Log-Lik: -19963.053, Max-Change: 0.15826\nIteration: 5, Log-Lik: -19943.444, Max-Change: 0.12828\nIteration: 6, Log-Lik: -19932.996, Max-Change: 0.10259\nIteration: 7, Log-Lik: -19927.144, Max-Change: 0.08429\nIteration: 8, Log-Lik: -19923.589, Max-Change: 0.07035\nIteration: 9, Log-Lik: -19921.222, Max-Change: 0.05979\nIteration: 10, Log-Lik: -19915.642, Max-Change: 0.05282\nIteration: 11, Log-Lik: -19913.964, Max-Change: 0.01886\nIteration: 12, Log-Lik: -19913.621, Max-Change: 0.01948\nIteration: 13, Log-Lik: -19912.585, Max-Change: 0.01279\nIteration: 14, Log-Lik: -19912.469, Max-Change: 0.01202\nIteration: 15, Log-Lik: -19912.390, Max-Change: 0.01100\nIteration: 16, Log-Lik: -19912.108, Max-Change: 0.00810\nIteration: 17, Log-Lik: -19912.071, Max-Change: 0.00460\nIteration: 18, Log-Lik: -19912.054, Max-Change: 0.00478\nIteration: 19, Log-Lik: -19911.997, Max-Change: 0.00368\nIteration: 20, Log-Lik: -19911.989, Max-Change: 0.00226\nIteration: 21, Log-Lik: -19911.986, Max-Change: 0.00224\nIteration: 22, Log-Lik: -19911.974, Max-Change: 0.00183\nIteration: 23, Log-Lik: -19911.972, Max-Change: 0.00098\nIteration: 24, Log-Lik: -19911.971, Max-Change: 0.00102\nIteration: 25, Log-Lik: -19911.969, Max-Change: 0.00083\nIteration: 26, Log-Lik: -19911.968, Max-Change: 0.00046\nIteration: 27, Log-Lik: -19911.968, Max-Change: 0.00047\nIteration: 28, Log-Lik: -19911.967, Max-Change: 0.00039\nIteration: 29, Log-Lik: -19911.967, Max-Change: 0.00021\nIteration: 30, Log-Lik: -19911.967, Max-Change: 0.00021\nIteration: 31, Log-Lik: -19911.967, Max-Change: 0.00018\nIteration: 32, Log-Lik: -19911.967, Max-Change: 0.00010\nIteration: 33, Log-Lik: -19911.967, Max-Change: 0.00011\nIteration: 34, Log-Lik: -19911.967, Max-Change: 0.00009\n\n\nCode\nplot(mirt.rasch, type=\"trace\")\n\n\n\n\n\nEach response category for each item should have a curve that indicates it to be the most probably response at some point on the latent variable (x axis in the figure).\n\n\n\n\nCode\n# increase fig-height above as needed, if you have many items\nRItargeting(df)\n\n\n\n\n\nThis figure shows how well the items fit the respondents/persons. It is a sort of Wright Map that shows person and item threshold locations on the same logit scale.\nThe top part shows person location histogram, the middle part a histogram of item threshold locations, and the bottom part shows individual item threshold locations. The histograms also show means and standard deviations.\n\n\n\n\nCode\nRIitemHierarchy(df)\n\n\n\n\n\n\n\n\n\nItem 18 has issues with the second lowest category, which needs to be merged with the lowest category.\nItem 15 shows low item fit.\nTwo item-pairs have high residual correlations:\n\n15 and 16 (scared and afraid)\n17 and 18 (ashamed and guilty)\n\nSince item 15 also had low fit, we will remove it. And since item 18 had problems with response categories, it will also be removed.\n\n\nCode\nremoved.items <- c(\"PANAS_15\",\"PANAS_18\")\n\ndf2 <- df %>% \n  select(!any_of(removed.items))"
  },
  {
    "objectID": "raschrvignette/index.html#rasch-analysis-2",
    "href": "raschrvignette/index.html#rasch-analysis-2",
    "title": "RISEkbmRasch",
    "section": "4 Rasch analysis 2",
    "text": "4 Rasch analysis 2\nWith items 15 and 18 removed.\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fitPCAResidual correlations1st contrast loadingsTargetingItem hierarchy\n\n\n\n\nCode\nRIitemfitPCM2(df2, 300, 32, cpu = 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    PANAS_11 \n    1.058 \n    1.031 \n    0.538 \n    0.233 \n  \n  \n    PANAS_12 \n    0.714 \n    0.722 \n    -2.551 \n    -3.321 \n  \n  \n    PANAS_13 \n    1.127 \n    1.007 \n    0.86 \n    0.2 \n  \n  \n    PANAS_14 \n    0.908 \n    0.879 \n    -0.957 \n    -1.371 \n  \n  \n    PANAS_16 \n    0.758 \n    0.788 \n    -1.895 \n    -2.672 \n  \n  \n    PANAS_17 \n    0.897 \n    0.925 \n    -0.75 \n    -0.455 \n  \n  \n    PANAS_19 \n    0.848 \n    0.842 \n    -1.872 \n    -2.282 \n  \n  \n    PANAS_20 \n    1.082 \n    1.058 \n    0.941 \n    0.656 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIpcmPCA(df2)\n\n\n\nPCA of Rasch model residuals\n \n  \n    Eigenvalues \n  \n \n\n  \n    1.52 \n  \n  \n    1.33 \n  \n  \n    1.19 \n  \n  \n    1.15 \n  \n  \n    1.00 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIresidcorr(df2, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    PANAS_11 \n    PANAS_12 \n    PANAS_13 \n    PANAS_14 \n    PANAS_16 \n    PANAS_17 \n    PANAS_19 \n    PANAS_20 \n  \n \n\n  \n    PANAS_11 \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_12 \n    -0.16 \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_13 \n    -0.11 \n    -0.06 \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_14 \n    -0.19 \n    0.03 \n    0 \n     \n     \n     \n     \n     \n  \n  \n    PANAS_16 \n    -0.16 \n    -0.08 \n    -0.25 \n    -0.28 \n     \n     \n     \n     \n  \n  \n    PANAS_17 \n    -0.18 \n    -0.07 \n    -0.09 \n    -0.19 \n    0 \n     \n     \n     \n  \n  \n    PANAS_19 \n    -0.15 \n    -0.15 \n    -0.28 \n    -0.19 \n    0.12 \n    -0.16 \n     \n     \n  \n  \n    PANAS_20 \n    -0.1 \n    -0.27 \n    -0.12 \n    -0.11 \n    -0.18 \n    -0.15 \n    -0.09 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.071, which is 0.2 above the average correlation.\n\n\n\n\n\n\n\n\n\nCode\nRIloadLoc(df2)\n\n\n\n\n\n\n\n\n\nCode\n# increase fig-height above as needed, if you have many items\nRItargeting(df2)\n\n\n\n\n\n\n\n\n\nCode\nRIitemHierarchy(df2)\n\n\n\n\n\n\n\n\n\nItems 12 and 16 are a bit low in item fit ZSTD.\nItems 16 and 19 have a residual correlation at about 0.25 above the average level.\nLet’s look at DIF before taking action upon this information."
  },
  {
    "objectID": "raschrvignette/index.html#invariancedif",
    "href": "raschrvignette/index.html#invariancedif",
    "title": "RISEkbmRasch",
    "section": "5 Invariance/DIF",
    "text": "5 Invariance/DIF\n\n5.1 Sex\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\nTableFigure itemsFigure thresholds\n\n\n\n\nCode\nRIdifTable(df2, dif.sex)\n\n\n\n\n\n\n\n\n\n\nItem\n\n\n2\n\n\n3\n\n\nMean location\n\n\nStDev\n\n\nMaxDiff\n\n\n\n\n\n\nPANAS_11\n\n\n-0.314\n\n\n-0.196\n\n\n-0.255\n\n\n0.083\n\n\n0.117\n\n\n\n\nPANAS_12\n\n\n0.028\n\n\n-0.044\n\n\n-0.008\n\n\n0.051\n\n\n0.073\n\n\n\n\nPANAS_13\n\n\n0.553\n\n\n0.402\n\n\n0.478\n\n\n0.107\n\n\n0.151\n\n\n\n\nPANAS_14\n\n\n-0.328\n\n\n-0.183\n\n\n-0.255\n\n\n0.103\n\n\n0.146\n\n\n\n\nPANAS_16\n\n\n0.004\n\n\n0.114\n\n\n0.059\n\n\n0.078\n\n\n0.111\n\n\n\n\nPANAS_17\n\n\n0.520\n\n\n0.290\n\n\n0.405\n\n\n0.163\n\n\n0.230\n\n\n\n\nPANAS_19\n\n\n-0.495\n\n\n-0.355\n\n\n-0.425\n\n\n0.099\n\n\n0.140\n\n\n\n\nPANAS_20\n\n\n0.032\n\n\n-0.028\n\n\n0.002\n\n\n0.042\n\n\n0.059\n\n\n\n\n\n\n\n\n\n\n\nCode\nRIdifFigure(df2, dif.sex)\n\n\n\n\n\n\n\n\n\nCode\nRIdifFigThresh(df2, dif.sex)\n\n\n\n\n\n\n\n\nWhile no item shows problematic levels of DIF regarding item location, as shown by the table, there is an interesting pattern in the thresholds figure. The lowest threshold seems to be slightly lower for node 3 (Male) for all items.\nThe results do not require any action.\n\n\n5.2 Age\n\n\nCode\nRIdifTable(df2, dif.age)\n\n\n[1] \"No significant DIF found.\"\n\n\nNo DIF found for age.\n\n\n5.3 Group\n\n\nCode\nRIdifTable(df2, dif.group)\n\n\n[1] \"No significant DIF found.\"\n\n\nAnd no DIF for group.\n\n\n5.4 Sex and age\nWhile it has not been implemented in this package, the psychotree package allows for DIF interaction analysis between multiple DIF variables. This will also serve as an example of how to look at and modify a package function, if needed. Use View(RIdifTable) to view the code in the function.\n\n\nCode\ndfin <- df2\n\ndf.tree <- data.frame(matrix(ncol = 0, nrow = nrow(dfin)))\ndf.tree$difdata <- as.matrix(dfin)\ndf.tree$dif.sex <- dif.sex\ndf.tree$dif.age <- dif.age\n\npctree.out <- pctree(difdata ~ dif.sex + dif.age, data = df.tree)\nplot(pctree.out)\n\n\n\n\n\nNo interaction effect found for sex and age. The analysis only shows the previously identified DIF for sex."
  },
  {
    "objectID": "raschrvignette/index.html#rasch-analysis-3",
    "href": "raschrvignette/index.html#rasch-analysis-3",
    "title": "RISEkbmRasch",
    "section": "6 Rasch analysis 3",
    "text": "6 Rasch analysis 3\nThere were no issues with DIF for any item. We still need to address the previously identified problems\nItems 12 and 16 are a bit low in item fit ZSTD.\nItems 16 and 19 have a residual correlation at about 0.25 above the average level.\nWe’ll remove item 19 since item 16 has better targeting.\n\n\nCode\nremoved.items <- c(removed.items,\"PANAS_19\")\n\ndf2 <- df2 %>% \n  select(!any_of(removed.items))\n\n\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fitResidual correlationsTargetingItem hierarchy\n\n\n\n\nCode\nRIitemfitPCM2(df2, 300, 32, 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    PANAS_11 \n    1.009 \n    1.002 \n    0.141 \n    0.029 \n  \n  \n    PANAS_12 \n    0.687 \n    0.697 \n    -3.032 \n    -3.579 \n  \n  \n    PANAS_13 \n    1 \n    0.94 \n    -0.041 \n    -0.551 \n  \n  \n    PANAS_14 \n    0.861 \n    0.842 \n    -1.667 \n    -1.85 \n  \n  \n    PANAS_16 \n    0.836 \n    0.831 \n    -1.284 \n    -2.123 \n  \n  \n    PANAS_17 \n    0.858 \n    0.879 \n    -0.946 \n    -0.981 \n  \n  \n    PANAS_20 \n    1.068 \n    1.045 \n    0.924 \n    0.373 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIresidcorr(df2, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    PANAS_11 \n    PANAS_12 \n    PANAS_13 \n    PANAS_14 \n    PANAS_16 \n    PANAS_17 \n    PANAS_20 \n  \n \n\n  \n    PANAS_11 \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_12 \n    -0.18 \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_13 \n    -0.15 \n    -0.11 \n     \n     \n     \n     \n     \n  \n  \n    PANAS_14 \n    -0.22 \n    0 \n    -0.04 \n     \n     \n     \n     \n  \n  \n    PANAS_16 \n    -0.14 \n    -0.06 \n    -0.26 \n    -0.26 \n     \n     \n     \n  \n  \n    PANAS_17 \n    -0.2 \n    -0.09 \n    -0.14 \n    -0.22 \n    0 \n     \n     \n  \n  \n    PANAS_20 \n    -0.12 \n    -0.29 \n    -0.16 \n    -0.13 \n    -0.15 \n    -0.17 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.053, which is 0.2 above the average correlation.\n\n\n\n\n\n\n\n\n\nCode\nRItargeting(df2)\n\n\n\n\n\n\n\n\n\nCode\nRIitemHierarchy(df2)\n\n\n\n\n\n\n\n\n\nNo problematic residual correlations, but item 12 is clearly low in item fit."
  },
  {
    "objectID": "raschrvignette/index.html#rasch-analysis-4",
    "href": "raschrvignette/index.html#rasch-analysis-4",
    "title": "RISEkbmRasch",
    "section": "7 Rasch analysis 4",
    "text": "7 Rasch analysis 4\n\n\nCode\nremoved.items <- c(removed.items,\"PANAS_12\")\n\ndf2 <- df2 %>% \n  select(!any_of(removed.items))\n\n\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fitResidual correlationsTargetingItem hierarchy\n\n\n\n\nCode\nRIitemfitPCM2(df2, 300, 32, 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    PANAS_11 \n    0.926 \n    0.932 \n    -0.696 \n    -0.888 \n  \n  \n    PANAS_13 \n    0.906 \n    0.892 \n    -0.84 \n    -0.803 \n  \n  \n    PANAS_14 \n    0.85 \n    0.83 \n    -1.705 \n    -2.204 \n  \n  \n    PANAS_16 \n    0.796 \n    0.802 \n    -1.671 \n    -2.38 \n  \n  \n    PANAS_17 \n    0.803 \n    0.835 \n    -1.32 \n    -1.627 \n  \n  \n    PANAS_20 \n    0.958 \n    0.944 \n    -0.239 \n    -0.638 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIresidcorr(df2, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    PANAS_11 \n    PANAS_13 \n    PANAS_14 \n    PANAS_16 \n    PANAS_17 \n    PANAS_20 \n  \n \n\n  \n    PANAS_11 \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_13 \n    -0.17 \n     \n     \n     \n     \n     \n  \n  \n    PANAS_14 \n    -0.22 \n    -0.03 \n     \n     \n     \n     \n  \n  \n    PANAS_16 \n    -0.15 \n    -0.26 \n    -0.24 \n     \n     \n     \n  \n  \n    PANAS_17 \n    -0.22 \n    -0.14 \n    -0.21 \n    0.01 \n     \n     \n  \n  \n    PANAS_20 \n    -0.17 \n    -0.2 \n    -0.16 \n    -0.18 \n    -0.2 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.03, which is 0.2 above the average correlation.\n\n\n\n\n\n\n\n\n\nCode\nRItargeting(df2)\n\n\n\n\n\n\n\n\n\nCode\nRIitemHierarchy(df2)\n\n\n\n\n\n\n\n\n\nThere are several item thresholds that are very closely located, as shown in the item hierarchy figure. This is not ideal, since it will inflate reliability estimates.\nHowever, we will not modify the response categories for this sample/simple analysis, we only note that this is not ideal."
  },
  {
    "objectID": "raschrvignette/index.html#reliability",
    "href": "raschrvignette/index.html#reliability",
    "title": "RISEkbmRasch",
    "section": "8 Reliability",
    "text": "8 Reliability\n\n\nCode\nRItif(df2)\n\n\n\n\n\nWhile 11.8% of respondents had a floor effect, the figure above shows us that 41.8% are located below the point where the items produce a person separation index (reliability) of 0.7 or higher."
  },
  {
    "objectID": "raschrvignette/index.html#person-fit",
    "href": "raschrvignette/index.html#person-fit",
    "title": "RISEkbmRasch",
    "section": "9 Person fit",
    "text": "9 Person fit\nWe can also look at how the respondents fit the Rasch model with these items.\n\n\nCode\nRIpfit(df2)"
  },
  {
    "objectID": "raschrvignette/index.html#item-parameters",
    "href": "raschrvignette/index.html#item-parameters",
    "title": "RISEkbmRasch",
    "section": "10 Item parameters",
    "text": "10 Item parameters\nTo allow others (and oneself) to use the item parameters estimated for estimation of person locations/thetas, we should make the item parameters available. The function will also write a csv-file with the item threshold locations. Estimations of person locations/thetas can be done with the thetaEst() function from the catR package. Code for this is available upon request and will be made into a function in the RISEkbmRasch package at some point.\n\n\nCode\nRIitemparams(df2)\n\n\n\n\n \n  \n      \n    Threshold 1 \n    Threshold 2 \n    Threshold 3 \n    Threshold 4 \n    Item location \n  \n \n\n  \n    PANAS_11 \n    -1.24 \n    -0.34 \n    0.07 \n    1.47 \n    -0.01 \n  \n  \n    PANAS_13 \n    0.06 \n    0.14 \n    0.83 \n    1.78 \n    0.7 \n  \n  \n    PANAS_14 \n    -0.99 \n    -0.26 \n    0.12 \n    1.11 \n    -0.01 \n  \n  \n    PANAS_16 \n    -0.22 \n    -0.13 \n    0.22 \n    1.34 \n    0.3 \n  \n  \n    PANAS_17 \n    0.28 \n    0.30 \n    0.75 \n    1.17 \n    0.63 \n  \n  \n    PANAS_20 \n    -0.90 \n    -0.28 \n    0.62 \n    1.59 \n    0.26 \n  \n\n\n\n\n\n\n10.1 Ordinal sum score to interval score\nThis table shows the corresponding sum score values and logit scores, with standard errors for each logit value.\n\n\nCode\nRIscoreSE(df2)\n\n\n\n\n\n\n\nOrdinal sum score\n\n\nLogit score\n\n\nLogit std.error\n\n\n\n\n\n\n0\n\n\n-3.21\n\n\nNA\n\n\n\n\n1\n\n\n-2.45\n\n\n1.00\n\n\n\n\n2\n\n\n-1.76\n\n\n0.71\n\n\n\n\n3\n\n\n-1.35\n\n\n0.58\n\n\n\n\n4\n\n\n-1.05\n\n\n0.51\n\n\n\n\n5\n\n\n-0.82\n\n\n0.46\n\n\n\n\n6\n\n\n-0.62\n\n\n0.43\n\n\n\n\n7\n\n\n-0.44\n\n\n0.41\n\n\n\n\n8\n\n\n-0.28\n\n\n0.39\n\n\n\n\n9\n\n\n-0.13\n\n\n0.38\n\n\n\n\n10\n\n\n0.01\n\n\n0.37\n\n\n\n\n11\n\n\n0.15\n\n\n0.37\n\n\n\n\n12\n\n\n0.28\n\n\n0.37\n\n\n\n\n13\n\n\n0.42\n\n\n0.37\n\n\n\n\n14\n\n\n0.56\n\n\n0.38\n\n\n\n\n15\n\n\n0.71\n\n\n0.39\n\n\n\n\n16\n\n\n0.86\n\n\n0.40\n\n\n\n\n17\n\n\n1.03\n\n\n0.42\n\n\n\n\n18\n\n\n1.22\n\n\n0.45\n\n\n\n\n19\n\n\n1.43\n\n\n0.48\n\n\n\n\n20\n\n\n1.69\n\n\n0.53\n\n\n\n\n21\n\n\n2.01\n\n\n0.61\n\n\n\n\n22\n\n\n2.46\n\n\n0.73\n\n\n\n\n23\n\n\n3.19\n\n\n1.02\n\n\n\n\n24\n\n\n3.99\n\n\nNA"
  },
  {
    "objectID": "raschrvignette/index.html#software-used",
    "href": "raschrvignette/index.html#software-used",
    "title": "RISEkbmRasch",
    "section": "11 Software used",
    "text": "11 Software used\n\n\nCode\nlibrary(grateful) # devtools::install_github(\"Pakillo/grateful\")\npkgs <- cite_packages(cite.tidyverse = TRUE, \n                      output = \"table\",\n                      bib.file = \"grateful-refs.bib\",\n                      include.RStudio = TRUE)\nformattable(pkgs, \n            table.attr = 'class=\\\"table table-striped\\\" style=\"font-size: 13px; font-family: Lato; width: 80%\"')\n\n\n\n\n\n\n\nPackage\n\n\nVersion\n\n\nCitation\n\n\n\n\n\n\nbase\n\n\n4.2.2\n\n\nR Core Team (2022)\n\n\n\n\ncar\n\n\n3.1.1\n\n\nFox and Weisberg (2019)\n\n\n\n\ngrateful\n\n\n0.1.11\n\n\nRodríguez-Sánchez, Jackson, and Hutchins (2022)\n\n\n\n\nRISEkbmRasch\n\n\n0.1.7.8\n\n\nJohansson (2022)\n\n\n\n\nrmarkdown\n\n\n2.19\n\n\nXie, Allaire, and Grolemund (2018); Xie, Dervieux, and Riederer (2020); Allaire et al. (2022)\n\n\n\n\ntidyverse\n\n\n1.3.2\n\n\nWickham et al. (2019)"
  },
  {
    "objectID": "raschrvignette/RaschRvign.html",
    "href": "raschrvignette/RaschRvign.html",
    "title": "RISEkbmRasch",
    "section": "",
    "text": "This is a work-in-progress to create a proper vignette to introduce how to make use of the RISEkbmRasch R package.\nDetails on installation is at the package link above. This vignette will walk through a sample analysis using an open dataset with questionnaire data. This will include some data wrangling to structure the item data and itemlabels, then provide examples of the different functions. The full source code of this document can be found either in this repository or by clicking on </> CODE at the top beside the table of contents. You should be able to use the source code as is and reproduce this document locally, as long as you have the required packages installed. This site is built using the open source publishing tool Quarto.\nOne of the aims with this package is to simplify psychometric analysis to shed light on the measurement properties of a scale. In a paper recently made available as a preprint (Johansson et al. 2023), our research group propose that the basic aspects of a psychometric analysis should include information about:\nWe’ll include several ways to investigate these measurement properties, using Rasch Measurement Theory. There are also functions in the package less directly related to the criteria above, that will be shown in this vignette.\nPlease note that this is a sample analysis to showcase the R package. It is not intended as a “best practice” psychometric analysis example.\nYou can skip ahead to the Rasch analysis part in Section 3 if you are eager to look at the package output :)"
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#getting-started",
    "href": "raschrvignette/RaschRvign.html#getting-started",
    "title": "RISEkbmRasch",
    "section": "1 Getting started",
    "text": "1 Getting started\nSince the package is intended for use with Quarto, this vignette has also been created with Quarto. A “template” .qmd file is available that can be useful to have handy for copy&paste when running a new analysis.\nLoading the RISEkbmRasch package should also get all the dependencies loaded. You may need to make sure that ggplot2 is updated to version 3.4.0 or later. However, it could be desirable to explicitly load the packages used, to simplify the automatic creation of citations for them, using the grateful package.\n\n\nCode\nlibrary(RISEkbmRasch) # devtools::install_github(\"pgmj/RISEkbmRasch\")\nlibrary(grateful) # devtools::install_github(\"Pakillo/grateful\")\nlibrary(ggrepel)\nlibrary(car)\nlibrary(kableExtra)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(eRm)\nlibrary(mirt)\nlibrary(psych)\nlibrary(ggplot2)\nlibrary(psychotree)\nlibrary(matrixStats)\nlibrary(reshape)\nlibrary(knitr)\nlibrary(cowplot)\nlibrary(formattable) \nlibrary(glue)\nlibrary(foreach)\n\n\n\n1.1 Loading data\nWe will use data from a recent paper investigating the “initial elevation effect” (Anvari et al. 2022), and focus on the 10 negative items from the PANAS. The data is available at the OSF website.\n\n\nCode\ndf.all <- read_csv(\"https://osf.io/download/6fbr5/?view_only=6ad4c2bb65d843bfb1470b8959913630\")\n\n# subset items and demographic variables\ndf <- df.all %>% \n  select(starts_with(\"PANASD2_1\"),\n         starts_with(\"PANASD2_20\"),\n         age,Sex,Group) %>% \n  select(!PANASD2_10_Active) %>% \n  select(!PANASD2_1_Attentive)\n\n\nThe glimpse() function provides a quick overview of our dataframe.\n\n\nCode\nglimpse(df)\n\n\nRows: 1,856\nColumns: 13\n$ PANASD2_11_Distressed <dbl> 2, 2, 2, 1, 2, 2, 4, 1, 1, 3, 1, 4, 2, 4, 4, 1, …\n$ PANASD2_12_Upset      <dbl> 1, 1, 4, 1, 1, 5, 2, 1, 2, 2, 2, 3, 1, 3, 5, 1, …\n$ PANASD2_13_Hostile    <dbl> 1, 1, 2, 1, 1, 3, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, …\n$ PANASD2_14_Irritable  <dbl> 1, 1, 3, 1, 2, 5, 3, 1, 2, 4, 2, 3, 1, 2, 3, 1, …\n$ PANASD2_15_Scared     <dbl> 1, 1, 3, 1, 1, 4, 1, 1, 1, 2, 2, 2, 1, 4, 4, 1, …\n$ PANASD2_16_Afraid     <dbl> 1, 1, 4, 1, 1, 3, 1, 1, 1, 3, 1, 2, 1, 4, 4, 1, …\n$ PANASD2_17_Ashamed    <dbl> 1, 1, 2, 1, 1, 3, 1, 1, 1, 2, 1, 4, 1, 1, 3, 1, …\n$ PANASD2_18_Guilty     <dbl> 2, 1, 2, 1, 1, 3, 3, 1, 1, 3, 1, 4, 1, 1, 3, 1, …\n$ PANASD2_19_Nervous    <dbl> 1, 1, 2, 1, 2, 4, 4, 1, 1, 4, 2, 4, 2, 1, 5, 1, …\n$ PANASD2_20_Jittery    <dbl> 1, 2, 3, 1, 1, 2, 3, 3, 2, 1, 2, 2, 1, 1, 4, 1, …\n$ age                   <dbl> 27, 32, 21, 27, 20, 22, 23, 25, 21, 26, 38, 36, …\n$ Sex                   <chr> \"Male\", \"Male\", \"Female\", \"Male\", \"Male\", \"Male\"…\n$ Group                 <chr> \"Later Start\", \"Later Start\", \"Later Start\", \"La…\n\n\nWe have 1856 rows, ie. respondents. All variables except Sex and Group are of class dbl, which means they are numeric and can have decimals. Integer (numeric with no decimals) would also be fine for our purposes. The two demographic variables currently of class chr (character) will need to be converted to factors (fct), and we will do that later on.\n(If you import a dataset where item variables are of class character, you will need to recode to numeric.)\n\n\n1.2 Itemlabels\nThen we set up the itemlabels dataframe. This could also be done using the free LibreOffice Calc or MS Excel. Just make sure the file has the same structure, with two variables named itemnr and item that contain the item variable names and item description. The item variable names have to match the variable names in the item dataframe.\n\n\nCode\nitemlabels <- df %>% \n  select(starts_with(\"PAN\")) %>% \n  names() %>% \n  as_tibble() %>% \n  separate(value, c(NA, \"item\"), sep =\"_[0-9][0-9]_\") %>% \n  mutate(itemnr = paste0(\"PANAS_\",c(11:20)), .before = \"item\")\n\n\nThe itemlabels dataframe looks like this.\n\n\nCode\nitemlabels\n\n\n# A tibble: 10 × 2\n   itemnr   item      \n   <chr>    <chr>     \n 1 PANAS_11 Distressed\n 2 PANAS_12 Upset     \n 3 PANAS_13 Hostile   \n 4 PANAS_14 Irritable \n 5 PANAS_15 Scared    \n 6 PANAS_16 Afraid    \n 7 PANAS_17 Ashamed   \n 8 PANAS_18 Guilty    \n 9 PANAS_19 Nervous   \n10 PANAS_20 Jittery   \n\n\n\n\n1.3 Demographics\nVariables for invariance tests such as Differential Item Functioning (DIF) need to be separated into vectors (ideally as factors with specified labels and levels) with the same length as the number of rows in the dataset. This means that any kind of removal of respondents with missing data needs to be done before separating the DIF variables.\nLet’s first see whether any data is missing.\n\n\nCode\ndf %>%\n  select(starts_with(\"PAN\")) %>% \n  t() %>% \n  as.data.frame() %>% \n  mutate(Missing = rowSums(is.na(.))) %>% \n  select(Missing) %>% \n  arrange(desc(Missing)) %>% \n  rownames_to_column(var = \"Item\") %>% \n  mutate(Percentage = Missing/nrow(df)*100) %>% \n  mutate(Item = factor(Item, levels = rev(Item))) %>%\n  ggplot(aes(x = Item, y = Percentage)) +\n  geom_col() +\n  coord_flip() +\n  ggtitle(\"Missing data per item\") +\n  xlab(\"Items\") +\n  ylab(\"Percentage of responses missing\")\n\n\n\n\n\nNo missing data, which makes this easier. We also need to check how the Sex variable has been coded and which responses are present in the data.\n\n\nCode\ndf %>% \n  distinct(Sex)\n\n\n# A tibble: 5 × 1\n  Sex              \n  <chr>            \n1 Male             \n2 Female           \n3 CONSENT REVOKED  \n4 Prefer not to say\n5 DATA EXPIRED     \n\n\nWe’ll recode all responses apart from Male/Female as missing (NA).\n\n\nCode\ndf$Sex <- car::recode(df$Sex,\"'CONSENT REVOKED'=NA;\n                      'Prefer not to say'=NA;\n                      'DATA EXPIRED'=NA\")\n\n\nLet’s make the variable a factor (instead of character class) and put in in a vector separate from the item dataframe.\n\n\nCode\ndif.sex <- factor(df$Sex)\n\n\nAnd remove our DIF demographic variable from the item dataset.\n\n\nCode\ndf$Sex <- NULL\n\n\nWe can now make use of a very simple function included in this package!\n\n\nCode\nRIdemographics(dif.sex, \"Sex\")\n\n\n\n\n \n  \n    Sex \n    n \n    Percent \n  \n \n\n  \n    Female \n    896 \n    48.4 \n  \n  \n    Male \n    955 \n    51.6 \n  \n\n\n\n\n\nLet’s move on to the age variable.\n\n\nCode\nglimpse(df$age)\n\n\n num [1:1856] 27 32 21 27 20 22 23 25 21 26 ...\n\n\nSometimes age is provided in categories, but here we have a numeric variable with age in years. Let’s have a quick look at the age distribution using a histogram, and calculate mean, sd and range.\n\n\nCode\n### simpler version of the ggplot below\n# hist(df$age, col = \"#009ca6\")\n# \n# df %>% \n#   summarise(Mean = round(mean(age, na.rm = T),1),\n#             StDev = round(sd(age, na.rm = T),1)\n#             )\n\nggplot(df) +\n  geom_histogram(aes(x = age), \n                 fill = \"#009ca6\",\n                 col = \"black\") +\n  geom_vline(xintercept = mean(df$age), \n             linewidth = 1.5,\n             linetype = 2,\n             col = \"#ffe500\") +\n  annotate(\"rect\", ymin = 0, ymax = Inf, \n           xmin = (mean(df$age) - sd(df$age)), xmax = (mean(df$age) + sd(df$age)), \n           alpha = .3) +\n  labs(title = \"\",\n       x = \"Age in years\",\n       y = \"Number of respondents\",\n       caption = glue(\"Note. Mean age is {round(mean(df$age, na.rm = T),1)} years with a standard deviation of {round(sd(df$age, na.rm = T),1)}. Age range is {min(df$age)} to {max(df$age)}.\")\n       ) +\n  theme(plot.caption = element_text(hjust = 0, face = \"italic\"))\n\n\n\n\n\nAge also needs to be a separate vector, and removed from the item dataframe.\n\n\nCode\ndif.age <- df$age\ndf$age <- NULL\n\n\nThere is also a grouping variable which needs to be converted to a factor.\n\n\nCode\ndif.group <- factor(df$Group)\ndf$Group <- NULL\nRIdemographics(dif.group, \"Group\")\n\n\n\n\n \n  \n    Group \n    n \n    Percent \n  \n \n\n  \n    Earlier Start \n    903 \n    48.7 \n  \n  \n    Later Start \n    953 \n    51.3 \n  \n\n\n\n\n\nWith only item data remaining in the dataframe, we can easily rename the items in the item dataframe. These names match the itemlabels variable itemnr.\n\n\nCode\nnames(df) <- itemlabels$itemnr\n\n\nNow we are all set for the psychometric analysis!"
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#descriptives",
    "href": "raschrvignette/RaschRvign.html#descriptives",
    "title": "RISEkbmRasch",
    "section": "2 Descriptives",
    "text": "2 Descriptives\nFirst, let’s familiarize ourselves with the data.\n\n2.1 Overall responses\nThis provides us with an overall picture of the data distribution, and any oddities/mistakes made in recoding the item data from categories to numbers will be clearly visible.\n\n\nCode\nRIallresp(df)\n\n\n\n\n\n\n\nResponse category\n\n\nNumber of responses\n\n\nPercent\n\n\n\n\n\n\n1\n\n\n9444\n\n\n50.9\n\n\n\n\n2\n\n\n4147\n\n\n22.3\n\n\n\n\n3\n\n\n2689\n\n\n14.5\n\n\n\n\n4\n\n\n1732\n\n\n9.3\n\n\n\n\n5\n\n\n548\n\n\n3.0\n\n\n\n\n\n\n\nMost R packages for the Rasch model require the lowest response category to be zero, which makes it necessary for us to recode our data, from 1-5 to 0-4.\n\n\nCode\ndf <- df %>% \n  mutate(across(everything(), ~ car::recode(.x, \"1=0;2=1;3=2;4=3;5=4\", as.factor = F)))\n\n# always check that your recoding worked as intended.\nRIallresp(df)\n\n\n\n\n\n\n\nResponse category\n\n\nNumber of responses\n\n\nPercent\n\n\n\n\n\n\n0\n\n\n9444\n\n\n50.9\n\n\n\n\n1\n\n\n4147\n\n\n22.3\n\n\n\n\n2\n\n\n2689\n\n\n14.5\n\n\n\n\n3\n\n\n1732\n\n\n9.3\n\n\n\n\n4\n\n\n548\n\n\n3.0\n\n\n\n\n\n\n\n\n2.1.1 Floor/ceiling effects\nNow, we can also look at the raw distribution of sum scores. The RIrawdist() function is a bit crude, since it requires responses in all response categories to accurately calculate max and min scores.\n\n\nCode\nRIrawdist(df)\n\n\n\n\n\nWe can see a floor effect with 11.8% of participants responding in the lowest category for all items.\n\n\n2.1.2 Guttman structure\nWhile not really necessary, it could be interesting to see whether the response patterns follow a Guttman-like structure. Items and persons are sorted based on lower->higher responses, and we should see the color move from yellow in the lower left corner to blue in the upper right corner.\n\n\nCode\nRIheatmap(df)\n\n\n\n\n\nIn this data, we see the floor effect on the left, with 11.8% of respondents all yellow, and a rather weak Guttman structure. This could also be due to a low variation in item locations/difficulties.\n\n\n\n2.2 Item level descriptives\nThere are many ways to look at the item level data, and we’ll get them all together in the tab-panel below. The RItileplot() is probably most informative, since it provides the number of responses in each response category for each item. It is usually recommended to have at least ~10 responses in each category for psychometric analysis, no matter which methodology is used.\nKudos to Solomon Kurz for providing the idea and code on which the tile plot function is built!\nMost people will be familiar with the barplot, and this is probably most intuitive to understand the response distribution within each item. However, if there are many items it will take a while to review, and does not provide the same overview as a tileplot or stacked bars.\n\n\nCode\n# this code chunk creates a small table in the margin beside the panel-tabset output below,\n# showing all items currently in the df dataframe\n# the chunk option \"#| column: margin\" is necessary for the layout to work as intended\nRIlistItemsMargin(df, fontsize = 13)\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_15\n\n\nScared\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_18\n\n\nGuilty\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nTile plotStacked barsBarplotsExpected Value Curves\n\n\n\n\nCode\nRItileplot(df)\n\n\n\n\n\n\n\n\n\nCode\nRIbarstack(df)\n\n\n\n\n\n\n\n\n\nCode\nRIbarplot(df)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIteration in WLE/MLE estimation  1   | Maximal change  2.9412 \nIteration in WLE/MLE estimation  2   | Maximal change  2.0165 \nIteration in WLE/MLE estimation  3   | Maximal change  0.7121 \nIteration in WLE/MLE estimation  4   | Maximal change  0.1212 \nIteration in WLE/MLE estimation  5   | Maximal change  0.0032 \nIteration in WLE/MLE estimation  6   | Maximal change  1e-04 \nIteration in WLE/MLE estimation  7   | Maximal change  0 \n----\n WLE Reliability= 0.761 \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n....................................................\n Plots exported in png format into folder:\n /Users/magnuspjo/Library/CloudStorage/OneDrive-RISE/Dokument/R/RISEkbmRaschVignette/raschrvignette/Plots\n\n\n\n\n\nCode\nlibrary(TAM)\ntam1 <- tam(as.matrix(df), irtmodel = \"PCM\") # run TAM Rasch Partial Credit Model on our data\nplot(tam1) # create figures\n\n\nThe expected value curves are made using the TAM package, which uses Marginal Maximum Likelihood (MML) estimation. It is a good way to check if any of your items may need reversed response categories, amongst other things. However, it is rather verbose in its output (as you can see above), which doesn’t look very nice when used with Quarto and you only want to see the figures in your output document.\n\n\n\n\nWhile response patterns are skewed for all items, there are more than 10 responses in each category for all items."
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#rasch-analysis-1",
    "href": "raschrvignette/RaschRvign.html#rasch-analysis-1",
    "title": "RISEkbmRasch",
    "section": "3 Rasch analysis 1",
    "text": "3 Rasch analysis 1\nThe eRm package and Conditional Maximum Likelihood (CML) estimation will be used primarily, with the Partial Credit Model.\nThis is also where the five basic psychometric aspects are good to recall.\n\nUnidimensionality\nResponse categories\nInvariance\nTargeting\nMeasurement uncertainties (reliability)\n\nWe will begin by looking at unidimensionality, response categories, and targeting in parallel below. For unidimensionality, we are mostly interested in item fit and residual correlations, as well as PCA of residuals and loadings on the first residual contrast. At the same time, disordered response categories can influence item fit, and targeting can be useful if it is necessary to remove items due to residual correlations.\nWhen unidimensionality and response categories are found to work adequately, we will move on to invariance testing. And when/if invariance looks good, we can investigate reliability/measurement uncertainties.\nIn the tabset-panel below, each tab will have some explanatory text.\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_15\n\n\nScared\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_18\n\n\nGuilty\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fitPCAResidual correlations1st contrast loadingsAnalysis of response categoriesTargetingItem hierarchy\n\n\n\n\nCode\nRIitemfitPCM2(df, 300, 32, cpu = 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    PANAS_11 \n    1.146 \n    1.105 \n    1.781 \n    1.086 \n  \n  \n    PANAS_12 \n    0.776 \n    0.776 \n    -1.865 \n    -2.397 \n  \n  \n    PANAS_13 \n    1.237 \n    1.091 \n    1.311 \n    0.663 \n  \n  \n    PANAS_14 \n    1.01 \n    0.979 \n    -0.001 \n    -0.128 \n  \n  \n    PANAS_15 \n    0.664 \n    0.724 \n    -2.804 \n    -3.195 \n  \n  \n    PANAS_16 \n    0.71 \n    0.736 \n    -2.565 \n    -3.176 \n  \n  \n    PANAS_17 \n    0.839 \n    0.872 \n    -1.2 \n    -1.239 \n  \n  \n    PANAS_18 \n    1.061 \n    1 \n    0.268 \n    0.215 \n  \n  \n    PANAS_19 \n    0.844 \n    0.844 \n    -1.627 \n    -2.001 \n  \n  \n    PANAS_20 \n    1.16 \n    1.121 \n    1.439 \n    1.401 \n  \n\n\n\n\n\nSince we have a sample size over 500, ZSTD item fit values would be inflated if we use the whole sample. To better estimate accurate ZSTD values the RIitemfitPCM() function allows for multiple subsampling. It is recommended to use a sample size between 250 and 500 (Hagell and Westergren 2016). We will set the sample size to 300 and run 32 subsamples. For faster processing, RIitemfitPCM2() enables parallel processing with multiple CPUs/cores.\n“Outfit” refers to item fit when person location is relatively far away from the item location, while “infit” provides estimates for when person and item locations are close together. MSQ should be close to 1, with lower and upper cutoffs by default set to 0.7 and 1.3, while ZSTD should be around 0, with cutoffs set to +/- 2.0. Infit is usually more important. You can change the cutoffs by using options in the function, see ?RIitemfitPCM for details.\nA low item fit indicates that responses are too predictable and provide little information. A high item fit can indicate several things, most often multidimensionality or, for questionnaires, a question that is difficult to interpret. This could for instance be a question that asks about two things at the same time.\n\n\n\n\nCode\nRIpcmPCA(df)\n\n\n\nPCA of Rasch model residuals\n \n  \n    Eigenvalues \n  \n \n\n  \n    1.79 \n  \n  \n    1.46 \n  \n  \n    1.28 \n  \n  \n    1.14 \n  \n  \n    1.06 \n  \n\n\n\n\n\nThe first eigenvalue should be below 2.0 to support unidimensionality.\n\n\n\n\nCode\nRIresidcorr(df, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    PANAS_11 \n    PANAS_12 \n    PANAS_13 \n    PANAS_14 \n    PANAS_15 \n    PANAS_16 \n    PANAS_17 \n    PANAS_18 \n    PANAS_19 \n    PANAS_20 \n  \n \n\n  \n    PANAS_11 \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_12 \n    -0.1 \n     \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_13 \n    -0.05 \n    -0.01 \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_14 \n    -0.11 \n    0.09 \n    0.07 \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_15 \n    -0.14 \n    -0.13 \n    -0.22 \n    -0.29 \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_16 \n    -0.17 \n    -0.1 \n    -0.25 \n    -0.27 \n    0.39 \n     \n     \n     \n     \n     \n  \n  \n    PANAS_17 \n    -0.18 \n    -0.09 \n    -0.09 \n    -0.19 \n    -0.13 \n    -0.08 \n     \n     \n     \n     \n  \n  \n    PANAS_18 \n    -0.19 \n    -0.15 \n    -0.16 \n    -0.18 \n    -0.15 \n    -0.13 \n    0.32 \n     \n     \n     \n  \n  \n    PANAS_19 \n    -0.12 \n    -0.13 \n    -0.25 \n    -0.14 \n    0.1 \n    0.08 \n    -0.21 \n    -0.12 \n     \n     \n  \n  \n    PANAS_20 \n    -0.06 \n    -0.22 \n    -0.07 \n    -0.05 \n    -0.13 \n    -0.19 \n    -0.16 \n    -0.15 \n    -0.08 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.098, which is 0.2 above the average correlation.\n\n\n\n\n\nThe matrix above shows item-pair correlations of item residuals, with highlights in red showing correlations 0.2 or more above the average item-pair correlation (for all item-pairs) (Christensen, Makransky, and Horton 2017). Rasch model residual correlations are calculated using the mirt package. Again, you can set the cutoff value you desire in the function.\n\n\n\n\nCode\nRIloadLoc(df)\n\n\n\n\n\nHere we see item locations and their loadings on the first residual contrast. This figure can be helpful to identify clusters in data or multidimensionality.\n\n\n\n\nCode\nmodel1 <- PCM(df)\nplotICC(model1, xlim = c(-4,4),\n        xlab = \"Latent variable\",\n        ylab = \"Probability\",\n        legpos = \"topleft\")\n# see ?eRm::plotICC for various options\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEach response category for each item should have a curve that indicates it to be the most probably response at some point on the latent variable (x axis in the figure).\n\n\n\n\nCode\n# increase fig-height above as needed, if you have many items\nRItargeting(df)\n\n\n\n\n\nThis figure shows how well the items fit the respondents/persons. It is a sort of Wright Map that shows person and item threshold locations on the same logit scale.\nThe top part shows person location histogram, the middle part a histogram of item threshold locations, and the bottom part shows individual item threshold locations. The histograms also show means and standard deviations.\n\n\n\n\nCode\nRIitemHierarchy(df)\n\n\n\n\n\n\n\n\n\nItem 18 has issues with the second lowest category, which needs to be merged with the lowest category.\nItem 15 shows low item fit.\nTwo item-pairs show residual correlations above the cutoff value:\n\n15 and 16 (scared and afraid)\n17 and 18 (ashamed and guilty)\n\nSince item 15 also had low item fit, we will remove it. And since item 18 had problems with response categories, it will also be removed.\n\n\nCode\nremoved.items <- c(\"PANAS_15\",\"PANAS_18\")\n\ndf2 <- df %>% \n  select(!any_of(removed.items))"
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#rasch-analysis-2",
    "href": "raschrvignette/RaschRvign.html#rasch-analysis-2",
    "title": "RISEkbmRasch",
    "section": "4 Rasch analysis 2",
    "text": "4 Rasch analysis 2\nWith items 15 and 18 removed.\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fitPCAResidual correlations1st contrast loadingsTargetingItem hierarchy\n\n\n\n\nCode\nRIitemfitPCM2(df2, 300, 32, cpu = 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    PANAS_11 \n    1.058 \n    1.031 \n    0.709 \n    0.256 \n  \n  \n    PANAS_12 \n    0.714 \n    0.722 \n    -2.72 \n    -3.29 \n  \n  \n    PANAS_13 \n    1.127 \n    1.007 \n    1.102 \n    0.063 \n  \n  \n    PANAS_14 \n    0.908 \n    0.879 \n    -1.033 \n    -1.271 \n  \n  \n    PANAS_16 \n    0.758 \n    0.788 \n    -2.044 \n    -2.422 \n  \n  \n    PANAS_17 \n    0.897 \n    0.925 \n    -0.45 \n    -0.799 \n  \n  \n    PANAS_19 \n    0.848 \n    0.842 \n    -1.8 \n    -1.998 \n  \n  \n    PANAS_20 \n    1.082 \n    1.058 \n    0.545 \n    0.707 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIpcmPCA(df2)\n\n\n\nPCA of Rasch model residuals\n \n  \n    Eigenvalues \n  \n \n\n  \n    1.52 \n  \n  \n    1.33 \n  \n  \n    1.19 \n  \n  \n    1.15 \n  \n  \n    1.00 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIresidcorr(df2, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    PANAS_11 \n    PANAS_12 \n    PANAS_13 \n    PANAS_14 \n    PANAS_16 \n    PANAS_17 \n    PANAS_19 \n    PANAS_20 \n  \n \n\n  \n    PANAS_11 \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_12 \n    -0.16 \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_13 \n    -0.11 \n    -0.06 \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_14 \n    -0.19 \n    0.03 \n    0 \n     \n     \n     \n     \n     \n  \n  \n    PANAS_16 \n    -0.16 \n    -0.08 \n    -0.25 \n    -0.28 \n     \n     \n     \n     \n  \n  \n    PANAS_17 \n    -0.18 \n    -0.07 \n    -0.09 \n    -0.19 \n    0 \n     \n     \n     \n  \n  \n    PANAS_19 \n    -0.15 \n    -0.15 \n    -0.28 \n    -0.19 \n    0.12 \n    -0.16 \n     \n     \n  \n  \n    PANAS_20 \n    -0.1 \n    -0.27 \n    -0.12 \n    -0.11 \n    -0.18 \n    -0.15 \n    -0.09 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.071, which is 0.2 above the average correlation.\n\n\n\n\n\n\n\n\n\nCode\nRIloadLoc(df2)\n\n\n\n\n\n\n\n\n\nCode\n# increase fig-height above as needed, if you have many items\nRItargeting(df2)\n\n\n\n\n\n\n\n\n\nCode\nRIitemHierarchy(df2)\n\n\n\n\n\n\n\n\n\nItems 12 and 16 are a bit low in item fit ZSTD.\nItems 16 and 19 have a residual correlation at about 0.25 above the average level.\nLet’s look at DIF before taking action upon this information."
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#invariancedif",
    "href": "raschrvignette/RaschRvign.html#invariancedif",
    "title": "RISEkbmRasch",
    "section": "5 Invariance/DIF",
    "text": "5 Invariance/DIF\n\n5.1 Sex\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\nTableFigure itemsFigure thresholds\n\n\n\n\nCode\nRIdifTable(df2, dif.sex)\n\n\n\n\n\n\n\n\n\n\nItem\n\n\n2\n\n\n3\n\n\nMean location\n\n\nStDev\n\n\nMaxDiff\n\n\n\n\n\n\nPANAS_11\n\n\n-0.314\n\n\n-0.196\n\n\n-0.255\n\n\n0.083\n\n\n0.117\n\n\n\n\nPANAS_12\n\n\n0.028\n\n\n-0.044\n\n\n-0.008\n\n\n0.051\n\n\n0.073\n\n\n\n\nPANAS_13\n\n\n0.553\n\n\n0.402\n\n\n0.478\n\n\n0.107\n\n\n0.151\n\n\n\n\nPANAS_14\n\n\n-0.328\n\n\n-0.183\n\n\n-0.255\n\n\n0.103\n\n\n0.146\n\n\n\n\nPANAS_16\n\n\n0.004\n\n\n0.114\n\n\n0.059\n\n\n0.078\n\n\n0.111\n\n\n\n\nPANAS_17\n\n\n0.520\n\n\n0.290\n\n\n0.405\n\n\n0.163\n\n\n0.230\n\n\n\n\nPANAS_19\n\n\n-0.495\n\n\n-0.355\n\n\n-0.425\n\n\n0.099\n\n\n0.140\n\n\n\n\nPANAS_20\n\n\n0.032\n\n\n-0.028\n\n\n0.002\n\n\n0.042\n\n\n0.059\n\n\n\n\n\n\n\n\n\n\n\nCode\nRIdifFigure(df2, dif.sex)\n\n\n\n\n\n\n\n\n\nCode\nRIdifFigThresh(df2, dif.sex)\n\n\n\n\n\n\n\n\nWhile no item shows problematic levels of DIF regarding item location, as shown by the table, there is an interesting pattern in the thresholds figure. The lowest threshold seems to be slightly lower for node 3 (Male) for all items.\nThe results do not require any action since the difference is very small.\n\n\n5.2 Age\n\n\nCode\nRIdifTable(df2, dif.age)\n\n\n[1] \"No significant DIF found.\"\n\n\nNo DIF found for age.\n\n\n5.3 Group\n\n\nCode\nRIdifTable(df2, dif.group)\n\n\n[1] \"No significant DIF found.\"\n\n\nAnd no DIF for group.\n\n\n5.4 Sex and age\nWhile it has not yet been implemented in this package, the psychotree package allows for DIF interaction analysis with multiple DIF variables. This will also serve as an example of how to look at and modify a package function, if needed. Use View(RIdifTable) to view the code in the function. Then we can copy the code needed and modify it.\n\n\nCode\ndfin <- df2\n\ndf.tree <- data.frame(matrix(ncol = 0, nrow = nrow(dfin)))\ndf.tree$difdata <- as.matrix(dfin)\ndf.tree$dif.sex <- dif.sex\ndf.tree$dif.age <- dif.age\n\npctree.out <- pctree(difdata ~ dif.sex + dif.age, data = df.tree)\nplot(pctree.out)\n\n\n\n\n\nNo interaction effect found for sex and age. The analysis only shows the previously identified DIF for sex."
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#rasch-analysis-3",
    "href": "raschrvignette/RaschRvign.html#rasch-analysis-3",
    "title": "RISEkbmRasch",
    "section": "6 Rasch analysis 3",
    "text": "6 Rasch analysis 3\nThere were no issues with DIF for any item. We still need to address the previously identified problems\nItems 12 and 16 are a bit low in item fit ZSTD.\nItems 16 and 19 have a residual correlation at about 0.25 above the average level.\nWe’ll remove item 19 since item 16 has better targeting.\n\n\nCode\nremoved.items <- c(removed.items,\"PANAS_19\")\n\ndf2 <- df2 %>% \n  select(!any_of(removed.items))\n\n\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fitResidual correlationsTargetingItem hierarchy\n\n\n\n\nCode\nRIitemfitPCM2(df2, 300, 32, 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    PANAS_11 \n    1.009 \n    1.002 \n    0.194 \n    0.276 \n  \n  \n    PANAS_12 \n    0.687 \n    0.697 \n    -3.08 \n    -3.496 \n  \n  \n    PANAS_13 \n    1 \n    0.94 \n    0.014 \n    -0.732 \n  \n  \n    PANAS_14 \n    0.861 \n    0.842 \n    -1.457 \n    -1.991 \n  \n  \n    PANAS_16 \n    0.836 \n    0.831 \n    -1.577 \n    -2.091 \n  \n  \n    PANAS_17 \n    0.858 \n    0.879 \n    -1.034 \n    -1.188 \n  \n  \n    PANAS_20 \n    1.068 \n    1.045 \n    0.849 \n    0.466 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIresidcorr(df2, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    PANAS_11 \n    PANAS_12 \n    PANAS_13 \n    PANAS_14 \n    PANAS_16 \n    PANAS_17 \n    PANAS_20 \n  \n \n\n  \n    PANAS_11 \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_12 \n    -0.18 \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_13 \n    -0.15 \n    -0.11 \n     \n     \n     \n     \n     \n  \n  \n    PANAS_14 \n    -0.22 \n    0 \n    -0.04 \n     \n     \n     \n     \n  \n  \n    PANAS_16 \n    -0.14 \n    -0.06 \n    -0.26 \n    -0.26 \n     \n     \n     \n  \n  \n    PANAS_17 \n    -0.2 \n    -0.09 \n    -0.14 \n    -0.22 \n    0 \n     \n     \n  \n  \n    PANAS_20 \n    -0.12 \n    -0.29 \n    -0.16 \n    -0.13 \n    -0.15 \n    -0.17 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.053, which is 0.2 above the average correlation.\n\n\n\n\n\n\n\n\n\nCode\nRItargeting(df2)\n\n\n\n\n\n\n\n\n\nCode\nRIitemHierarchy(df2)\n\n\n\n\n\n\n\n\n\nNo problematic residual correlations, but item 12 is clearly low in item fit."
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#rasch-analysis-4",
    "href": "raschrvignette/RaschRvign.html#rasch-analysis-4",
    "title": "RISEkbmRasch",
    "section": "7 Rasch analysis 4",
    "text": "7 Rasch analysis 4\n\n\nCode\nremoved.items <- c(removed.items,\"PANAS_12\")\n\ndf2 <- df2 %>% \n  select(!any_of(removed.items))\n\n\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fitResidual correlationsTargetingItem hierarchy\n\n\n\n\nCode\nRIitemfitPCM2(df2, 300, 32, 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    PANAS_11 \n    0.926 \n    0.932 \n    -0.961 \n    -0.751 \n  \n  \n    PANAS_13 \n    0.906 \n    0.892 \n    -0.551 \n    -1.47 \n  \n  \n    PANAS_14 \n    0.85 \n    0.83 \n    -1.45 \n    -2.157 \n  \n  \n    PANAS_16 \n    0.796 \n    0.802 \n    -1.914 \n    -2.012 \n  \n  \n    PANAS_17 \n    0.803 \n    0.835 \n    -1.233 \n    -1.603 \n  \n  \n    PANAS_20 \n    0.958 \n    0.944 \n    -0.44 \n    -0.517 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIresidcorr(df2, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    PANAS_11 \n    PANAS_13 \n    PANAS_14 \n    PANAS_16 \n    PANAS_17 \n    PANAS_20 \n  \n \n\n  \n    PANAS_11 \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_13 \n    -0.17 \n     \n     \n     \n     \n     \n  \n  \n    PANAS_14 \n    -0.22 \n    -0.03 \n     \n     \n     \n     \n  \n  \n    PANAS_16 \n    -0.15 \n    -0.26 \n    -0.24 \n     \n     \n     \n  \n  \n    PANAS_17 \n    -0.22 \n    -0.14 \n    -0.21 \n    0.01 \n     \n     \n  \n  \n    PANAS_20 \n    -0.17 \n    -0.2 \n    -0.16 \n    -0.18 \n    -0.2 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.03, which is 0.2 above the average correlation.\n\n\n\n\n\n\n\n\n\nCode\nRItargeting(df2)\n\n\n\n\n\n\n\n\n\nCode\nRIitemHierarchy(df2)\n\n\n\n\n\n\n\n\n\nThere are several item thresholds that are very closely located, as shown in the item hierarchy figure. This is not ideal, since it will inflate reliability estimates.\nHowever, we will not modify the response categories for this sample/simple analysis, we only note that this is not ideal."
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#reliability",
    "href": "raschrvignette/RaschRvign.html#reliability",
    "title": "RISEkbmRasch",
    "section": "8 Reliability",
    "text": "8 Reliability\n\n\nCode\nRItif(df2)\n\n\n\n\n\nWhile 11.8% of respondents had a floor effect based on the raw sum scored data, the figure above shows us that 41.8% are located below the point where the items produce a person separation index (reliability) of 0.7 or higher."
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#person-fit",
    "href": "raschrvignette/RaschRvign.html#person-fit",
    "title": "RISEkbmRasch",
    "section": "9 Person fit",
    "text": "9 Person fit\nWe can also look at how the respondents fit the Rasch model with these items.\n\n\nCode\nRIpfit(df2)"
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#item-parameters",
    "href": "raschrvignette/RaschRvign.html#item-parameters",
    "title": "RISEkbmRasch",
    "section": "10 Item parameters",
    "text": "10 Item parameters\nTo allow others (and oneself) to use the item parameters estimated for estimation of person locations/thetas, we should make the item parameters available. The function will also write a csv-file with the item threshold locations. Estimations of person locations/thetas can be done with the thetaEst() function from the catR package.\nIt can also be done by using the new (as of 2023-02-04) RIestTheta() function in this package (does not yet work with dichotomous data), which uses thetaEst() across all the participants in your dataframe.\nFirst, we’ll output the parameters into a table.\n\n\nCode\nRIitemparams(df2)\n\n\n\n\n \n  \n      \n    Threshold 1 \n    Threshold 2 \n    Threshold 3 \n    Threshold 4 \n    Item location \n  \n \n\n  \n    PANAS_11 \n    -1.24 \n    -0.34 \n    0.07 \n    1.47 \n    -0.01 \n  \n  \n    PANAS_13 \n    0.06 \n    0.14 \n    0.83 \n    1.78 \n    0.7 \n  \n  \n    PANAS_14 \n    -0.99 \n    -0.26 \n    0.12 \n    1.11 \n    -0.01 \n  \n  \n    PANAS_16 \n    -0.22 \n    -0.13 \n    0.22 \n    1.34 \n    0.3 \n  \n  \n    PANAS_17 \n    0.28 \n    0.30 \n    0.75 \n    1.17 \n    0.63 \n  \n  \n    PANAS_20 \n    -0.90 \n    -0.28 \n    0.62 \n    1.59 \n    0.26 \n  \n\n\n\n\n\nRIitemparams() will automatically write a CSV-file called “itemParameters.csv”. The filename can be specified manually.\n\n10.1 Ordinal sum score to interval score\nThis table shows the corresponding sum score values and logit scores, with standard errors for each logit value.\n\n\nCode\nRIscoreSE(df2)\n\n\n\n\n\n\n\nOrdinal sum score\n\n\nLogit score\n\n\nLogit std.error\n\n\n\n\n\n\n0\n\n\n-3.21\n\n\nNA\n\n\n\n\n1\n\n\n-2.45\n\n\n1.00\n\n\n\n\n2\n\n\n-1.76\n\n\n0.71\n\n\n\n\n3\n\n\n-1.35\n\n\n0.58\n\n\n\n\n4\n\n\n-1.05\n\n\n0.51\n\n\n\n\n5\n\n\n-0.82\n\n\n0.46\n\n\n\n\n6\n\n\n-0.62\n\n\n0.43\n\n\n\n\n7\n\n\n-0.44\n\n\n0.41\n\n\n\n\n8\n\n\n-0.28\n\n\n0.39\n\n\n\n\n9\n\n\n-0.13\n\n\n0.38\n\n\n\n\n10\n\n\n0.01\n\n\n0.37\n\n\n\n\n11\n\n\n0.15\n\n\n0.37\n\n\n\n\n12\n\n\n0.28\n\n\n0.37\n\n\n\n\n13\n\n\n0.42\n\n\n0.37\n\n\n\n\n14\n\n\n0.56\n\n\n0.38\n\n\n\n\n15\n\n\n0.71\n\n\n0.39\n\n\n\n\n16\n\n\n0.86\n\n\n0.40\n\n\n\n\n17\n\n\n1.03\n\n\n0.42\n\n\n\n\n18\n\n\n1.22\n\n\n0.45\n\n\n\n\n19\n\n\n1.43\n\n\n0.48\n\n\n\n\n20\n\n\n1.69\n\n\n0.53\n\n\n\n\n21\n\n\n2.01\n\n\n0.61\n\n\n\n\n22\n\n\n2.46\n\n\n0.73\n\n\n\n\n23\n\n\n3.19\n\n\n1.02\n\n\n\n\n24\n\n\n3.99\n\n\nNA\n\n\n\n\n\n\n\n\n\n10.2 Estimating interval level person scores\nBased on the Rasch analysis output of item parameters, we can estimate each individuals location or score (also known as “theta”). Similarly to the RIitemfitPCM() function there is also a parallel processing version of the function available, which makes use of 4 cores by default.\nRIestThetas() by default uses WL estimation of a partial credit model and outputs a vector of person locations on the logit scale. If you do not supply a matrix of item (threshold) locations, it will use eRm’s CML PCM to calculate it based on the dataframe input.\n\n\nCode\nlibrary(furrr) # for a parallel processing version of purrr::map_dbl\ndf2$PersonScores <- RIestThetas2(df2, cpu = 8)\n\n\nRIestThetas() can also be used with a pre-specified item (threshold) location matrix. The choice of WL as default is due to the lower bias compared to ML estimation (Warm 1989).\nIf you would like to use an existing item matrix, this code may be helpful:\n\n\nCode\nitems <- as.matrix(read.csv(\"itemParameters.csv\"))\nitems\n\n\n     Threshold.1 Threshold.2 Threshold.3 Threshold.4\n[1,]     -1.2389     -0.3363      0.0748      1.4745\n[2,]      0.0638      0.1417      0.8278      1.7834\n[3,]     -0.9927     -0.2567      0.1160      1.1097\n[4,]     -0.2164     -0.1275      0.2169      1.3363\n[5,]      0.2815      0.3040      0.7492      1.1715\n[6,]     -0.8955     -0.2828      0.6150      1.5903\n\n\nAs you can see, this is a matrix object (not a dataframe), with each item as a row, and the threshold locations as columns.\nFinally, we’ll look at the distribution of person scores using a simple histogram.\n\n\nCode\nhist(df2$PersonScores, col = \"#009ca6\")"
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#software-used",
    "href": "raschrvignette/RaschRvign.html#software-used",
    "title": "RISEkbmRasch",
    "section": "11 Software used",
    "text": "11 Software used\nThe grateful package is a nice way to give credit to the packages used in making the analysis. It is not available on CRAN, but can be installed directly from GitHub (see code below). The package can create both a bibliography file and a table object, which is handy for automatically creating a reference list based on the packages used (or at least explicitly loaded).\n\n\nCode\nlibrary(grateful) # devtools::install_github(\"Pakillo/grateful\")\npkgs <- cite_packages(cite.tidyverse = TRUE, \n                      output = \"table\",\n                      bib.file = \"grateful-refs.bib\",\n                      include.RStudio = TRUE)\nformattable(pkgs, \n            table.attr = 'class=\\\"table table-striped\\\" style=\"font-size: 13px; font-family: Lato; width: 80%\"')\n\n\n\n\n\n\n\nPackage\n\n\nVersion\n\n\nCitation\n\n\n\n\n\n\nbase\n\n\n4.2.2\n\n\nR Core Team (2022)\n\n\n\n\ncar\n\n\n3.1.1\n\n\nFox and Weisberg (2019)\n\n\n\n\ncowplot\n\n\n1.1.1\n\n\nWilke (2020)\n\n\n\n\neRm\n\n\n1.0.2\n\n\nMair and Hatzinger (2007b); Mair and Hatzinger (2007a); Hatzinger and Rusch (2009); Rusch, Maier, and Hatzinger (2013); Koller, Maier, and Hatzinger (2015); Debelak and Koller (2019); Mair, Hatzinger, and Maier (2021)\n\n\n\n\nforeach\n\n\n1.5.2\n\n\nMicrosoft and Weston (2022)\n\n\n\n\nformattable\n\n\n0.2.1\n\n\nRen and Russell (2021)\n\n\n\n\nfurrr\n\n\n0.3.1\n\n\nVaughan and Dancho (2022)\n\n\n\n\nggrepel\n\n\n0.9.3\n\n\nSlowikowski (2023)\n\n\n\n\nglue\n\n\n1.6.2\n\n\nHester and Bryan (2022)\n\n\n\n\ngrateful\n\n\n0.1.11\n\n\nRodríguez-Sánchez, Jackson, and Hutchins (2022)\n\n\n\n\nkableExtra\n\n\n1.3.4\n\n\nZhu (2021)\n\n\n\n\nknitr\n\n\n1.42\n\n\nXie (2014); Xie (2015); Xie (2023)\n\n\n\n\nmatrixStats\n\n\n0.63.0\n\n\nBengtsson (2022)\n\n\n\n\nmirt\n\n\n1.37.1\n\n\nChalmers (2012)\n\n\n\n\npsych\n\n\n2.2.9\n\n\nRevelle (2022)\n\n\n\n\npsychotree\n\n\n0.16.0\n\n\nTrepte and Verbeet (2010); Strobl, Wickelmaier, and Zeileis (2011); Strobl, Kopf, and Zeileis (2015); Komboz, Zeileis, and Strobl (2018); Wickelmaier and Zeileis (2018)\n\n\n\n\nreshape\n\n\n0.8.9\n\n\nWickham (2007)\n\n\n\n\nRISEkbmRasch\n\n\n0.1.9\n\n\nJohansson (2023)\n\n\n\n\nrmarkdown\n\n\n2.20\n\n\nXie, Allaire, and Grolemund (2018); Xie, Dervieux, and Riederer (2020); Allaire et al. (2023)\n\n\n\n\nTAM\n\n\n4.1.4\n\n\n@\n\n\n\n\ntidyverse\n\n\n1.3.2\n\n\nWickham et al. (2019)"
  },
  {
    "objectID": "parameterizedQ.html",
    "href": "parameterizedQ.html",
    "title": "Automating reports with Quarto",
    "section": "",
    "text": "Let’s say you have survey data from a group of 28 municipalities. You have worked out a Quarto file to generate nice tables and figures and want to produce 28 different reports that all use the same Quarto file for each of the municipalities. Additionally, you want one collective report using the complete dataset.\nInstead of creating 28+1 different .qmd files and running them manually, this can be easily automated with parameterization. This will save huge amounts of time, for instance when you find that typo in one figure and need to re-render all 29 reports. Or, even better, when you get next years survey results and can re-use the whole setup and instantly generate your new reports!"
  },
  {
    "objectID": "parameterizedQ.html#setting-up",
    "href": "parameterizedQ.html#setting-up",
    "title": "Automating reports with Quarto",
    "section": "2 Setting up",
    "text": "2 Setting up\nIn our simple case, we will only use one parameter, the name of the municipality. Of course there could be any number of parameters that you may want to customize, which you are likely to easily be able to do based on this example.\nWe need to add two rows to the qmd-file YAML:\n---\nparams:\n  municipality: \"All municipalities\"\n---\nThis creates the object params$municipality and gives it a default value.\nNext, we create our little script, in a file called render.R, starting with a vector of municipalities. This could of course be read from a file, and our example will only contain four.\nmunicipalities <- c(\"All municipalities\",\"Vallentuna\",\"Vaxholm\",\"Södertälje\",\"Botkyrka\")\nlibrary(glue)\nlibrary(quarto)\nlibrary(purrr)\n\nwalk(1:length(municipalities), function(i) {\n  muni <- municipalities[i]\n  \n  outfile <- glue(\"{Sys.Date()}_{muni}.html\") # gives the filename a date and the municipality name\n  \n  quarto_render(input = \"yourQuartoTemplate.qmd\", \n                execute_params = list(\"grupp\" = muni), \n                output_file = outfile,\n                output_format = \"html\")\n})\n\nAs you can see, we make use of purrr::walk, which means you may be able to use furrr::future_walk to enable parallel processing?! I have only tried this briefly, but it didn’t work. Could be worth looking into if you need to generate a lot of reports often.\n\n\n2.1 Final settings\nNow, we just need to make sure that our Quarto file uses the params. For simplicity, I expect that you read your data from a file into a dataframe. We will make use of a simple if and else combined with dplyr::filter() from the tidyverse.\n# read data\ndf <- read_csv(\"yourDataFile.csv\")\n\nif (params$municipality == \"All municipalities\") {\n  df <- df\n} else {\n  df <- df %>% \n  filter(municipality == params$municipality)\n}\nSave your files and run the render.R script! Files will be output to the same directory as your .qmd file.\nIf you’d like to use the municipality in the first headline of the report, you can add a line like this to the Quarto file:\n\n\nCode\n## `r params$municipality` {.unnumbered}\n\n\n\n\n\n\n\n\nNote\n\n\n\nA far more complex example can be found here (and some of my code was adapted from there): https://github.com/Pecners/sra_pullout/blob/main/render.R"
  },
  {
    "objectID": "raschrvignette/RaschRvign.html#sec-rasch",
    "href": "raschrvignette/RaschRvign.html#sec-rasch",
    "title": "RISEkbmRasch",
    "section": "3 Rasch analysis 1",
    "text": "3 Rasch analysis 1\nThe eRm package and Conditional Maximum Likelihood (CML) estimation will be used primarily, with the Partial Credit Model.\nThis is also where the five basic psychometric aspects are good to recall.\n\nUnidimensionality\nResponse categories\nInvariance\nTargeting\nMeasurement uncertainties (reliability)\n\nWe will begin by looking at unidimensionality, response categories, and targeting in parallel below. For unidimensionality, we are mostly interested in item fit and residual correlations, as well as PCA of residuals and loadings on the first residual contrast. At the same time, disordered response categories can influence item fit, and targeting can be useful if it is necessary to remove items due to residual correlations.\nWhen unidimensionality and response categories are found to work adequately, we will move on to invariance testing. And when/if invariance looks good, we can investigate reliability/measurement uncertainties.\nIn the tabset-panel below, each tab will have some explanatory text.\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nPANAS_11\n\n\nDistressed\n\n\n\n\nPANAS_12\n\n\nUpset\n\n\n\n\nPANAS_13\n\n\nHostile\n\n\n\n\nPANAS_14\n\n\nIrritable\n\n\n\n\nPANAS_15\n\n\nScared\n\n\n\n\nPANAS_16\n\n\nAfraid\n\n\n\n\nPANAS_17\n\n\nAshamed\n\n\n\n\nPANAS_18\n\n\nGuilty\n\n\n\n\nPANAS_19\n\n\nNervous\n\n\n\n\nPANAS_20\n\n\nJittery\n\n\n\n\n\n\n\n\nItem fitPCAResidual correlations1st contrast loadingsAnalysis of response categoriesTargetingItem hierarchy\n\n\n\n\nCode\nRIitemfitPCM2(df, 300, 32, cpu = 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    PANAS_11 \n    1.146 \n    1.105 \n    1.781 \n    1.086 \n  \n  \n    PANAS_12 \n    0.776 \n    0.776 \n    -1.865 \n    -2.397 \n  \n  \n    PANAS_13 \n    1.237 \n    1.091 \n    1.311 \n    0.663 \n  \n  \n    PANAS_14 \n    1.01 \n    0.979 \n    -0.001 \n    -0.128 \n  \n  \n    PANAS_15 \n    0.664 \n    0.724 \n    -2.804 \n    -3.195 \n  \n  \n    PANAS_16 \n    0.71 \n    0.736 \n    -2.565 \n    -3.176 \n  \n  \n    PANAS_17 \n    0.839 \n    0.872 \n    -1.2 \n    -1.239 \n  \n  \n    PANAS_18 \n    1.061 \n    1 \n    0.268 \n    0.215 \n  \n  \n    PANAS_19 \n    0.844 \n    0.844 \n    -1.627 \n    -2.001 \n  \n  \n    PANAS_20 \n    1.16 \n    1.121 \n    1.439 \n    1.401 \n  \n\n\n\n\n\nSince we have a sample size over 500, ZSTD item fit values would be inflated if we use the whole sample. To better estimate accurate ZSTD values the RIitemfitPCM() function allows for multiple subsampling. It is recommended to use a sample size between 250 and 500 (Hagell and Westergren 2016). We will set the sample size to 300 and run 32 subsamples. For faster processing, RIitemfitPCM2() enables parallel processing with multiple CPUs/cores.\n“Outfit” refers to item fit when person location is relatively far away from the item location, while “infit” provides estimates for when person and item locations are close together. MSQ should be close to 1, with lower and upper cutoffs by default set to 0.7 and 1.3, while ZSTD should be around 0, with cutoffs set to +/- 2.0. Infit is usually more important. You can change the cutoffs by using options in the function, see ?RIitemfitPCM for details.\nA low item fit indicates that responses are too predictable and provide little information. A high item fit can indicate several things, most often multidimensionality or, for questionnaires, a question that is difficult to interpret. This could for instance be a question that asks about two things at the same time.\n\n\n\n\nCode\nRIpcmPCA(df)\n\n\n\nPCA of Rasch model residuals\n \n  \n    Eigenvalues \n  \n \n\n  \n    1.79 \n  \n  \n    1.46 \n  \n  \n    1.28 \n  \n  \n    1.14 \n  \n  \n    1.06 \n  \n\n\n\n\n\nThe first eigenvalue should be below 2.0 to support unidimensionality.\n\n\n\n\nCode\nRIresidcorr(df, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    PANAS_11 \n    PANAS_12 \n    PANAS_13 \n    PANAS_14 \n    PANAS_15 \n    PANAS_16 \n    PANAS_17 \n    PANAS_18 \n    PANAS_19 \n    PANAS_20 \n  \n \n\n  \n    PANAS_11 \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_12 \n    -0.1 \n     \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_13 \n    -0.05 \n    -0.01 \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_14 \n    -0.11 \n    0.09 \n    0.07 \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_15 \n    -0.14 \n    -0.13 \n    -0.22 \n    -0.29 \n     \n     \n     \n     \n     \n     \n  \n  \n    PANAS_16 \n    -0.17 \n    -0.1 \n    -0.25 \n    -0.27 \n    0.39 \n     \n     \n     \n     \n     \n  \n  \n    PANAS_17 \n    -0.18 \n    -0.09 \n    -0.09 \n    -0.19 \n    -0.13 \n    -0.08 \n     \n     \n     \n     \n  \n  \n    PANAS_18 \n    -0.19 \n    -0.15 \n    -0.16 \n    -0.18 \n    -0.15 \n    -0.13 \n    0.32 \n     \n     \n     \n  \n  \n    PANAS_19 \n    -0.12 \n    -0.13 \n    -0.25 \n    -0.14 \n    0.1 \n    0.08 \n    -0.21 \n    -0.12 \n     \n     \n  \n  \n    PANAS_20 \n    -0.06 \n    -0.22 \n    -0.07 \n    -0.05 \n    -0.13 \n    -0.19 \n    -0.16 \n    -0.15 \n    -0.08 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.098, which is 0.2 above the average correlation.\n\n\n\n\n\nThe matrix above shows item-pair correlations of item residuals, with highlights in red showing correlations 0.2 or more above the average item-pair correlation (for all item-pairs) (Christensen, Makransky, and Horton 2017). Rasch model residual correlations are calculated using the mirt package. Again, you can set the cutoff value you desire in the function.\n\n\n\n\nCode\nRIloadLoc(df)\n\n\n\n\n\nHere we see item locations and their loadings on the first residual contrast. This figure can be helpful to identify clusters in data or multidimensionality.\n\n\n\n\nCode\nmodel1 <- PCM(df)\nplotICC(model1, xlim = c(-4,4),\n        xlab = \"Latent variable\",\n        ylab = \"Probability\",\n        legpos = \"topleft\")\n# see ?eRm::plotICC for various options\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEach response category for each item should have a curve that indicates it to be the most probably response at some point on the latent variable (x axis in the figure).\n\n\n\n\nCode\n# increase fig-height above as needed, if you have many items\nRItargeting(df)\n\n\n\n\n\nThis figure shows how well the items fit the respondents/persons. It is a sort of Wright Map that shows person and item threshold locations on the same logit scale.\nThe top part shows person location histogram, the middle part a histogram of item threshold locations, and the bottom part shows individual item threshold locations. The histograms also show means and standard deviations.\n\n\n\n\nCode\nRIitemHierarchy(df)\n\n\n\n\n\n\n\n\n\nItem 18 has issues with the second lowest category, which needs to be merged with the lowest category.\nItem 15 shows low item fit.\nTwo item-pairs show residual correlations above the cutoff value:\n\n15 and 16 (scared and afraid)\n17 and 18 (ashamed and guilty)\n\nSince item 15 also had low item fit, we will remove it. And since item 18 had problems with response categories, it will also be removed.\n\n\nCode\nremoved.items <- c(\"PANAS_15\",\"PANAS_18\")\n\ndf2 <- df %>% \n  select(!any_of(removed.items))"
  },
  {
    "objectID": "latentResp/LatentResponse.html",
    "href": "latentResp/LatentResponse.html",
    "title": "What’s in a latent score?",
    "section": "",
    "text": "We use questionnaires to measure latent variables based on multiple items/indicators, but the connection between item responses and a latent score is often unclear. Here, I will present a way to visualize item responses and their corresponding latent score and measurement uncertainty that hopefully makes what lies behind the latent score much easier to understand.\nJump ahead to Section 5 to see the visualization and skip the psychometric background."
  },
  {
    "objectID": "latentResp/LatentResponse.html#background",
    "href": "latentResp/LatentResponse.html#background",
    "title": "What’s in a latent score?",
    "section": "1 Background",
    "text": "1 Background\nThe Mental Health Continuum Short Form (Ryff, 1989; Ryff, 2014) will be used as an example. I have conducted a Rasch analysis and preliminary results indicate that some modifications are needed for the response categories, and some items need to be removed. This will be reported elsewhere in greater detail. Here, only a summary of the changes and the measurement properties of the final set of items will be reported.\nThe analysis makes use of my R package for Rasch psychometric analysis, which in turn loads a lot of packages. See the RISEkbmRasch vignette and GitHub package repository for more details.\n\n\nCode\nlibrary(RISEkbmRasch)\nlibrary(arrow)\nlibrary(ggdist)\nlibrary(ggpp)\n\n### some commands exist in multiple packages, here we define preferred ones that are frequently used\nselect <- dplyr::select\ncount <- dplyr::count\nrecode <- car::recode\nrename <- dplyr::rename\n\n# import item information\nitemlabels <- read_excel(\"/Volumes/magnuspjo/RegionUppsala/data/RegUaItemlabelsEng.xls\", sheet = 1) %>% \n  filter(str_detect(itemnr,\"mhc\"))\nitemresponses <- read_excel(\"/Volumes/magnuspjo/RegionUppsala/data/RegUaItemlabelsEng.xls\", sheet = 3) %>% \n  rename(`How often during the past month did you feel...` = item)\n\n# import recoded data\ndf.all <- read_parquet(\"/Volumes/magnuspjo/RegionUppsala/data/RegUaLHUdata.parquet\")\ndf <- df.all\n\n# recode response categories to numerics\ndf <- df %>% \n  mutate(across(starts_with(\"I1_\"), ~ recode(.x,\"'Aldrig'=0;\n                    'En eller två gånger'=1;\n                    '1 gång/vecka'=2;\n                    '2-3 gånger/vecka'=3;\n                    'Nästan dagligen'=4;\n                    'Dagligen'=5\",\n                    as.factor = FALSE)\n  ))\n\ndf <- df %>% \n  filter(inars %in% c(2019,2021)) %>% \n  mutate(Age = recode(arskurs,\"1='13 yo';2='15 yo';3=' 17 yo';9=NA;99=NA\", as.factor = TRUE),\n         Gender = recode(kon,\"99=NA;9=NA;2='Girls';1='Boys'\", as.factor = T),\n         ) %>% \n  filter(Age %in% c(\"15 yo\",\"17 yo\")) %>% \n  select(starts_with(\"I1_\"),Age,Gender) %>% \n  na.omit()\n\n# create variables for analysis of Differential Item Functioning\ndif.age <- df$Age\ndif.gender <- df$Gender\ndf$Age <- NULL\ndf$Gender <- NULL\n\n# set variable names to match\nnames(df) <- itemlabels$itemnr\n\n\nQuestions in the MHC-SF are prefixed with How often during the past month did you feel…, and the items are listed below in Section 2 in the right-hand side margin.\nSix response categories were used, as specified in the original MHC-SF: every day, almost every day, about 2 or 3 times a week, about once a week, once or twice, never and the Rasch analysis found them disordered for all items. This means that some response categories do not contribute meaningful differential information to the latent score, compared to an adjacent response category - the categories are too similar to the respondents. After merging never with once or twice, and about once a week with about 2 or 3 times a week, the disordering was resolved. However, there are still quite small distances between item category thresholds, as shown in the ICC plots. This leaves us with 4 response categories for each item.\nThe sample consists of 15 and 17 year old Swedish youth, in total 4243 respondents.\n\n\nCode\nfor (i in itemlabels$itemnr) {\n  df[[i]] <- recode(df[[i]],\"1=0;2=1;3=1;4=2;5=3\",\n                    as.factor = FALSE)\n}\n\n\n\nTileplotICC plots\n\n\n\n\nCode\nRItileplot(df)\n\n\n\n\n\n\n\n\n\nCode\nermOut <- PCM(df)\nplotICC(ermOut)"
  },
  {
    "objectID": "latentResp/LatentResponse.html#rasch-analysis-summary",
    "href": "latentResp/LatentResponse.html#rasch-analysis-summary",
    "title": "What’s in a latent score?",
    "section": "2 Rasch analysis summary",
    "text": "2 Rasch analysis summary\nFive items were removed, mostly due to issues of multidimensionality and large residual correlations. Here, the analysis of remaining items is presented.\n\n\nCode\nremoved.items <- c(\"mhc2\",\"mhc3\",\"mhc4\",\"mhc8\",\"mhc7\")\ndf <- df %>% \n  select(!any_of(removed.items))\n\n\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nmhc1 \n\n\nhappy\n\n\n\n\nmhc5 \n\n\nhat you belonged to a community\n\n\n\n\nmhc6 \n\n\nthat our society is becoming a better place for people like you\n\n\n\n\nmhc9 \n\n\nthat you liked most parts of your personality\n\n\n\n\nmhc10\n\n\ngood at managing the responsibilities of your daily life\n\n\n\n\nmhc11\n\n\nthat you had warm and trusting relationships with others\n\n\n\n\nmhc12\n\n\nthat you had experiences that challenged you to grow and become a better person\n\n\n\n\nmhc13\n\n\nconfident to think or express your own ideas and opinions\n\n\n\n\nmhc14\n\n\nthat your life has a sense of direction or meaning to it\n\n\n\n\n\n\n\nItem fitPCAResidual correlations1st contrast loadingsTargetingItem hierarchyDIFReliability\n\n\n\n\nCode\nRIitemfitPCM2(df, 350, 32, 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    mhc1 \n    1.025 \n    0.996 \n    0.32 \n    -0.146 \n  \n  \n    mhc5 \n    1.192 \n    1.125 \n    1.58 \n    1.834 \n  \n  \n    mhc6 \n    1.336 \n    1.228 \n    2.185 \n    2.32 \n  \n  \n    mhc9 \n    0.727 \n    0.746 \n    -3.59 \n    -3.87 \n  \n  \n    mhc10 \n    0.974 \n    0.95 \n    -0.322 \n    -0.801 \n  \n  \n    mhc11 \n    0.779 \n    0.794 \n    -2.601 \n    -2.924 \n  \n  \n    mhc12 \n    0.947 \n    0.927 \n    -0.515 \n    -1.179 \n  \n  \n    mhc13 \n    0.882 \n    0.876 \n    -1.389 \n    -1.559 \n  \n  \n    mhc14 \n    0.693 \n    0.704 \n    -3.757 \n    -4.414 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIpcmPCA(df)\n\n\n\nPCA of Rasch model residuals\n \n  \n    Eigenvalues \n  \n \n\n  \n    1.51 \n  \n  \n    1.27 \n  \n  \n    1.20 \n  \n  \n    1.13 \n  \n  \n    1.09 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIresidcorr(df, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    mhc1 \n    mhc5 \n    mhc6 \n    mhc9 \n    mhc10 \n    mhc11 \n    mhc12 \n    mhc13 \n    mhc14 \n  \n \n\n  \n    mhc1 \n     \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    mhc5 \n    -0.02 \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    mhc6 \n    -0.11 \n    -0.05 \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    mhc9 \n    -0.07 \n    -0.23 \n    -0.11 \n     \n     \n     \n     \n     \n     \n  \n  \n    mhc10 \n    -0.19 \n    -0.22 \n    -0.12 \n    -0.07 \n     \n     \n     \n     \n     \n  \n  \n    mhc11 \n    -0.04 \n    0.01 \n    -0.19 \n    -0.13 \n    -0.07 \n     \n     \n     \n     \n  \n  \n    mhc12 \n    -0.24 \n    -0.26 \n    -0.11 \n    -0.15 \n    -0.04 \n    -0.08 \n     \n     \n     \n  \n  \n    mhc13 \n    -0.16 \n    -0.18 \n    -0.17 \n    0.01 \n    -0.15 \n    -0.21 \n    -0.04 \n     \n     \n  \n  \n    mhc14 \n    -0.07 \n    -0.24 \n    -0.14 \n    -0.04 \n    -0.09 \n    -0.16 \n    -0.02 \n    -0.04 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.084, which is 0.2 above the average correlation.\n\n\n\n\n\n\n\n\n\nCode\nRIloadLoc(df)\n\n\n\n\n\n\n\n\n\nCode\n# increase fig-height above as needed, if you have many items\nRItargeting(df)\n\n\n\n\n\n\n\n\n\nCode\nRIitemHierarchy(df)\n\n\n\n\n\n\n\nInteraction between age and gender.\n\n\nCode\ndf.tree <- data.frame(matrix(ncol = 0, nrow = nrow(df)))\ndf.tree$difdata <- as.matrix(df)\ndf.tree$dif.gender <- dif.gender\ndf.tree$dif.age<- dif.age\n\npctree.out <- pctree(difdata ~ dif.gender + dif.age, data = df.tree)\nplot(pctree.out)\n\n\n\n\n\n\n\n\n\nCode\nRItif(df)\n\n\n\n\n\n\n\n\nItem fit shows some minor issues, but we’ll leave them as good enough for the primary goal of visualization. Do have a look at the item hierarchy and give it some thought?"
  },
  {
    "objectID": "latentResp/LatentResponse.html#estimating-latent-scores",
    "href": "latentResp/LatentResponse.html#estimating-latent-scores",
    "title": "What’s in a latent score?",
    "section": "3 Estimating latent scores",
    "text": "3 Estimating latent scores\nFirst, we need the item threshold locations to later estimate person scores.\n\n\nCode\nRIitemparams(df, \"mhcItemParams.csv\")\n\n\n\n\n \n  \n      \n    Threshold 1 \n    Threshold 2 \n    Threshold 3 \n    Item location \n  \n \n\n  \n    mhc1 \n    -2.17 \n    -0.38 \n    1.19 \n    -0.45 \n  \n  \n    mhc5 \n    -0.60 \n    -0.01 \n    0.66 \n    0.02 \n  \n  \n    mhc6 \n    1.17 \n    2.34 \n    3.14 \n    2.22 \n  \n  \n    mhc9 \n    -0.78 \n    0.55 \n    1.25 \n    0.34 \n  \n  \n    mhc10 \n    -1.16 \n    0.49 \n    1.30 \n    0.21 \n  \n  \n    mhc11 \n    -1.49 \n    0.11 \n    0.82 \n    -0.19 \n  \n  \n    mhc12 \n    -0.81 \n    1.06 \n    1.32 \n    0.52 \n  \n  \n    mhc13 \n    -1.00 \n    0.53 \n    0.91 \n    0.15 \n  \n  \n    mhc14 \n    -0.57 \n    0.64 \n    0.92 \n    0.33 \n  \n\n\n\n\n\nCode\nMHCitemParameters <- as.matrix(read.csv(\"mhcItemParams.csv\"))\n\n\nActually, the function used to estimate person scores can automatically estimate the item parameters. But since this is just a practical use case, and you might be interested in applying the item parameters on your own dataset (since I cannot share this data), I thought it worth mentioning and displaying the parameters.\n\n\nCode\ndf$MHCscore <- RIestThetas2(df, itemParams = MHCitemParameters, cpu = 8)\n\n\n\n3.1 Plotting the distribution\n\n\nCode\n# for visualization, we add Gender back to the df\ndf$Gender <- dif.gender\n\nggplot(df,aes(x = MHCscore, y = Gender, fill = Gender)) +\n  stat_slab(\n    side = \"right\", show.legend = F,\n    scale = 0.7, \n    aes(fill_ramp = after_stat(level)),\n    .width = c(.50, .75, 1)\n  ) +\n  stat_summary(fun.data = \"mean_cl_normal\",show.legend = F, size = .4,\n               position = position_dodge2nudge(x=.05,width = .8)) +\nscale_fill_ramp_discrete(from='black', aesthetics = \"fill_ramp\") +\n      scale_fill_viridis_d(begin = 0.4, direction = -1) +\n\n  xlab(\"MHC-SF latent scores\") +\n  ylab(\"\") +\n  theme_minimal() +\n  theme_rise() +\n  theme(axis.text.y = element_text(size = 13))"
  },
  {
    "objectID": "latentResp/LatentResponse.html#preparing-visualization",
    "href": "latentResp/LatentResponse.html#preparing-visualization",
    "title": "What’s in a latent score?",
    "section": "4 Preparing visualization",
    "text": "4 Preparing visualization\nLet’s use some sample values, based on distribution quintiles, as a starting point.\n\n\nCode\nquintiles <- quantile(df$MHCscore, probs = c(0.2,0.4,0.6,0.8))\nquintiles\n\n\n       20%        40%        60%        80% \n-0.5148720  0.1545279  0.7598396  1.6389371 \n\n\nNow we find the mode responses for each item based on the respondents in each quintile.\nFirst, lets make groupings based on the quintile cutoff values.\n\n\nCode\ndf <- df %>% \n  mutate(Q_group = case_when(MHCscore < quintiles[1] ~ \"0-20\",\n                             MHCscore >= quintiles[1] & MHCscore < quintiles[2] ~ \"20-40\",\n                             MHCscore >= quintiles[2] & MHCscore < quintiles[3] ~ \"40-60\",\n                             MHCscore >= quintiles[3] & MHCscore < quintiles[4] ~ \"60-80\",\n                             MHCscore >= quintiles[4] ~ \"80-100\",\n                             TRUE ~ NA)\n         )\n\ndf %>% \n  count(Q_group) %>% \n  ggplot(aes(x = Q_group, y = n, fill = Q_group)) +\n  geom_col() +\n  scale_fill_viridis_d(begin = 0.4, direction = -1) +\n  theme_minimal() +\n  theme_rise()\n\n\n\n\n\nIdentifying mode response categories for each item for each group is the next step\n\n\nCode\nMode <- function(x) {\n  ux <- unique(x)\n  ux[which.max(tabulate(match(x, ux)))]\n}\n\n# a df with one row per group and one column per item\nmodeResponses <- data.frame(matrix(ncol = 9, nrow = 5))\nnames(modeResponses) <- df %>% \n  select(starts_with(\"mhc\")) %>% \n  select(!MHCscore) %>% \n  names()\n\nfor (i in names(modeResponses)) {\n  q0 <- Mode(df %>% filter(Q_group == \"0-20\") %>% select(i) %>% na.omit() %>% pull())\n  q1 <- Mode(df %>% filter(Q_group == \"20-40\") %>% select(i) %>% na.omit() %>% pull())\n  q2 <- Mode(df %>% filter(Q_group == \"40-60\") %>% select(i) %>% na.omit() %>% pull())\n  q3 <- Mode(df %>% filter(Q_group == \"60-80\") %>% select(i) %>% na.omit() %>% pull())\n  q4 <- Mode(df %>% filter(Q_group == \"80-100\") %>% select(i) %>% na.omit() %>% pull())\n  modeResponses[[i]] <- rbind(q0,q1,q2,q3,q4)\n}\n\n# transform to dataframe with numeric variables for later extraction as vectors\nmodeResponses <- modeResponses %>% \n  t() %>% \n  as.data.frame()\n\n\nEstimating the latent score and SEM for each group’s mode response pattern.\n\n\nCode\n# sorry for the copy+paste code here...\navg1 <- thetaEst(MHCitemParameters, modeResponses$V1, model = \"PCM\", method = \"WL\")\nsem1 <- semTheta(thEst = avg1, it = MHCitemParameters, x = modeResponses$V1, model = \"PCM\", method = \"WL\")\navg2 <- thetaEst(MHCitemParameters, modeResponses$V2, model = \"PCM\", method = \"WL\")\nsem2 <- semTheta(thEst = avg2, it = MHCitemParameters, x = modeResponses$V2, model = \"PCM\", method = \"WL\")\navg3 <- thetaEst(MHCitemParameters, modeResponses$V3, model = \"PCM\", method = \"WL\")\nsem3 <- semTheta(thEst = avg3, it = MHCitemParameters, x = modeResponses$V3, model = \"PCM\", method = \"WL\")\navg4 <- thetaEst(MHCitemParameters, modeResponses$V4, model = \"PCM\", method = \"WL\")\nsem4 <- semTheta(thEst = avg4, it = MHCitemParameters, x = modeResponses$V4, model = \"PCM\", method = \"WL\")\navg5 <- thetaEst(MHCitemParameters, modeResponses$V5, model = \"PCM\", method = \"WL\")\nsem5 <- semTheta(thEst = avg5, it = MHCitemParameters, x = modeResponses$V5, model = \"PCM\", method = \"WL\")"
  },
  {
    "objectID": "latentResp/LatentResponse.html#sec-visualization",
    "href": "latentResp/LatentResponse.html#sec-visualization",
    "title": "What’s in a latent score?",
    "section": "5 Visualization",
    "text": "5 Visualization\n\n\nCode\nrespTable <- function(qLevel) {\n    # typical response patterns for different risk levels\n    if (qLevel == \"0-20\") {\n      p.resp <- modeResponses$V1 \n    } else if (qLevel == \"20-40\") {\n      p.resp <- modeResponses$V2 \n    } else if (qLevel == \"40-60\") {\n      p.resp <- modeResponses$V3 \n    } else if (qLevel == \"60-80\") {\n      p.resp <- modeResponses$V4 \n    } else if (qLevel == \"80-100\") {\n      p.resp <- modeResponses$V5 \n    }\n\n    itemresponses %>%\n      formattable(.,\n        align = c(\"r\", \"l\", \"c\", \"c\", \"c\", \"c\", \"c\"), list(\n          formattable::area(row = 1, col = 3 + p.resp[1]) ~ color_tile(\"lightblue\", \"lightpink\"),\n          formattable::area(row = 2, col = 3 + p.resp[2]) ~ color_tile(\"lightblue\", \"lightpink\"),\n          formattable::area(row = 3, col = 3 + p.resp[3]) ~ color_tile(\"lightblue\", \"lightpink\"),\n          formattable::area(row = 4, col = 3 + p.resp[4]) ~ color_tile(\"lightblue\", \"lightpink\"),\n          formattable::area(row = 5, col = 3 + p.resp[5]) ~ color_tile(\"lightblue\", \"lightpink\"),\n          formattable::area(row = 6, col = 3 + p.resp[6]) ~ color_tile(\"lightblue\", \"lightpink\"),\n          formattable::area(row = 7, col = 3 + p.resp[7]) ~ color_tile(\"lightblue\", \"lightpink\"),\n          formattable::area(row = 8, col = 3 + p.resp[8]) ~ color_tile(\"lightblue\", \"lightpink\"),\n          formattable::area(row = 9, col = 3 + p.resp[9]) ~ color_tile(\"lightblue\", \"lightpink\")\n        ),\n        table.attr = 'class=\\\"table table-striped\\\" style=\"font-size: 15px; font-family: Lato\"'\n      )\n}\n\nrespDist <- function(qLevel) {\n  if (qLevel == \"0-20\") {\n      score <- avg1\n      sem <- sem1\n    } else if (qLevel == \"20-40\") {\n      score <- avg2\n      sem <- sem2\n    } else if (qLevel == \"40-60\") {\n      score <- avg3\n      sem <- sem3\n    } else if (qLevel == \"60-80\") {\n      score <- avg4\n      sem <- sem4\n    } else if (qLevel == \"80-100\") {\n      score <- avg5\n      sem <- sem5\n    }\n\n  qlabel <- qLevel\n  ggplot(df, aes(x = MHCscore, y = Gender, fill = Gender)) +\n  stat_slab(\n    side = \"right\", show.legend = F,\n    scale = 0.8, justification = 0,\n    aes(fill_ramp = after_stat(level)),\n    .width = c(.50, .75, 1)\n    \n  ) +\n  stat_summary(\n    fun.data = \"mean_cl_normal\", show.legend = F, size = .4,\n    position = position_dodge2nudge(x = .05, width = .8)\n  ) +\n  scale_fill_ramp_discrete(from = \"black\", aesthetics = \"fill_ramp\") +\n  scale_fill_viridis_d(begin = 0.4, direction = -1) +\n  geom_vline(xintercept = score, color = \"red\", linetype = 2) +\n  annotate(\"rect\", ymin = 0, ymax = Inf, xmin = score - sem, xmax = score + sem, alpha = .15) +\n  #annotate(\"text\", label = qlabel, x = score-0.12, y = 1.5, \n  #         angle = 90, size = 4, family = \"Lato\") +\n  xlab(\"MHC-SF latent scores\") +\n  ylab(\"\") +\n  theme_minimal() +\n  theme_rise(axissize = 11) +\n  theme(axis.text.y = element_text(size = 11)) +\n  scale_y_discrete(expand = c(0,0))\n}\n\n\n\n0-2020-4040-6060-8080-100All together\n\n\n\n\nCode\nrespTable(\"0-20\")\n\n\n\n\n\n\n\nitemnr\n\n\nHow often during the past month did you feel…\n\n\nCategory0\n\n\nCategory1\n\n\nCategory2\n\n\nCategory3\n\n\n\n\n\n\nmhc1\n\n\nhappy\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc5\n\n\nthat you belonged to a community\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc6\n\n\nthat our society is becoming a better place for people like you\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc9\n\n\nthat you liked most parts of your personality\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc10\n\n\ngood at managing the responsibilities of your daily life\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc11\n\n\nthat you had warm and trusting relationships with others\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc12\n\n\nthat you had experiences that challenged you to grow and become a better person\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc13\n\n\nconfident to think or express your own ideas and opinions\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc14\n\n\nthat your life has a sense of direction or meaning to it\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\n\n\n\nCode\nrespDist(\"0-20\")\n\n\n\n\n\n\n\n\n\nCode\nrespTable(\"20-40\")\n\n\n\n\n\n\n\nitemnr\n\n\nHow often during the past month did you feel…\n\n\nCategory0\n\n\nCategory1\n\n\nCategory2\n\n\nCategory3\n\n\n\n\n\n\nmhc1\n\n\nhappy\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc5\n\n\nthat you belonged to a community\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc6\n\n\nthat our society is becoming a better place for people like you\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc9\n\n\nthat you liked most parts of your personality\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc10\n\n\ngood at managing the responsibilities of your daily life\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc11\n\n\nthat you had warm and trusting relationships with others\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc12\n\n\nthat you had experiences that challenged you to grow and become a better person\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc13\n\n\nconfident to think or express your own ideas and opinions\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc14\n\n\nthat your life has a sense of direction or meaning to it\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\n\n\n\nCode\nrespDist(\"20-40\")\n\n\n\n\n\n\n\n\n\nCode\nrespTable(\"40-60\")\n\n\n\n\n\n\n\nitemnr\n\n\nHow often during the past month did you feel…\n\n\nCategory0\n\n\nCategory1\n\n\nCategory2\n\n\nCategory3\n\n\n\n\n\n\nmhc1\n\n\nhappy\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc5\n\n\nthat you belonged to a community\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc6\n\n\nthat our society is becoming a better place for people like you\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc9\n\n\nthat you liked most parts of your personality\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc10\n\n\ngood at managing the responsibilities of your daily life\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc11\n\n\nthat you had warm and trusting relationships with others\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc12\n\n\nthat you had experiences that challenged you to grow and become a better person\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc13\n\n\nconfident to think or express your own ideas and opinions\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc14\n\n\nthat your life has a sense of direction or meaning to it\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\n\n\n\nCode\nrespDist(\"40-60\")\n\n\n\n\n\n\n\n\n\nCode\nrespTable(\"60-80\")\n\n\n\n\n\n\n\nitemnr\n\n\nHow often during the past month did you feel…\n\n\nCategory0\n\n\nCategory1\n\n\nCategory2\n\n\nCategory3\n\n\n\n\n\n\nmhc1\n\n\nhappy\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc5\n\n\nthat you belonged to a community\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc6\n\n\nthat our society is becoming a better place for people like you\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc9\n\n\nthat you liked most parts of your personality\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc10\n\n\ngood at managing the responsibilities of your daily life\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc11\n\n\nthat you had warm and trusting relationships with others\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc12\n\n\nthat you had experiences that challenged you to grow and become a better person\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc13\n\n\nconfident to think or express your own ideas and opinions\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc14\n\n\nthat your life has a sense of direction or meaning to it\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\n\n\n\nCode\nrespDist(\"60-80\")\n\n\n\n\n\n\n\n\n\nCode\nrespTable(\"80-100\")\n\n\n\n\n\n\n\nitemnr\n\n\nHow often during the past month did you feel…\n\n\nCategory0\n\n\nCategory1\n\n\nCategory2\n\n\nCategory3\n\n\n\n\n\n\nmhc1\n\n\nhappy\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc5\n\n\nthat you belonged to a community\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc6\n\n\nthat our society is becoming a better place for people like you\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc9\n\n\nthat you liked most parts of your personality\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc10\n\n\ngood at managing the responsibilities of your daily life\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc11\n\n\nthat you had warm and trusting relationships with others\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc12\n\n\nthat you had experiences that challenged you to grow and become a better person\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc13\n\n\nconfident to think or express your own ideas and opinions\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\nmhc14\n\n\nthat your life has a sense of direction or meaning to it\n\n\nNever/once or twice\n\n\n1-3 times a week\n\n\nAlmost every day\n\n\nEvery day\n\n\n\n\n\n\n\nCode\nrespDist(\"80-100\")\n\n\n\n\n\n\n\n\n\nCode\nggplot(df, aes(x = MHCscore, y = Gender, fill = Gender)) +\n  stat_slab(\n    side = \"right\", show.legend = F,\n    scale = 0.7,\n    aes(fill_ramp = after_stat(level)),\n    .width = c(.50, .75, 1)\n  ) +\n  stat_summary(\n    fun.data = \"mean_cl_normal\", show.legend = F, size = .4,\n    position = position_dodge2nudge(x = .05, width = .8)\n  ) +\n  scale_fill_ramp_discrete(from = \"black\", aesthetics = \"fill_ramp\") +\n  scale_fill_viridis_d(begin = 0.4, direction = -1) +\n  geom_vline(xintercept = avg1, color = \"orange\", linetype = 2) +\n  annotate(\"rect\", ymin = 0, ymax = Inf, xmin = avg1 - sem1, xmax = avg1 + sem1, alpha = .1) +\n  annotate(\"text\", label = \"0-20\", x = avg1-0.1, y = 1.5, angle = 90, size = 3) +\n  geom_vline(xintercept = avg2, color = \"orange\", linetype = 2) +\n  annotate(\"rect\", ymin = 0, ymax = Inf, xmin = avg2 - sem2, xmax = avg2 + sem2, alpha = .1) +\n  annotate(\"text\", label = \"20-40\", x = avg2-0.1, y = 1.5, angle = 90, size = 3) +\n  geom_vline(xintercept = avg3, color = \"orange\", linetype = 2) +\n  annotate(\"rect\", ymin = 0, ymax = Inf, xmin = avg3 - sem3, xmax = avg3 + sem3, alpha = .1) +\n  annotate(\"text\", label = \"40-60\", x = avg3-0.1, y = 1.5, angle = 90, size = 3) +\n  geom_vline(xintercept = avg4, color = \"orange\", linetype = 2) +\n  annotate(\"text\", label = \"60-80\", x = avg4-0.1, y = 1.5, angle = 90, size = 3) +\n  annotate(\"rect\", ymin = 0, ymax = Inf, xmin = avg4 - sem4, xmax = avg4 + sem4, alpha = .1) +\n  geom_vline(xintercept = avg5, color = \"orange\", linetype = 2) +\n  annotate(\"text\", label = \"80-100\", x = avg5-0.1, y = 1.5, angle = 90, size = 3) +\n  annotate(\"rect\", ymin = 0, ymax = Inf, xmin = avg5 - sem5, xmax = avg5 + sem5, alpha = .1) +\n  xlab(\"MHC-SF latent scores\") +\n  ylab(\"\") +\n  theme_minimal() +\n  theme_rise() +\n  theme(axis.text.y = element_text(size = 12))"
  },
  {
    "objectID": "latentResp/LatentResponse.html#software-used",
    "href": "latentResp/LatentResponse.html#software-used",
    "title": "What’s in a latent score?",
    "section": "7 Software used",
    "text": "7 Software used\n\n\nCode\nlibrary(grateful)\npkgs <- cite_packages(cite.tidyverse = TRUE, \n                      output = \"table\",\n                      bib.file = \"grateful-refs.bib\",\n                      include.RStudio = TRUE)\nformattable(pkgs, \n            table.attr = 'class=\\\"table table-striped\\\" style=\"font-size: 14px; font-family: Lato; width: 80%\"')\n\n\n\n\n\n\n\nPackage\n\n\nVersion\n\n\nCitation\n\n\n\n\n\n\narrow\n\n\n10.0.0\n\n\nRichardson et al. (2022)\n\n\n\n\nbase\n\n\n4.2.2\n\n\nR Core Team (2022)\n\n\n\n\ncar\n\n\n3.1.1\n\n\nFox & Weisberg (2019)\n\n\n\n\nformattable\n\n\n0.2.1\n\n\nRen & Russell (2021)\n\n\n\n\nggdist\n\n\n3.2.0\n\n\nKay (2022)\n\n\n\n\nggpp\n\n\n0.4.5\n\n\nAphalo (2022)\n\n\n\n\ngrateful\n\n\n0.1.11\n\n\nRodríguez-Sánchez et al. (2022)\n\n\n\n\nRISEkbmRasch\n\n\n0.1.9\n\n\nJohansson (2023)\n\n\n\n\nrmarkdown\n\n\n2.20\n\n\nXie et al. (2018); Xie et al. (2020); Allaire et al. (2023)\n\n\n\n\ntidyverse\n\n\n1.3.2\n\n\nWickham et al. (2019)"
  },
  {
    "objectID": "latentResp/LatentResponse.html#sec-rasch",
    "href": "latentResp/LatentResponse.html#sec-rasch",
    "title": "What’s in a latent score?",
    "section": "2 Rasch analysis summary",
    "text": "2 Rasch analysis summary\nFive items were removed, mostly due to issues of multidimensionality and large residual correlations. Here, the analysis of remaining items is presented.\n\n\nCode\nremoved.items <- c(\"mhc2\",\"mhc3\",\"mhc4\",\"mhc8\",\"mhc7\")\ndf <- df %>% \n  select(!any_of(removed.items))\n\n\n\n\n\n\n\n\n\n\nitemnr\n\n\nitem\n\n\n\n\n\n\nmhc1 \n\n\nhappy\n\n\n\n\nmhc5 \n\n\nhat you belonged to a community\n\n\n\n\nmhc6 \n\n\nthat our society is becoming a better place for people like you\n\n\n\n\nmhc9 \n\n\nthat you liked most parts of your personality\n\n\n\n\nmhc10\n\n\ngood at managing the responsibilities of your daily life\n\n\n\n\nmhc11\n\n\nthat you had warm and trusting relationships with others\n\n\n\n\nmhc12\n\n\nthat you had experiences that challenged you to grow and become a better person\n\n\n\n\nmhc13\n\n\nconfident to think or express your own ideas and opinions\n\n\n\n\nmhc14\n\n\nthat your life has a sense of direction or meaning to it\n\n\n\n\n\n\n\nItem fitPCAResidual correlations1st contrast loadingsTargetingItem hierarchyDIFReliability\n\n\n\n\nCode\nRIitemfitPCM2(df, 300, 32, 8)\n\n\n\n\n \n  \n      \n    OutfitMSQ \n    InfitMSQ \n    OutfitZSTD \n    InfitZSTD \n  \n \n\n  \n    mhc1 \n    1.025 \n    0.996 \n    0.416 \n    0.069 \n  \n  \n    mhc5 \n    1.192 \n    1.125 \n    1.889 \n    1.604 \n  \n  \n    mhc6 \n    1.336 \n    1.228 \n    1.757 \n    2.222 \n  \n  \n    mhc9 \n    0.727 \n    0.746 \n    -3.542 \n    -3.697 \n  \n  \n    mhc10 \n    0.974 \n    0.95 \n    -0.092 \n    -0.562 \n  \n  \n    mhc11 \n    0.779 \n    0.794 \n    -2.439 \n    -2.94 \n  \n  \n    mhc12 \n    0.947 \n    0.927 \n    -0.805 \n    -1.026 \n  \n  \n    mhc13 \n    0.882 \n    0.876 \n    -1.466 \n    -1.678 \n  \n  \n    mhc14 \n    0.693 \n    0.704 \n    -3.497 \n    -3.964 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIpcmPCA(df)\n\n\n\nPCA of Rasch model residuals\n \n  \n    Eigenvalues \n  \n \n\n  \n    1.51 \n  \n  \n    1.27 \n  \n  \n    1.20 \n  \n  \n    1.13 \n  \n  \n    1.09 \n  \n\n\n\n\n\n\n\n\n\nCode\nRIresidcorr(df, cutoff = 0.2)\n\n\n\n\n \n  \n      \n    mhc1 \n    mhc5 \n    mhc6 \n    mhc9 \n    mhc10 \n    mhc11 \n    mhc12 \n    mhc13 \n    mhc14 \n  \n \n\n  \n    mhc1 \n     \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    mhc5 \n    -0.02 \n     \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    mhc6 \n    -0.11 \n    -0.05 \n     \n     \n     \n     \n     \n     \n     \n  \n  \n    mhc9 \n    -0.07 \n    -0.23 \n    -0.11 \n     \n     \n     \n     \n     \n     \n  \n  \n    mhc10 \n    -0.19 \n    -0.22 \n    -0.12 \n    -0.07 \n     \n     \n     \n     \n     \n  \n  \n    mhc11 \n    -0.04 \n    0.01 \n    -0.19 \n    -0.13 \n    -0.07 \n     \n     \n     \n     \n  \n  \n    mhc12 \n    -0.24 \n    -0.26 \n    -0.11 \n    -0.15 \n    -0.04 \n    -0.08 \n     \n     \n     \n  \n  \n    mhc13 \n    -0.16 \n    -0.18 \n    -0.17 \n    0.01 \n    -0.15 \n    -0.21 \n    -0.04 \n     \n     \n  \n  \n    mhc14 \n    -0.07 \n    -0.24 \n    -0.14 \n    -0.04 \n    -0.09 \n    -0.16 \n    -0.02 \n    -0.04 \n     \n  \n\n\nNote: \n\n Relative cut-off value (highlighted in red) is 0.084, which is 0.2 above the average correlation.\n\n\n\n\n\n\n\n\n\nCode\nRIloadLoc(df)\n\n\n\n\n\n\n\n\n\nCode\n# increase fig-height above as needed, if you have many items\nRItargeting(df)\n\n\n\n\n\n\n\n\n\nCode\nRIitemHierarchy(df)\n\n\n\n\n\n\n\nInteraction between age and gender.\n\n\nCode\ndf.tree <- data.frame(matrix(ncol = 0, nrow = nrow(df)))\ndf.tree$difdata <- as.matrix(df)\ndf.tree$dif.gender <- dif.gender\ndf.tree$dif.age<- dif.age\n\npctree.out <- pctree(difdata ~ dif.gender + dif.age, data = df.tree)\nplot(pctree.out)\n\n\n\n\n\n\n\nCode\ncutoff <- 0.5\ndiffig <- itempar(pctree.out) %>%\n  as.data.frame() %>%\n  t() %>%\n  as.data.frame() %>%\n  mutate(\n    `Mean location` = rowMeans(.),\n    StDev = rowSds(as.matrix(.))\n  ) %>%\n  rowwise() %>%\n  mutate(MaxDiff = (max(c_across(c(1:(ncol(.) - 2))))) -\n    min(c_across(c(1:(ncol(.) - 2))))) %>%\n  ungroup() %>%\n  mutate(across(where(is.numeric), round, 3)) %>%\n  rownames_to_column(var = \"Item\") %>%\n  mutate(Item = names(df)) %>%\n  relocate(MaxDiff, .after = last_col())\n\n  formattable(diffig,\n    list(MaxDiff = formatter(\"span\",\n      style = ~ style(color = ifelse(MaxDiff < -cutoff,\n        \"red\", ifelse(MaxDiff > cutoff, \"red\", \"black\")\n      ))\n    )\n    ),\n    table.attr = \"class=\\\"table table-striped\\\" style=\\\"font-size: 15px; font-family: Lato\\\"\"\n  )\n\n\n\n\n\n\n\nItem\n\n\n2\n\n\n3\n\n\nMean location\n\n\nStDev\n\n\nMaxDiff\n\n\n\n\n\n\nmhc1\n\n\n-0.836\n\n\n-0.770\n\n\n-0.803\n\n\n0.047\n\n\n0.067\n\n\n\n\nmhc5\n\n\n-0.276\n\n\n-0.390\n\n\n-0.333\n\n\n0.081\n\n\n0.114\n\n\n\n\nmhc6\n\n\n1.774\n\n\n2.021\n\n\n1.897\n\n\n0.175\n\n\n0.247\n\n\n\n\nmhc9\n\n\n-0.148\n\n\n0.109\n\n\n-0.019\n\n\n0.182\n\n\n0.257\n\n\n\n\nmhc10\n\n\n-0.010\n\n\n-0.275\n\n\n-0.143\n\n\n0.187\n\n\n0.265\n\n\n\n\nmhc11\n\n\n-0.356\n\n\n-0.718\n\n\n-0.537\n\n\n0.256\n\n\n0.362\n\n\n\n\nmhc12\n\n\n0.238\n\n\n0.103\n\n\n0.170\n\n\n0.096\n\n\n0.135\n\n\n\n\nmhc13\n\n\n-0.299\n\n\n-0.127\n\n\n-0.213\n\n\n0.122\n\n\n0.172\n\n\n\n\nmhc14\n\n\n-0.086\n\n\n0.047\n\n\n-0.020\n\n\n0.094\n\n\n0.133\n\n\n\n\n\n\n\nOnly DIF between genders found, and none large enough to cause problems.\n\n\n\n\nCode\nRItif(df)\n\n\n\n\n\n\n\n\nItem fit shows some minor issues, but we’ll leave them as good enough for the primary goal of visualization. Do have a look at the item hierarchy and give it some thought?"
  },
  {
    "objectID": "latentResp/LatentResponse.html#other-visualizations",
    "href": "latentResp/LatentResponse.html#other-visualizations",
    "title": "What’s in a latent score?",
    "section": "6 Other visualizations",
    "text": "6 Other visualizations\nWe can use the same set of scores and combine them with the previously reported figure for item hierarchy.\n\n6.1 Targeting example\n\n\nCode\nRIitemHierarchy(df[,c(1:9)]) +\n  geom_hline(aes(yintercept = avg4), linetype = 2, color = \"red\") +\n  annotate(\"rect\", xmin = 0, xmax = Inf, ymin = avg4 - sem4, ymax = avg4 + sem4, alpha = .1) +\n  annotate(\"text\", label = \"60-80\", y = avg4-0.1, x = 9, angle = 90, size = 3, color = \"darkorange\") +\n  geom_hline(aes(yintercept = avg2), linetype = 2, color = \"red\") +\n  annotate(\"rect\", xmin = 0, xmax = Inf, ymin = avg2 - sem2, ymax = avg2 + sem2, alpha = .1) +\n  annotate(\"text\", label = \"20-40\", y = avg2-0.1, x = 9, angle = 90, size = 3, color = \"darkorange\")"
  }
]